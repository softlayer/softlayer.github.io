<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SoftLayer_Metric_Tracking_Object on SoftLayer API</title>
    <link>https://sldn.softlayer.com/classes/SoftLayer_Metric_Tracking_Object/</link>
    <description>Recent content in SoftLayer_Metric_Tracking_Object on SoftLayer API</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 07 Oct 2020 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://sldn.softlayer.com/classes/SoftLayer_Metric_Tracking_Object/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Managing Metric Tracking Object services</title>
      <link>https://sldn.softlayer.com/go/Metric_Tracking_Object_services.go/</link>
      <pubDate>Wed, 07 Oct 2020 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/go/Metric_Tracking_Object_services.go/</guid>
      <description>Setup Each of these snippets below will share basically the same initialization code, so to save some space we will include the initialization code here, and assume you can setup the SoftLayer client before running each example.&#xA;package main import ( &amp;#34;encoding/json&amp;#34; &amp;#34;fmt&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/datatypes&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/services&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/session&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/sl&amp;#34; &amp;#34;time&amp;#34; ) func main() { username := &amp;#34;set - me&amp;#34; apikey := &amp;#34;set - me&amp;#34; // Create SoftLayer API session sess := session.New(username, apikey) virtualService := services.</description>
    </item>
    <item>
      <title>CPU and Memory usage in Virtual servers</title>
      <link>https://sldn.softlayer.com/java/UsageVirtualServer.java/</link>
      <pubDate>Wed, 10 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/java/UsageVirtualServer.java/</guid>
      <description>import com.softlayer.api.ApiClient; import com.softlayer.api.RestApiClient; import com.softlayer.api.service.container.bandwidth.GraphOutputs; import com.softlayer.api.service.container.metric.data.Type; import com.softlayer.api.service.metric.tracking.Object; import com.softlayer.api.service.metric.tracking.object.Data; import com.softlayer.api.service.virtual.Guest; import javax.imageio.ImageIO; import java.awt.image.BufferedImage; import java.io.*; import java.text.ParseException; import java.text.SimpleDateFormat; import java.time.LocalDate; import java.time.ZoneId; import java.time.format.DateTimeFormatter; import java.util.*; public class Usage { private Guest.Service guestService; private Object.Service trakingService; public Usage(Guest.Service guestService, Object.Service trakingService) { this.guestService = guestService; this.trakingService = trakingService; } public Map&amp;lt;String, Double&amp;gt; calculateAverages(List&amp;lt;Data&amp;gt; records) { Map&amp;lt;String, Double&amp;gt; total = new HashMap&amp;lt;&amp;gt;(); Map&amp;lt;String, Integer&amp;gt; totalCounter = new HashMap&amp;lt;&amp;gt;(); for (Data item : records) { if (!</description>
    </item>
    <item>
      <title>CPU and Memory usage in Virtual servers</title>
      <link>https://sldn.softlayer.com/php/UsageVirtualServer.php/</link>
      <pubDate>Mon, 30 Mar 2020 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/php/UsageVirtualServer.php/</guid>
      <description>&amp;lt;?php require_once(dirname(__FILE__) . &amp;#39;/SoftLayer/SoapClient.class.php&amp;#39;); class VirtualServers { public $client_virtual; public $metric_trackingId; public $client_metric; function __construct($client_virtual,$client_metric) { $this-&amp;gt;client_virtual = $client_virtual; $this-&amp;gt;client_metric = $client_metric; } function _calculate_averages($records) { $total = array(); $total_counter = array(); foreach ($records as $item) { if (!isset($total[$item-&amp;gt;type])) { $total[$item-&amp;gt;type] = $item-&amp;gt;counter; $total_counter[$item-&amp;gt;type] = 1; } else { $item_counter_total = $total[$item-&amp;gt;type] + $item-&amp;gt;counter; $total[$item-&amp;gt;type] = $item_counter_total; $total_counter[$item-&amp;gt;type] = $total_counter[$item-&amp;gt;type] + 1; } } $average = array(); foreach ($total as $key =&amp;gt; $value) { $usage_counter = $value / $total_counter[$key]; $average[$key] = $usage_counter; } return $average; } function get_cpu_usage($start_date, $end_date) { $guest = $this-&amp;gt;client_virtual-&amp;gt;getObject(); $valid_types = array(); for ($i = 0; $i &amp;lt; $guest-&amp;gt;startCpus; $i++) { $valid_type = (object)array(&amp;#34;keyName&amp;#34; =&amp;gt; &amp;#34;CPU&amp;#34; .</description>
    </item>
    <item>
      <title>Working with Metric_Tracking_Object</title>
      <link>https://sldn.softlayer.com/java/metricTrackingObject.java/</link>
      <pubDate>Mon, 27 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/java/metricTrackingObject.java/</guid>
      <description>Metric_Tracking_Object&#xA;Get the all metric tracking ids import java.util.List; import com.google.gson.Gson; import com.google.gson.GsonBuilder; import com.softlayer.api.ApiClient; import com.softlayer.api.RestApiClient; import com.softlayer.api.service.Account; import com.softlayer.api.service.virtual.Guest; public class GetMetricTracking { public static void main(String[] args) { // Your SoftLayer API username and key. String user = &amp;#34;set - me&amp;#34;; String apiKey = &amp;#34;set - me&amp;#34;; // API client ApiClient client = new RestApiClient().withCredentials(user, apiKey); // SoftLayer_Account Account.Service account= Account.service(client); account.withMask().virtualGuests().id(); account.withMask().virtualGuests().metricTrackingObjectId(); try { // Retrieve the all metric tracking object Id with Virtual guest attribute in false List&amp;lt;Guest&amp;gt; container = account.</description>
    </item>
    <item>
      <title>Working with Metric_Tracking_Object</title>
      <link>https://sldn.softlayer.com/python/metric_tracking_object.py/</link>
      <pubDate>Fri, 20 Dec 2019 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/python/metric_tracking_object.py/</guid>
      <description>Metric_Tracking_Object&#xA;Get the all metric tracking ids import SoftLayer import json client = SoftLayer.create_client_from_env() account_service = client[&amp;#39;Account&amp;#39;] mask = &amp;#39;id,metricTrackingObject[id]&amp;#39; try: response = account_service.getVirtualGuests(mask = mask) print(json.dumps(response, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to list the response for the package: \nfaultCode= %s, \n \nfaultString= %s&amp;#34; % (e.faultCode, e.faultString)) Get bandwidth data import SoftLayer import json client = SoftLayer.create_client_from_env() metric_service = client[&amp;#39;Metric_Tracking_Object&amp;#39;] startDate = &amp;#39;2019-07-09T19:06:11-06:00&amp;#39; endDate = &amp;#39;2019-07-09T19:06:11-16:00&amp;#39; body = &amp;#39;public&amp;#39; &amp;#34;&amp;#34;&amp;#34; Set with Metric_Tracking_Object id.</description>
    </item>
    <item>
      <title>CPU and Memory usage in Virtual servers</title>
      <link>https://sldn.softlayer.com/python/get_virtual_guest_usage_records/</link>
      <pubDate>Wed, 10 Apr 2019 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/python/get_virtual_guest_usage_records/</guid>
      <description>This example will print out the average memory and CPU usage for a given time period for all virtual guests on your account.&#xA;Time Format Use the following time format for any requests. YYYY-MM-DDTHH:MM:SS or Epoch Time will work. These times are all tracked in CST, and the response will be in your users local timezone. When requesting data on day boundaries, your start time should be 00:00 and end time should be 23:59</description>
    </item>
    <item>
      <title>Bandwidth Usage Reports</title>
      <link>https://sldn.softlayer.com/python/bandwidthData/</link>
      <pubDate>Wed, 13 Feb 2019 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/python/bandwidthData/</guid>
      <description>Data Time Alignment The SoftLayer_Metric_TrackingObject class will auto-align your requested time to its nearest data collection boundary.&#xA;For example, if you wanted bandwidth data from 2019-02-03T00:30:00 to 2019-02-04T00:30:01 with a 3600s rollup, you would get data back from 2019-02-03T01:00:00 to 2019-02-04T00:00:00&#xA;This is especially problematic when requesting rollups for 12 and 24 hour periods. For these, the collection boundary starts at 00:00 UTC. So if you are in CST timezone for example, your request of data from 2019-02-03T00:00:00 to 2019-02-04T00:00:00 will get aligned to 2019-02-03T18:00:00-06:00 and 2019-02-03T18:00:00-06:00</description>
    </item>
    <item>
      <title>getBandwidthData</title>
      <link>https://sldn.softlayer.com/reference/services/SoftLayer_Metric_Tracking_Object/getBandwidthData/</link>
      <pubDate>Mon, 12 Feb 2018 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/reference/services/SoftLayer_Metric_Tracking_Object/getBandwidthData/</guid>
      <description>REST Example curl -g -u $SL_USER:$SL_APIKEY -X POST -d &amp;#39;{&amp;#34;parameters&amp;#34;: [dateTime, dateTime, string, int]}&amp;#39; \ &amp;#39;https://api.softlayer.com/rest/v3.1/SoftLayer_Metric_Tracking_Object/{SoftLayer_Metric_Tracking_ObjectID}/getBandwidthData&amp;#39; </description>
    </item>
    <item>
      <title>getBandwidthGraph</title>
      <link>https://sldn.softlayer.com/reference/services/SoftLayer_Metric_Tracking_Object/getBandwidthGraph/</link>
      <pubDate>Mon, 12 Feb 2018 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/reference/services/SoftLayer_Metric_Tracking_Object/getBandwidthGraph/</guid>
      <description>REST Example curl -g -u $SL_USER:$SL_APIKEY -X POST -d &amp;#39;{&amp;#34;parameters&amp;#34;: [dateTime, dateTime, string, int, int, int, boolean]}&amp;#39; \ &amp;#39;https://api.softlayer.com/rest/v3.1/SoftLayer_Metric_Tracking_Object/{SoftLayer_Metric_Tracking_ObjectID}/getBandwidthGraph&amp;#39; </description>
    </item>
    <item>
      <title>getBandwidthTotal</title>
      <link>https://sldn.softlayer.com/reference/services/SoftLayer_Metric_Tracking_Object/getBandwidthTotal/</link>
      <pubDate>Mon, 12 Feb 2018 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/reference/services/SoftLayer_Metric_Tracking_Object/getBandwidthTotal/</guid>
      <description>REST Example curl -g -u $SL_USER:$SL_APIKEY -X POST -d &amp;#39;{&amp;#34;parameters&amp;#34;: [dateTime, dateTime, string, string]}&amp;#39; \ &amp;#39;https://api.softlayer.com/rest/v3.1/SoftLayer_Metric_Tracking_Object/{SoftLayer_Metric_Tracking_ObjectID}/getBandwidthTotal&amp;#39; </description>
    </item>
    <item>
      <title>getDetailsForDateRange</title>
      <link>https://sldn.softlayer.com/reference/services/SoftLayer_Metric_Tracking_Object/getDetailsForDateRange/</link>
      <pubDate>Mon, 12 Feb 2018 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/reference/services/SoftLayer_Metric_Tracking_Object/getDetailsForDateRange/</guid>
      <description>REST Example curl -g -u $SL_USER:$SL_APIKEY -X POST -d &amp;#39;{&amp;#34;parameters&amp;#34;: [dateTime, dateTime, string]}&amp;#39; \ &amp;#39;https://api.softlayer.com/rest/v3.1/SoftLayer_Metric_Tracking_Object/{SoftLayer_Metric_Tracking_ObjectID}/getDetailsForDateRange&amp;#39; </description>
    </item>
    <item>
      <title>getGraph</title>
      <link>https://sldn.softlayer.com/reference/services/SoftLayer_Metric_Tracking_Object/getGraph/</link>
      <pubDate>Mon, 12 Feb 2018 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/reference/services/SoftLayer_Metric_Tracking_Object/getGraph/</guid>
      <description>REST Example curl -g -u $SL_USER:$SL_APIKEY -X POST -d &amp;#39;{&amp;#34;parameters&amp;#34;: [dateTime, dateTime, string]}&amp;#39; \ &amp;#39;https://api.softlayer.com/rest/v3.1/SoftLayer_Metric_Tracking_Object/{SoftLayer_Metric_Tracking_ObjectID}/getGraph&amp;#39; </description>
    </item>
    <item>
      <title>getMetricDataTypes</title>
      <link>https://sldn.softlayer.com/reference/services/SoftLayer_Metric_Tracking_Object/getMetricDataTypes/</link>
      <pubDate>Mon, 12 Feb 2018 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/reference/services/SoftLayer_Metric_Tracking_Object/getMetricDataTypes/</guid>
      <description>REST Example curl -g -u $SL_USER:$SL_APIKEY -X GET \ &amp;#39;https://api.softlayer.com/rest/v3.1/SoftLayer_Metric_Tracking_Object/{SoftLayer_Metric_Tracking_ObjectID}/getMetricDataTypes&amp;#39; </description>
    </item>
    <item>
      <title>getObject</title>
      <link>https://sldn.softlayer.com/reference/services/SoftLayer_Metric_Tracking_Object/getObject/</link>
      <pubDate>Mon, 12 Feb 2018 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/reference/services/SoftLayer_Metric_Tracking_Object/getObject/</guid>
      <description>REST Example curl -g -u $SL_USER:$SL_APIKEY -X GET \ &amp;#39;https://api.softlayer.com/rest/v3.1/SoftLayer_Metric_Tracking_Object/{SoftLayer_Metric_Tracking_ObjectID}/getObject&amp;#39; </description>
    </item>
    <item>
      <title>getSummary</title>
      <link>https://sldn.softlayer.com/reference/services/SoftLayer_Metric_Tracking_Object/getSummary/</link>
      <pubDate>Mon, 12 Feb 2018 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/reference/services/SoftLayer_Metric_Tracking_Object/getSummary/</guid>
      <description>REST Example curl -g -u $SL_USER:$SL_APIKEY -X POST -d &amp;#39;{&amp;#34;parameters&amp;#34;: [string]}&amp;#39; \ &amp;#39;https://api.softlayer.com/rest/v3.1/SoftLayer_Metric_Tracking_Object/{SoftLayer_Metric_Tracking_ObjectID}/getSummary&amp;#39; </description>
    </item>
    <item>
      <title>getSummaryData</title>
      <link>https://sldn.softlayer.com/reference/services/SoftLayer_Metric_Tracking_Object/getSummaryData/</link>
      <pubDate>Mon, 12 Feb 2018 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/reference/services/SoftLayer_Metric_Tracking_Object/getSummaryData/</guid>
      <description>REST Example curl -g -u $SL_USER:$SL_APIKEY -X POST -d &amp;#39;{&amp;#34;parameters&amp;#34;: [dateTime, dateTime, SoftLayer_Container_Metric_Data_Type, int]}&amp;#39; \ &amp;#39;https://api.softlayer.com/rest/v3.1/SoftLayer_Metric_Tracking_Object/{SoftLayer_Metric_Tracking_ObjectID}/getSummaryData&amp;#39; </description>
    </item>
    <item>
      <title>getType</title>
      <link>https://sldn.softlayer.com/reference/services/SoftLayer_Metric_Tracking_Object/getType/</link>
      <pubDate>Mon, 12 Feb 2018 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/reference/services/SoftLayer_Metric_Tracking_Object/getType/</guid>
      <description>REST Example curl -g -u $SL_USER:$SL_APIKEY -X GET \ &amp;#39;https://api.softlayer.com/rest/v3.1/SoftLayer_Metric_Tracking_Object/{SoftLayer_Metric_Tracking_ObjectID}/getType&amp;#39; </description>
    </item>
    <item>
      <title>SoftLayer_Metric_Tracking_Object</title>
      <link>https://sldn.softlayer.com/reference/datatypes/SoftLayer_Metric_Tracking_Object/</link>
      <pubDate>Mon, 12 Feb 2018 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/reference/datatypes/SoftLayer_Metric_Tracking_Object/</guid>
      <description></description>
    </item>
    <item>
      <title>SoftLayer_Metric_Tracking_Object</title>
      <link>https://sldn.softlayer.com/reference/services/SoftLayer_Metric_Tracking_Object/</link>
      <pubDate>Mon, 12 Feb 2018 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/reference/services/SoftLayer_Metric_Tracking_Object/</guid>
      <description></description>
    </item>
    <item>
      <title>Bandwidth</title>
      <link>https://sldn.softlayer.com/csharp/bandwidth/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/csharp/bandwidth/</guid>
      <description>Bandwidth Graph namespace GetBandwidthGraphNamespace { using System; using System.Collections.Generic; class GetBandwidthGraph { /// &amp;lt;summary&amp;gt; /// Retrieve a bandwidth graph for a single server. /// Retrieve a bandwidth graph for a single server for an arbitrary start and /// end date, specifying graph size and other graphing options. We can do this /// with two calls to the SoftLayer API. /// Counter data such as bandwidth counters and VSI resource use are stored in /// a server&amp;#39;s metric tracking object.</description>
    </item>
    <item>
      <title>Bandwidth</title>
      <link>https://sldn.softlayer.com/perl/bandwidth/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/perl/bandwidth/</guid>
      <description>Bandwidth Graph # Retrieve a bandwidth graph for a single server. # # Retrieving a bandwidth graph for a single server for an arbitrary start and # end date, specifying graph size and other graphing options. We can do this # with two calls to the SoftLayer API. # # Counter data such as bandwidth counters and CCI resource use are stored in # a server&amp;#39;s metric tracking object. Our first call retrieves that server&amp;#39;s # tracking object record.</description>
    </item>
    <item>
      <title>get_brandwidth_graph.rb</title>
      <link>https://sldn.softlayer.com/ruby/get_brandwidth_graph.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/ruby/get_brandwidth_graph.rb/</guid>
      <description># # Retrieve a bandwidth graph for a single server. # # Retrieve a bandwidth graph for a single server for an arbitrary start and # end date, specifying graph size and other graphing options. We can do this # with two calls to the SoftLayer API. # # Counter data such as bandwidth counters and CCI resource use are stored in # a server&amp;#39;s metric tracking object. Our first call retrieves that server&amp;#39;s # tracking object record.</description>
    </item>
    <item>
      <title>restBrandwindthGraph.txt</title>
      <link>https://sldn.softlayer.com/rest/restBrandwindthGraph.txt/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/rest/restBrandwindthGraph.txt/</guid>
      <description>********* TO GET the metrict tracking object ************ URL: https://$USERNAME:$APIKEY@api.softlayer.com/rest/v3/SoftLayer_Hardware_Server/$ServerID/getMetricTrackingObject.json Method: Get ********* TO GET the graph ************ URL : https://$USERNAME:$APIKEY@api.softlayer.com/rest/v3/SoftLayer_Metric_Tracking_Object/$MetricTrackingID/getBandwidthGraph.json Method: POST JSON: { &amp;#34;parameters&amp;#34;: [ &amp;#34;2010-10-1T21:32:52&amp;#34;, &amp;#34;2014-8-27T21:32:52&amp;#34;, &amp;#34;public&amp;#34;, 8, 827, 273, true ] } </description>
    </item>
  </channel>
</rss>
