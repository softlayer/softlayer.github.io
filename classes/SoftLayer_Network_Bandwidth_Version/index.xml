<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SoftLayer_Network_Bandwidth_Version on SoftLayer API</title>
    <link>https://sldn.softlayer.com/classes/SoftLayer_Network_Bandwidth_Version/</link>
    <description>Recent content in SoftLayer_Network_Bandwidth_Version on SoftLayer API</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 23 Nov 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://sldn.softlayer.com/classes/SoftLayer_Network_Bandwidth_Version/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>add_devices_to_pool.rb</title>
      <link>https://sldn.softlayer.com/ruby/add_devices_to_pool.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/ruby/add_devices_to_pool.rb/</guid>
      <description># Add servers and VSIs to a bandwidth pool. # # Important manual pages # http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server # http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/findByIpAddress # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Hardware_Server # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/findByIpAddress # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest # http://sldn.softlayer.com/reference/services/SoftLayer_Network_Bandwidth_Version1_Allotment # http://sldn.softlayer.com/reference/services/SoftLayer_Network_Bandwidth_Version1_Allotment/requestVdrContentUpdates # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;awesome_print&amp;#39; list_server_ips = [&amp;#39;173.192.220.104&amp;#39;, &amp;#39;173.192.220.110&amp;#39;] list_vsi_ips = [&amp;#39;184.173.20.162&amp;#39;] pool_id = 151136 SL_API_USERNAME = &amp;#39;set me&amp;#39; SL_API_KEY = &amp;#39;set me&amp;#39; softlayer_client = SoftLayer::Client.new(username: SL_API_USERNAME, api_key: SL_API_KEY) hardware_service = softlayer_client.</description>
    </item>
    <item>
      <title>Bandwidth Pools</title>
      <link>https://sldn.softlayer.com/csharp/bandwidthPools/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/csharp/bandwidthPools/</guid>
      <description>Create Bandwidth Pool ﻿namespace BandwidthPools { using System; class CreateBandwidthPool { static void Main(string[] args) { // Your SoftLayer username string username = &amp;#34;set me&amp;#34;; // Your SoftLayer apiKey string apiKey = &amp;#34;set me&amp;#34;; // Define the bandwidth pool&amp;#39;s name string name = &amp;#34;TestBandwidthPool&amp;#34;; // Define the bandwidth pool&amp;#39;s locationGroupId int locationGroupId = 1; // Define the accountId associated with this bandwidth pool int accountId = 207819; // Creating a connection to the SoftLayer_Network_Bandwidth_Version1_Allotment API service and // bind our API username and key to it.</description>
    </item>
    <item>
      <title>create_pool.rb</title>
      <link>https://sldn.softlayer.com/ruby/create_pool.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/ruby/create_pool.rb/</guid>
      <description># Create a bandwidth pool. # # Important manual pages # http://sldn.softlayer.com/reference/services/SoftLayer_Network_Bandwidth_Version1_Allotment # http://sldn.softlayer.com/reference/services/SoftLayer_Network_Bandwidth_Version1_Allotment/createObject # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;awesome_print&amp;#39; template = { accountId: 207819, bandwidthAllotmentTypeId: 2, locationGroupId: 1, # The region for the pool. name: &amp;#39;test_pool_api&amp;#39; } SL_API_USERNAME = &amp;#39;set me&amp;#39; SL_API_KEY = &amp;#39;set me&amp;#39; softlayer_client = SoftLayer::Client.new(username: SL_API_USERNAME, api_key: SL_API_KEY) bandwidth_service = softlayer_client.service_named(&amp;#39;SoftLayer_Network_Bandwidth_Version1_Allotment&amp;#39;) begin result = bandwidth_service.createObject(template) ap result rescue StandardError =&amp;gt; e raise e end </description>
    </item>
    <item>
      <title>list_bandwidth_pools.rb</title>
      <link>https://sldn.softlayer.com/ruby/list_bandwidth_pools.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/ruby/list_bandwidth_pools.rb/</guid>
      <description># List the bandwidth pools in the account. # # Important manual pages # http://sldn.softlayer.com/reference/services/SoftLayer_Account # http://sldn.softlayer.com/reference/services/SoftLayer_Account/getBandwidthAllotments # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Network_Bandwidth_Version1_Allotment # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;awesome_print&amp;#39; pool_id = 115045 SL_API_USERNAME = &amp;#39;set me&amp;#39; SL_API_KEY = &amp;#39;set me&amp;#39; softlayer_client = SoftLayer::Client.new(username: SL_API_USERNAME, api_key: SL_API_KEY) account_service = softlayer_client.service_named(&amp;#39;SoftLayer_Account&amp;#39;) mask = &amp;#39;mask[id, name, serviceProviderId, locationGroup[name], locationGroup,&amp;#39;\ &amp;#39; hardwareCount, privateNetworkOnlyHardwareCount, virtualGuestCount,&amp;#39;\ &amp;#39; bareMetalInstanceCount, applicationDeliveryControllerCount,&amp;#39;\ &amp;#39; totalBandwidthAllocated, outboundPublicBandwidthUsage,&amp;#39;\ &amp;#39; bandwidthAllotmentTypeId, projectedPublicBandwidthUsage]&amp;#39; filter = SoftLayer::ObjectFilter.</description>
    </item>
    <item>
      <title>remove_devices_from_pool.rb</title>
      <link>https://sldn.softlayer.com/ruby/remove_devices_from_pool.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/ruby/remove_devices_from_pool.rb/</guid>
      <description># Remove servers and VSIs from a bandwidth pool. # # Important manual pages # http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server # http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/findByIpAddress # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Hardware_Server # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/findByIpAddress # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest # http://sldn.softlayer.com/reference/services/SoftLayer_Network_Bandwidth_Version1_Allotment # http://sldn.softlayer.com/reference/services/SoftLayer_Network_Bandwidth_Version1_Allotment/requestVdrContentUpdates # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;awesome_print&amp;#39; list_server_ips = [&amp;#39;184.172.45.210&amp;#39;, &amp;#39;108.168.251.167&amp;#39;] list_vsi_ips = [&amp;#39;169.54.234.102&amp;#39;] pool_id = 234419 SL_API_USERNAME = &amp;#39;set me&amp;#39; SL_API_KEY = &amp;#39;set me&amp;#39; softlayer_client = SoftLayer::Client.new(username: SL_API_USERNAME, api_key: SL_API_KEY) hardware_service = softlayer_client.</description>
    </item>
    <item>
      <title>RemoveServers.cs</title>
      <link>https://sldn.softlayer.com/csharp/RemoveServers.cs/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/csharp/RemoveServers.cs/</guid>
      <description>﻿//----------------------------------------------------------------------- // &amp;lt;copyright file=&amp;#34;RemoveServers.cs&amp;#34; company=&amp;#34;Softlayer&amp;#34;&amp;gt; // SoftLayer Technologies, Inc. // &amp;lt;/copyright&amp;gt; // &amp;lt;license&amp;gt; // http://sldn.softlayer.com/article/License // &amp;lt;/license&amp;gt; //----------------------------------------------------------------------- namespace BandwidthPools { using System; using System.Collections.Generic; class RemoveServers { /// &amp;lt;summary&amp;gt; /// Remove servers from a bandwidth pool /// This script removes servers from a bandwidth pool /// &amp;lt;/summary&amp;gt; /// &amp;lt;manualPages&amp;gt; /// http://sldn.softlayer.com/reference/services/SoftLayer_Network_Bandwidth_Version1_Allotment/requestVdrContentUpdates /// &amp;lt;/manualPages&amp;gt; static void Main(string[] args) { // Your SoftLayer username string username = &amp;#34;set me&amp;#34;; // You SoftLayer apiKey string apiKey = &amp;#34;set me&amp;#34;; // Declare the Bandwidth pool id int bandwidthPoolId = 236297; // Declare a collection of servers to be assigned to a bandwidth pool SoftLayer_Hardware[] hardwareToAdd = new SoftLayer_Hardware[]{}; // Declare a collection of servers to be unassigned from a allotment and assigned to the virtual private rack SoftLayer_Hardware[] hardwareToRemove = new SoftLayer_Hardware[]{}; // Declare a collection of VSI to be assigned to a bandwidth pool SoftLayer_Virtual_Guest[] cloudsToAdd = new SoftLayer_Virtual_Guest[] {}; // Declare a collection of VSI ids to be unassigned from an allotment and assigned to the virtual private rack int[] cloudsToRemoveArray = { 13115425, 18223423 }; // Declare the bandwidth pool to move the servers to provided only for backwards compatibility int optionalAllotmentId = 0; // Declare a collection of application delivery controllers to be assigned to a bandwidth pool SoftLayer_Network_Application_Delivery_Controller[] adcToAdd = new SoftLayer_Network_Application_Delivery_Controller[]{}; // Declare a collection of application delivery controllers to be unassigned from an allotment and assigned to the virtual private rack SoftLayer_Network_Application_Delivery_Controller[] adcToRemove = new SoftLayer_Network_Application_Delivery_Controller[]{}; // Creating a connection to the SoftLayer_Network_Bandwidth_Version1_Allotment API service and // bind our API username and key to it.</description>
    </item>
    <item>
      <title>Bandwidth Pools</title>
      <link>https://sldn.softlayer.com/python/bandwidthPoolsAndSubnets/</link>
      <pubDate>Thu, 16 Feb 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/python/bandwidthPoolsAndSubnets/</guid>
      <description>VDR SoftLayer allotments are a collection of servers that share all of the servers allocated bandwidth together.&#xA;This example below lists a few of the common ways of interacting with Bandwidth pools/allotments/Virtual Dedicated Racks.&#xA;import SoftLayer from pprint import pprint as pp class example(): def __init__(self): self.client = SoftLayer.Client() debugger = SoftLayer.DebugTransport(self.client.transport) self.client.transport = debugger def getPublicSubnets(self): &amp;#34;&amp;#34;&amp;#34; subnet types SECONDARY_ON_VLAN = Portable IPs PRIMARY SUBNET_ON_VLAN = static subnets PRIMARY_6 STATIC_IP_ROUTED GLOBAL_IP ADDITIONAL_PRIMARY &amp;#34;&amp;#34;&amp;#34; object_filter = { &amp;#39;publicSubnets&amp;#39; : { &amp;#39;subnetType&amp;#39; : { &amp;#39;operation&amp;#39;: &amp;#39;SECONDARY_ON_VLAN&amp;#39; } } } subnets = self.</description>
    </item>
  </channel>
</rss>
