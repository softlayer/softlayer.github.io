<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SoftLayer_Container_Bandwidth_GraphOutputs on SoftLayer API</title>
    <link>https://sldn.softlayer.com/classes/SoftLayer_Container_Bandwidth_GraphOutputs/</link>
    <description>Recent content in SoftLayer_Container_Bandwidth_GraphOutputs on SoftLayer API</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 13 Feb 2019 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://sldn.softlayer.com/classes/SoftLayer_Container_Bandwidth_GraphOutputs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Bandwidth Usage Reports</title>
      <link>https://sldn.softlayer.com/python/bandwidthData/</link>
      <pubDate>Wed, 13 Feb 2019 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/python/bandwidthData/</guid>
      <description>Data Time Alignment The SoftLayer_Metric_TrackingObject class will auto-align your requested time to its nearest data collection boundary.&#xA;For example, if you wanted bandwidth data from 2019-02-03T00:30:00 to 2019-02-04T00:30:01 with a 3600s rollup, you would get data back from 2019-02-03T01:00:00 to 2019-02-04T00:00:00&#xA;This is especially problematic when requesting rollups for 12 and 24 hour periods. For these, the collection boundary starts at 00:00 UTC. So if you are in CST timezone for example, your request of data from 2019-02-03T00:00:00 to 2019-02-04T00:00:00 will get aligned to 2019-02-03T18:00:00-06:00 and 2019-02-03T18:00:00-06:00</description>
    </item>
    <item>
      <title>SoftLayer_Container_Bandwidth_GraphOutputs</title>
      <link>https://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Bandwidth_GraphOutputs/</link>
      <pubDate>Mon, 12 Feb 2018 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Bandwidth_GraphOutputs/</guid>
      <description></description>
    </item>
    <item>
      <title>Bandwidth</title>
      <link>https://sldn.softlayer.com/csharp/bandwidth/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/csharp/bandwidth/</guid>
      <description>Bandwidth Graph namespace GetBandwidthGraphNamespace { using System; using System.Collections.Generic; class GetBandwidthGraph { /// &amp;lt;summary&amp;gt; /// Retrieve a bandwidth graph for a single server. /// Retrieve a bandwidth graph for a single server for an arbitrary start and /// end date, specifying graph size and other graphing options. We can do this /// with two calls to the SoftLayer API. /// Counter data such as bandwidth counters and VSI resource use are stored in /// a server&amp;#39;s metric tracking object.</description>
    </item>
    <item>
      <title>Bandwidth</title>
      <link>https://sldn.softlayer.com/perl/bandwidth/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/perl/bandwidth/</guid>
      <description>Bandwidth Graph # Retrieve a bandwidth graph for a single server. # # Retrieving a bandwidth graph for a single server for an arbitrary start and # end date, specifying graph size and other graphing options. We can do this # with two calls to the SoftLayer API. # # Counter data such as bandwidth counters and CCI resource use are stored in # a server&amp;#39;s metric tracking object. Our first call retrieves that server&amp;#39;s # tracking object record.</description>
    </item>
    <item>
      <title>get_bandwith_image_by_date.rb</title>
      <link>https://sldn.softlayer.com/ruby/get_bandwith_image_by_date.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/ruby/get_bandwith_image_by_date.rb/</guid>
      <description># Retrieve bandwith image by date. # # Use this method when needing a bandwidth image for a single guest. It will gather the correct input parameters # for the generic graphing utility based on the date ranges # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getBandwidthImageByDate # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Bandwidth_GraphOutputs # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;awesome_print&amp;#39; require &amp;#39;date&amp;#39; # The virtual guest id of the virtual guest object that&amp;#39;s going to be retrieved to retrieve a bandwith image.</description>
    </item>
    <item>
      <title>get_brandwidth_graph.rb</title>
      <link>https://sldn.softlayer.com/ruby/get_brandwidth_graph.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/ruby/get_brandwidth_graph.rb/</guid>
      <description># # Retrieve a bandwidth graph for a single server. # # Retrieve a bandwidth graph for a single server for an arbitrary start and # end date, specifying graph size and other graphing options. We can do this # with two calls to the SoftLayer API. # # Counter data such as bandwidth counters and CCI resource use are stored in # a server&amp;#39;s metric tracking object. Our first call retrieves that server&amp;#39;s # tracking object record.</description>
    </item>
  </channel>
</rss>
