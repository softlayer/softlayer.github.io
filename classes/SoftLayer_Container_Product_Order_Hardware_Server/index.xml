<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SoftLayer_Container_Product_Order_Hardware_Server on SoftLayer API</title>
    <link>https://sldn.softlayer.com/classes/SoftLayer_Container_Product_Order_Hardware_Server/</link>
    <description>Recent content in SoftLayer_Container_Product_Order_Hardware_Server on SoftLayer API</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 12 Jul 2021 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://sldn.softlayer.com/classes/SoftLayer_Container_Product_Order_Hardware_Server/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>More Bare Metal Server examples</title>
      <link>https://sldn.softlayer.com/go/server.go/</link>
      <pubDate>Mon, 12 Jul 2021 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/go/server.go/</guid>
      <description>A few examples on interacting with Bare Metal Server, SoftLayer_Hardware_Server.&#xA;package main import ( &amp;#34;encoding/json&amp;#34; &amp;#34;fmt&amp;#34; &amp;#34;github.com/IBM-Cloud/ibm-cloud-cli-sdk/bluemix/terminal&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/datatypes&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/filter&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/services&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/session&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/sl&amp;#34; ) // Session created using values set in the environment, or from the local configuration file (i.e. ~/.softlayer). var sess = session.New() type Dictionary map[string]string func main() { // Shows all servers in the account. listServers() // Shows all available packages to order/create a Bare Metal server. listServerPackages() // Shows just fast provision packages to order/create a Bare Metal server.</description>
    </item>
    <item>
      <title>Verify items conflicts in ordering</title>
      <link>https://sldn.softlayer.com/python/verify_items_conflicts_in_ordering/</link>
      <pubDate>Tue, 19 Mar 2019 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/python/verify_items_conflicts_in_ordering/</guid>
      <description>This example goes over how to find items conflicts in ordering, e.g. antivirus Windows has a conflict with OS linux, https://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item/#conflicts&#xA;import SoftLayer from SoftLayer.managers import ordering from pprint import pprint class ItemsConflicts: def __init__(self): self.client = SoftLayer.create_client_from_env() # slcli order package-list --package_type BARE_METAL_CPU # Will get you available package keynames self.package_keyname = &amp;#34;DUAL_INTEL_XEON_PROCESSOR_SCALABLE_FAMILY_4_DRIVES&amp;#34; self.complex_type = &amp;#39;SoftLayer_Container_Product_Order_Hardware_Server&amp;#39; def order(self, dc): order_svc = self.client[&amp;#39;Product_Order&amp;#39;] order_items = self.item_keynames() extras = { &amp;#34;hardware&amp;#34;: [ {&amp;#34;hostname&amp;#34;: &amp;#34;testOrder1&amp;#34;, &amp;#34;domain&amp;#34;: &amp;#34;test.</description>
    </item>
    <item>
      <title>SoftLayer_Container_Product_Order_Hardware_Server</title>
      <link>https://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Hardware_Server/</link>
      <pubDate>Mon, 12 Feb 2018 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Hardware_Server/</guid>
      <description></description>
    </item>
    <item>
      <title>create_bare_metal.pl</title>
      <link>https://sldn.softlayer.com/perl/create_bare_metal.pl/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/perl/create_bare_metal.pl/</guid>
      <description># Order a new server. # # Building a SoftLayer_Container_Product_Order object for a new # server order and pass it to the SoftLayer_Product_Order API service to order # it. In this care we&amp;#39;ll order a Xeon 3460 server with 2G RAM, 100mbit NICs, # 2000GB bandwidth, a 500G SATA drive, CentOS 5 32-bit, and default server # order options. See below for more details. # # Important manual pages: # http://sldn.</description>
    </item>
    <item>
      <title>create_bare_metal.rb</title>
      <link>https://sldn.softlayer.com/ruby/create_bare_metal.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/ruby/create_bare_metal.rb/</guid>
      <description># Order a Bare Metal Server. # # Build a SoftLayer_Container_Product_Order object for a new # server order and pass it to the SoftLayer_Product_Order API service to order # it. In this care we&amp;#39;ll order a Xeon 3460 server with 2G RAM, 100mbit NICs, # 2000GB bandwidth, a 500G SATA drive, CentOS 5 32-bit, and default server # order options. See below for more details. # # Important manual pages: # http://sldn.</description>
    </item>
    <item>
      <title>create_server_from_another.rb</title>
      <link>https://sldn.softlayer.com/ruby/create_server_from_another.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/ruby/create_server_from_another.rb/</guid>
      <description># Create a server from another. # # The script looks for a server with a determinate IP address ,then # gathers the order information from that server and build a new order # # Important manual pages: # https://sldn.softlayer.com/reference/services/SoftLayer_Account # https://sldn.softlayer.com/reference/services/SoftLayer_Product_Order # https://sldn.softlayer.com/reference/services/SoftLayer_Billing_Order # https://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder # https://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder # # @license &amp;lt;http://sldn.softlayer.com/article/License&amp;gt; # @author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; ip_address_server_to_copy = &amp;#39;50.</description>
    </item>
    <item>
      <title>Order Server with RAID Config</title>
      <link>https://sldn.softlayer.com/java/OrderServerWithRaidConfig/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/java/OrderServerWithRaidConfig/</guid>
      <description>import java.math.BigDecimal; import java.util.ArrayList; import java.util.Arrays; import java.util.List; import com.google.gson.Gson; import com.google.gson.GsonBuilder; import com.softlayer.api.ApiClient; import com.softlayer.api.RestApiClient; import com.softlayer.api.service.Hardware; import com.softlayer.api.service.container.product.order.storage.Group; import com.softlayer.api.service.container.product.order.storage.group.Partition; import com.softlayer.api.service.product.Order; import com.softlayer.api.service.product.item.Price; public class OrderWithDrivePartition { public static void main(String[] args) { String username = &amp;#34;set me&amp;#34;; String apiKey = &amp;#34;set me&amp;#34;; ApiClient client = new RestApiClient().withCredentials(username, apiKey); // Required values to place an order long quantity = 1; long packageId = 257; // Declare hostname, domain and network components of guests you want to order, add more // guest objects if quantity is greater than 1 List&amp;lt;Hardware&amp;gt; baremetals = new ArrayList&amp;lt;Hardware&amp;gt;(); Hardware server = new Hardware(); server.</description>
    </item>
    <item>
      <title>order_preset_server.py</title>
      <link>https://sldn.softlayer.com/python/order_preset_server.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/python/order_preset_server.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Order a new server with preset configuration. The presets used to simplify ordering by eliminating the need for price ids when submitting orders. Also when the order contains a preset id, it is not possible to configure VLANs in the order. Important manual pages: http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order http://sldn.softlayer.com/reference/datatypes/SoftLayer_Hardware_Server http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Hardware_Server License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # Your SoftLayer API username and key. API_USERNAME = &amp;#39;set-me&amp;#39; # Generate one at https://control.</description>
    </item>
    <item>
      <title>Order Server with security software</title>
      <link>https://sldn.softlayer.com/php/orderBareMetal/</link>
      <pubDate>Wed, 11 Nov 2015 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/php/orderBareMetal/</guid>
      <description>&amp;lt;?php require_once &amp;#39;./vendor/autoload.php&amp;#39;; class Example { function __construct() { $this-&amp;gt;apiUsername = &amp;#39;&amp;#39;; $this-&amp;gt;apiKey = &amp;#39;&amp;#39;; } function getAllPackages() { $packageClient = \SoftLayer\SoapClient::getClient(&amp;#39;SoftLayer_Product_Package&amp;#39;, null, $this-&amp;gt;apiUsername, $this-&amp;gt;apiKey ); $packages = $packageClient-&amp;gt;getAllObjects(); print &amp;#34;ID -&amp;gt; Name \n&amp;#34;; foreach($packages as $package) { print $package-&amp;gt;id . &amp;#34; -&amp;gt; &amp;#34; . $package-&amp;gt;name . &amp;#34;\n&amp;#34;; } } function getPackageById($id=0, $onlyShow=0, $showPrices = 1) { $packageClient = \SoftLayer\SoapClient::getClient(&amp;#39;SoftLayer_Product_Package&amp;#39;, $id, $this-&amp;gt;apiUsername, $this-&amp;gt;apiKey ); $package = $packageClient-&amp;gt;getItems(); print &amp;#34;ID, KeyName, Description \n&amp;#34;; foreach ($package as $item) { if ($onlyShow == 0 || $onlyShow == $item-&amp;gt;id) { print $item-&amp;gt;id .</description>
    </item>
  </channel>
</rss>
