<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>managepassword on SoftLayer API</title>
    <link>https://sldn.softlayer.com/tags/managepassword/</link>
    <description>Recent content in managepassword on SoftLayer API</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 03 May 2019 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://sldn.softlayer.com/tags/managepassword/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Working with virtual guest passwords</title>
      <link>https://sldn.softlayer.com/python/virtual_guest_password.py/</link>
      <pubDate>Fri, 03 May 2019 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/python/virtual_guest_password.py/</guid>
      <description>Create a Virtual Guest Credential from pprint import pprint import SoftLayer from prettytable import PrettyTable class Server: def __init__(self): client = SoftLayer.create_client_from_env() self.server_service = client[&amp;#39;SoftLayer_Virtual_Guest&amp;#39;] self.password_service = client[&amp;#39;SoftLayer_Software_Component_Password&amp;#39;] def print_software_components(self, serverId): mask = &amp;#39;mask[softwareLicense[id,softwareDescription[name]]]&amp;#39; components_response = self.server_service.getSoftwareComponents(id=serverId, mask=mask) table = PrettyTable([&amp;#34;name&amp;#34;]) for componet in components_response: table.add_row([componet[&amp;#34;softwareLicense&amp;#34;][&amp;#34;softwareDescription&amp;#34;][&amp;#34;name&amp;#34;]]) print(table) def create_credential(self, server_id, name=None, username=None, password=None, notes=None): # Retrieve the software components of a server. components_response = self.server_service.getSoftwareComponents(id=server_id, mask=&amp;#39;mask[softwareLicense]&amp;#39;) softwareId = 0 for component in components_response: if name == component[&amp;#39;softwareLicense&amp;#39;][&amp;#39;softwareDescription&amp;#39;][&amp;#39;name&amp;#39;]: softwareId = component[&amp;#39;id&amp;#39;] # Build a SoftLayer_Software_Component_Password object templatePass = { &amp;#34;username&amp;#34;: username, &amp;#34;password&amp;#34;: password, &amp;#34;notes&amp;#34;: notes, &amp;#34;softwareId&amp;#34;: softwareId } try: result = self.</description>
    </item>
    <item>
      <title>create_password.py</title>
      <link>https://sldn.softlayer.com/python/create_password.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/python/create_password.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Create a new password for a device. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Software_Component_Password http://sldn.softlayer.com/reference/services/SoftLayer_Software_Component_Password/createObject http://sldn.softlayer.com/reference/datatypes/SoftLayer_Software_Component_Password/ License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # The software component id which contains the password. softwareId = 7946585 username = &amp;#34;newUser2&amp;#34; password = &amp;#34;newPass&amp;#34; # optional field notes = &amp;#34;my optional note&amp;#34; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) passwordService = client[&amp;#39;SoftLayer_Software_Component_Password&amp;#39;] # Build a SoftLayer_Software_Component_Password object templatePass = { &amp;#34;username&amp;#34;: username, &amp;#34;password&amp;#34;: password, &amp;#34;notes&amp;#34;: notes, &amp;#34;softwareId&amp;#34;: softwareId } try: result = passwordService.</description>
    </item>
    <item>
      <title>get_passwords_for_a_server.py</title>
      <link>https://sldn.softlayer.com/python/get_passwords_for_a_server.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/python/get_passwords_for_a_server.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get the passwords for a server. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server http://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/getSoftwareComponents License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; serverId = 179996 client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) serverService = client[&amp;#39;SoftLayer_Hardware_Server&amp;#39;] objectMask = &amp;#39;mask[passwords,softwareLicense]&amp;#39; try: components = serverService.getSoftwareComponents(id=serverId, mask=objectMask) print(json.dumps(components, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to get the passwords faultCode=%s, faultString=%s&amp;#34; % (e.</description>
    </item>
    <item>
      <title>get_passwrods_for_a_vsi.py</title>
      <link>https://sldn.softlayer.com/python/get_passwrods_for_a_vsi.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/python/get_passwrods_for_a_vsi.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get the passwords for a vsi. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getSoftwareComponents License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; vsiId = 13102629 client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) vsiService = client[&amp;#39;SoftLayer_Virtual_Guest&amp;#39;] objectMask = &amp;#39;mask[passwords,softwareLicense]&amp;#39; try: components = vsiService.getSoftwareComponents(id=vsiId, mask=objectMask) print(json.dumps(components, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to get the passwords faultCode=%s, faultString=%s&amp;#34; % (e.</description>
    </item>
    <item>
      <title>list_passwords.py</title>
      <link>https://sldn.softlayer.com/python/list_passwords.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/python/list_passwords.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; List the passwords of the devices in the account. &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) searchService = client[&amp;#39;SoftLayer_Search&amp;#39;] objectMask = &amp;#34;mask[resource(SoftLayer_Hardware)[softwareComponents.passwords,softwareComponents.softwareLicense.softwareDescription.name,softwareComponents.softwareLicense.softwareDescription.operatingSystem,softwareComponents.softwareLicense.softwareDescription.manufacturer,softwareComponents.passwords.id,fullyQualifiedDomainName,id,serviceProviderId,primaryIpAddress,softwareComponents.passwords.password,softwareComponents.passwords.username,softwareComponents.passwords.createDate,softwareComponents.passwords.modifyDate,softwareComponents.passwords.notes,softwareComponents.passwords.port,softwareComponents.softwareLicense.softwareDescription.version,datacenter.longName,datacenter.id],resource(SoftLayer_Hardware_Server)[softwareComponents.passwords,softwareComponents.softwareLicense.softwareDescription.name,softwareComponents.softwareLicense.softwareDescription.operatingSystem,softwareComponents.softwareLicense.softwareDescription.manufacturer,softwareComponents.passwords.id,fullyQualifiedDomainName,id,serviceProviderId,primaryIpAddress,softwareComponents.passwords.password,softwareComponents.passwords.username,softwareComponents.passwords.createDate,softwareComponents.passwords.modifyDate,softwareComponents.passwords.notes,softwareComponents.passwords.port,softwareComponents.softwareLicense.softwareDescription.version,datacenter.longName,datacenter.id],resource(SoftLayer_Virtual_Guest)[softwareComponents.passwords,softwareComponents.softwareLicense.softwareDescription.name,softwareComponents.softwareLicense.softwareDescription.operatingSystem,operatingSystem.softwareLicense.softwareDescription.manufacturer,operatingSystem.softwareLicense.softwareDescription.name,softwareComponents.passwords.id,fullyQualifiedDomainName,id,primaryIpAddress,softwareComponents.passwords.password,softwareComponents.passwords.username,softwareComponents.passwords.createDate,softwareComponents.passwords.modifyDate,softwareComponents.passwords.notes,softwareComponents.passwords.port,operatingSystem.softwareLicense.softwareDescription.operatingSystem,datacenter.longName,datacenter.id]]&amp;#34; try: devices = searchService.advancedSearch(&amp;#34;_objectType:SoftLayer_Hardware,SoftLayer_Virtual_Guest&amp;#34;, mask=objectMask) passwords = [] for device in devices: if &amp;#39;resource&amp;#39; in device: for component in device[&amp;#39;resource&amp;#39;][&amp;#39;softwareComponents&amp;#39;]: for pas in component[&amp;#39;passwords&amp;#39;]: password = {} password[&amp;#39;name&amp;#39;] = device[&amp;#39;resource&amp;#39;][&amp;#39;fullyQualifiedDomainName&amp;#39;] password[&amp;#39;username&amp;#39;] = pas[&amp;#39;username&amp;#39;] password[&amp;#39;password&amp;#39;] = pas[&amp;#39;password&amp;#39;] password[&amp;#39;softwareComponentId&amp;#39;] = component[&amp;#39;id&amp;#39;] password[&amp;#39;passwordId&amp;#39;] = pas[&amp;#39;id&amp;#39;] password[&amp;#39;deviceId&amp;#39;] = device[&amp;#39;resource&amp;#39;][&amp;#39;id&amp;#39;] passwords.</description>
    </item>
  </channel>
</rss>
