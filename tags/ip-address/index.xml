<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ip address on SoftLayer API</title>
    <link>https://sldn.softlayer.com/tags/ip-address/</link>
    <description>Recent content in ip address on SoftLayer API</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 11 Dec 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://sldn.softlayer.com/tags/ip-address/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Edit IP address note</title>
      <link>https://sldn.softlayer.com/python/edit_ip_note/</link>
      <pubDate>Fri, 11 Dec 2015 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/python/edit_ip_note/</guid>
      <description>import SoftLayer class example(): def __init__(self): self.client = SoftLayer.Client() def getSubnets(self): subnets = self.client[&amp;#39;SoftLayer_Account&amp;#39;].getSubnets() for subnet in subnets: print(&amp;#34;%s - %s/%s - %s&amp;#34; % ( subnet[&amp;#39;id&amp;#39;], subnet[&amp;#39;gateway&amp;#39;], subnet[&amp;#39;cidr&amp;#39;], subnet[&amp;#39;networkVlanId&amp;#39;] ) ) def getIpInSubnet(self, subnet_id): mask = &amp;#34;mask[virtualGuest,hardware]&amp;#34; subnet = self.client[&amp;#39;SoftLayer_Network_Subnet&amp;#39;] ips = subnet.getIpAddresses(id=subnet_id,mask=mask) for ip in ips: status = &amp;#34;Free&amp;#34; if ip[&amp;#39;subnet&amp;#39;][&amp;#39;subnetType&amp;#39;] == &amp;#34;PRIMARY&amp;#34;: status = &amp;#34;Reserved&amp;#34; elif ip[&amp;#39;isNetwork&amp;#39;]: status = &amp;#34;Network Ip&amp;#34; elif ip[&amp;#39;isGateway&amp;#39;]: status = &amp;#34;Gateway Ip&amp;#34; try: status = ip[&amp;#39;virtualGuest&amp;#39;][&amp;#39;fullyQualifiedDomainName&amp;#39;] except KeyError: pass try: status = ip[&amp;#39;hardware&amp;#39;][&amp;#39;fullyQualifiedDomainName&amp;#39;] except KeyError: pass try: note = ip[&amp;#39;note&amp;#39;] except KeyError: note = &amp;#34;none&amp;#34; print(&amp;#34;%s: %s - %s - %s&amp;#34; % (ip[&amp;#39;id&amp;#39;],ip[&amp;#39;ipAddress&amp;#39;],status, note)) def editNote(self, ip_id, note): &amp;#34;&amp;#34;&amp;#34; With editObject on SoftLayer_Network_Subnet_IpAddress you can only edit the note, everything else will get ignored silently.</description>
    </item>
  </channel>
</rss>
