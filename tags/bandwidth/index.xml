<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>bandwidth on SoftLayer API</title>
    <link>https://sldn.softlayer.com/tags/bandwidth/</link>
    <description>Recent content in bandwidth on SoftLayer API</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 15 Oct 2020 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://sldn.softlayer.com/tags/bandwidth/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Bandwidth</title>
      <link>https://sldn.softlayer.com/article/bandwidth/</link>
      <pubDate>Thu, 15 Oct 2020 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/article/bandwidth/</guid>
      <description>Bandwidth Any device directly connected to the network will have its bandwidth tracked. This includes Hardware_Server, Virtual_Guest, Hardware_Firewall, and Network_Vlan_Firewall objects. We collect the data periodically from the switch port (or virtual port in the case of Virutal_Guests) and store it in our Metric_Tracking datastore. To interact with this raw data it is required to use the Metric_Tracking_Object service directly, as it wont be possible to pull in this information using a normal objectMask.</description>
    </item>
    <item>
      <title>Working with Metric_Tracking_Object</title>
      <link>https://sldn.softlayer.com/java/metricTrackingObject.java/</link>
      <pubDate>Mon, 27 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/java/metricTrackingObject.java/</guid>
      <description>Metric_Tracking_Object&#xA;Get the all metric tracking ids import java.util.List; import com.google.gson.Gson; import com.google.gson.GsonBuilder; import com.softlayer.api.ApiClient; import com.softlayer.api.RestApiClient; import com.softlayer.api.service.Account; import com.softlayer.api.service.virtual.Guest; public class GetMetricTracking { public static void main(String[] args) { // Your SoftLayer API username and key. String user = &amp;#34;set - me&amp;#34;; String apiKey = &amp;#34;set - me&amp;#34;; // API client ApiClient client = new RestApiClient().withCredentials(user, apiKey); // SoftLayer_Account Account.Service account= Account.service(client); account.withMask().virtualGuests().id(); account.withMask().virtualGuests().metricTrackingObjectId(); try { // Retrieve the all metric tracking object Id with Virtual guest attribute in false List&amp;lt;Guest&amp;gt; container = account.</description>
    </item>
    <item>
      <title>Working with Metric_Tracking_Object</title>
      <link>https://sldn.softlayer.com/python/metric_tracking_object.py/</link>
      <pubDate>Fri, 20 Dec 2019 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/python/metric_tracking_object.py/</guid>
      <description>Metric_Tracking_Object&#xA;Get the all metric tracking ids import SoftLayer import json client = SoftLayer.create_client_from_env() account_service = client[&amp;#39;Account&amp;#39;] mask = &amp;#39;id,metricTrackingObject[id]&amp;#39; try: response = account_service.getVirtualGuests(mask = mask) print(json.dumps(response, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to list the response for the package: \nfaultCode= %s, \n \nfaultString= %s&amp;#34; % (e.faultCode, e.faultString)) Get bandwidth data import SoftLayer import json client = SoftLayer.create_client_from_env() metric_service = client[&amp;#39;Metric_Tracking_Object&amp;#39;] startDate = &amp;#39;2019-07-09T19:06:11-06:00&amp;#39; endDate = &amp;#39;2019-07-09T19:06:11-16:00&amp;#39; body = &amp;#39;public&amp;#39; &amp;#34;&amp;#34;&amp;#34; Set with Metric_Tracking_Object id.</description>
    </item>
    <item>
      <title>Bandwidth Usage Reports</title>
      <link>https://sldn.softlayer.com/python/bandwidthData/</link>
      <pubDate>Wed, 13 Feb 2019 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/python/bandwidthData/</guid>
      <description>Data Time Alignment The SoftLayer_Metric_TrackingObject class will auto-align your requested time to its nearest data collection boundary.&#xA;For example, if you wanted bandwidth data from 2019-02-03T00:30:00 to 2019-02-04T00:30:01 with a 3600s rollup, you would get data back from 2019-02-03T01:00:00 to 2019-02-04T00:00:00&#xA;This is especially problematic when requesting rollups for 12 and 24 hour periods. For these, the collection boundary starts at 00:00 UTC. So if you are in CST timezone for example, your request of data from 2019-02-03T00:00:00 to 2019-02-04T00:00:00 will get aligned to 2019-02-03T18:00:00-06:00 and 2019-02-03T18:00:00-06:00</description>
    </item>
    <item>
      <title>Bandwidth</title>
      <link>https://sldn.softlayer.com/csharp/bandwidth/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/csharp/bandwidth/</guid>
      <description>Bandwidth Graph namespace GetBandwidthGraphNamespace { using System; using System.Collections.Generic; class GetBandwidthGraph { /// &amp;lt;summary&amp;gt; /// Retrieve a bandwidth graph for a single server. /// Retrieve a bandwidth graph for a single server for an arbitrary start and /// end date, specifying graph size and other graphing options. We can do this /// with two calls to the SoftLayer API. /// Counter data such as bandwidth counters and VSI resource use are stored in /// a server&amp;#39;s metric tracking object.</description>
    </item>
    <item>
      <title>Bandwidth</title>
      <link>https://sldn.softlayer.com/perl/bandwidth/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/perl/bandwidth/</guid>
      <description>Bandwidth Graph # Retrieve a bandwidth graph for a single server. # # Retrieving a bandwidth graph for a single server for an arbitrary start and # end date, specifying graph size and other graphing options. We can do this # with two calls to the SoftLayer API. # # Counter data such as bandwidth counters and CCI resource use are stored in # a server&amp;#39;s metric tracking object. Our first call retrieves that server&amp;#39;s # tracking object record.</description>
    </item>
    <item>
      <title>Bandwidth</title>
      <link>https://sldn.softlayer.com/php/bandwidth/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/php/bandwidth/</guid>
      <description>Usage &amp;lt;?php /** * Get Bandwidth usage. * * getCurrentBandwidthSummary: Retrieves an object that provides commonly used * bandwidth summary components for the current billing cycle. * * getBandwidthDataByDate: Use this method when needing the metric data for * bandwidth for a single guest. It will gather the correct input parameters * based on the date ranges. * * Important manual pages: * http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getBandwidthDataByDate * http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/getCurrentBandwidthSummary * http://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest * * @license &amp;lt;http://sldn.</description>
    </item>
    <item>
      <title>Bandwidth Pools</title>
      <link>https://sldn.softlayer.com/csharp/bandwidthPools/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/csharp/bandwidthPools/</guid>
      <description>Create Bandwidth Pool ï»¿namespace BandwidthPools { using System; class CreateBandwidthPool { static void Main(string[] args) { // Your SoftLayer username string username = &amp;#34;set me&amp;#34;; // Your SoftLayer apiKey string apiKey = &amp;#34;set me&amp;#34;; // Define the bandwidth pool&amp;#39;s name string name = &amp;#34;TestBandwidthPool&amp;#34;; // Define the bandwidth pool&amp;#39;s locationGroupId int locationGroupId = 1; // Define the accountId associated with this bandwidth pool int accountId = 207819; // Creating a connection to the SoftLayer_Network_Bandwidth_Version1_Allotment API service and // bind our API username and key to it.</description>
    </item>
    <item>
      <title>CDN Bandwidth Data</title>
      <link>https://sldn.softlayer.com/python/get_bandwidth_data.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/python/get_bandwidth_data.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get bandwidth data in a CDN. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Network_ContentDelivery_Account/getBandwidthData License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; cdnid = 30393 startDate = &amp;#34;2014-10-10 00:00:00&amp;#34; endDate = &amp;#34;2015-10-10 05:00:00&amp;#34; # Declare the API client client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) cdnService = client[&amp;#39;SoftLayer_Network_ContentDelivery_Account&amp;#39;] try: response = cdnService.getBandwidthData(startDate, endDate, id=cdnid) print(json.dumps(response, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to get the bandwidth data.</description>
    </item>
    <item>
      <title>Bandwith Pools</title>
      <link>https://sldn.softlayer.com/php/add_remove_from_pool/</link>
      <pubDate>Thu, 28 Apr 2016 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/php/add_remove_from_pool/</guid>
      <description>Create Pool &amp;lt;?php /* You can use the getenv() module to pull your exported Username and API key to keep from having to store them in your files */ require_once &amp;#39;./vendor/autoload.php&amp;#39;; $apiUsername = getenv(&amp;#39;SOFTLAYER_USERNAME&amp;#39;); $apiKey = getenv(&amp;#39;SOFTLAYER_API_KEY&amp;#39;); $template = new stdClass(); $template-&amp;gt;accountId = xxxx; $template-&amp;gt;bandwidthAllotmentTypeId = 2; $template-&amp;gt;locationGroupId = 1; $template-&amp;gt;name = &amp;#39;newBWpoolPHP&amp;#39;; try { $client = \SoftLayer\SoapClient::getClient(&amp;#39;SoftLayer_Network_Bandwidth_Version1_Allotment&amp;#39;,null, $apiUsername, $apiKey); $response = $client-&amp;gt;createObject($template); print_r($response); } catch(Exception $e) { echo &amp;#39;Cannot compute.</description>
    </item>
  </channel>
</rss>
