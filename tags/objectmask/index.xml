<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>objectmask on SoftLayer API</title>
    <link>https://sldn.softlayer.com/tags/objectmask/</link>
    <description>Recent content in objectmask on SoftLayer API</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 12 Jul 2021 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://sldn.softlayer.com/tags/objectmask/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>More Bare Metal Server examples</title>
      <link>https://sldn.softlayer.com/go/server.go/</link>
      <pubDate>Mon, 12 Jul 2021 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/go/server.go/</guid>
      <description>A few examples on interacting with Bare Metal Server, SoftLayer_Hardware_Server.&#xA;package main import ( &amp;#34;encoding/json&amp;#34; &amp;#34;fmt&amp;#34; &amp;#34;github.com/IBM-Cloud/ibm-cloud-cli-sdk/bluemix/terminal&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/datatypes&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/filter&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/services&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/session&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/sl&amp;#34; ) // Session created using values set in the environment, or from the local configuration file (i.e. ~/.softlayer). var sess = session.New() type Dictionary map[string]string func main() { // Shows all servers in the account. listServers() // Shows all available packages to order/create a Bare Metal server. listServerPackages() // Shows just fast provision packages to order/create a Bare Metal server.</description>
    </item>
    <item>
      <title>Event Logs</title>
      <link>https://sldn.softlayer.com/go/event_log.go/</link>
      <pubDate>Tue, 04 May 2021 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/go/event_log.go/</guid>
      <description>This example deals with a few ways of pulling data from SoftLayer_Event_Log. There can be quite a few Logs here, therefore it is recommended to use a filter like in getRecentLogs to limit how far back your search for Events, otherwise you will be paging through Events for a long time. Moreover, this example uses the maxNumberOfEvents value to limit the number of event logs that will be retrieved.&#xA;package main import ( &amp;#34;encoding/json&amp;#34; &amp;#34;fmt&amp;#34; &amp;#34;github.</description>
    </item>
    <item>
      <title>Working with Event Logs</title>
      <link>https://sldn.softlayer.com/rest/events_logs/</link>
      <pubDate>Tue, 30 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/rest/events_logs/</guid>
      <description>Event Log This example deals with a few ways of pulling data from SoftLayer_Event_Log. There can be quite a few Logs here, so using a filter it recommends like in the Get Recent Events to limit how far back your search for Events, otherwise you will be paging through Events for a long time.&#xA;Get All Events To get all Events logs, We use SoftLayer_Event_Log::getAllObjects(), in this case just the first 50 events by using pagination as resultLimit=0,50, See Using Result Limits in the SoftLayer API.</description>
    </item>
    <item>
      <title>Tickets</title>
      <link>https://sldn.softlayer.com/rest/tickets/</link>
      <pubDate>Tue, 10 Apr 2018 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/rest/tickets/</guid>
      <description>Tickets Tickets are how SoftLayer and you communicate and resolve problems. They can be about anything from general questions, requests for upgrades, monitoring alerts, or anything else that might come up.&#xA;Viewing Tickets To start off, lets see how to go about getting tickets that already exist on our account. There are a variety of helper functions on the SoftLayer_Account service that deal with tickets, and they all work basically the same way.</description>
    </item>
    <item>
      <title>Events</title>
      <link>https://sldn.softlayer.com/rest/events/</link>
      <pubDate>Thu, 05 Apr 2018 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/rest/events/</guid>
      <description>Events SoftLayer_Notification_Occurrence_Events at SoftLayer are how we communicate maintenance, outages, and other disruptive events to customers. In the control portal, you can find these at https://control.softlayer.com/event/announcement&#xA;Get All Events SoftLayer_Notification_Occurrence_Event::getAllObjects()&#xA;curl -u $SL_USER:$SL_APIKEY &amp;#34;https://api.softlayer.com/rest/v3.1/SoftLayer_Notification_Occurrence_Event/getAllObjects.json The output will look something like this, but will have every event that has ever been reported on your account. For brevity I have only included 1 Event&#xA;[ { &amp;#34;endDate&amp;#34;: null, &amp;#34;id&amp;#34;: 2584, &amp;#34;lastImpactedUserCount&amp;#34;: 11232, &amp;#34;modifyDate&amp;#34;: &amp;#34;2016-06-13T08:27:20-06:00&amp;#34;, &amp;#34;recoveryTime&amp;#34;: null, &amp;#34;startDate&amp;#34;: &amp;#34;2014-03-31T00:35:00-06:00&amp;#34;, &amp;#34;statusCode&amp;#34;: { &amp;#34;keyName&amp;#34;: &amp;#34;COMPLETED&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;Completed&amp;#34; }, &amp;#34;subject&amp;#34;: &amp;#34;IPv6 Sessions Down on FCR02.</description>
    </item>
    <item>
      <title>Provision Times</title>
      <link>https://sldn.softlayer.com/python/provisionTimes/</link>
      <pubDate>Mon, 12 Jun 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/python/provisionTimes/</guid>
      <description>Goes through orders and prints out each transaction that provisioned a server or virtual server. Calculates provision time from the time the order was placed, till the time the transaction went to COMPLETE.&#xA;Order: 15866609 - 2017-06-09T10:42:04-06:00 FQDN, Status, transaction id, elapsed time sgtest.cdetest.info, COMPLETE, 57090965, 383.0 Order: 15861187 - 2017-06-09T09:07:49-06:00 FQDN, Status, transaction id, elapsed time jumpbox.cdetest.info, COMPLETE, 57080823, 774.0 Order: 15860993 - 2017-06-09T08:53:22-06:00 FQDN, Status, transaction id, elapsed time Order: 15853891 - 2017-06-09T04:47:32-06:00 FQDN, Status, transaction id, elapsed time d1.</description>
    </item>
    <item>
      <title>Get Virtual Console Virtual Guest</title>
      <link>https://sldn.softlayer.com/rest/getKvmDetails/</link>
      <pubDate>Thu, 04 May 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/rest/getKvmDetails/</guid>
      <description>Operation: GET&#xA;Method: SoftLayer_Virtual_Guest::getObject()&#xA;URL: SoftLayer_Virtual_Guest/getObject&#xA;Example CURL:&#xA;https://$SOFTLAYER_USERNAME:$SOFTLAYER_API_KEY@api.softlayer.com/rest/v3/SoftLayer_Virtual_Guest/[device_id]/getObject?objectMask=mask[consoleIpAddressRecord[ipAddress[ipAddress],port],operatingSystem[passwords]] Example Response:&#xA;{ &amp;#34;accountId&amp;#34;: xxxxx, &amp;#34;consoleIpAddressRecord&amp;#34;: { &amp;#34;ipAddress&amp;#34;: { &amp;#34;ipAddress&amp;#34;: &amp;#34;10.3.2.143&amp;#34; }, &amp;#34;port&amp;#34;: 5902 }, &amp;#34;createDate&amp;#34;: &amp;#34;2017-05-02T11:00:54-06:00&amp;#34;, &amp;#34;dedicatedAccountHostOnlyFlag&amp;#34;: false, &amp;#34;domain&amp;#34;: &amp;#34;cdetest.info&amp;#34;, &amp;#34;fullyQualifiedDomainName&amp;#34;: &amp;#34;kube.cdetest.info&amp;#34;, &amp;#34;globalIdentifier&amp;#34;: &amp;#34;1c02e7d5-7a4e-4324-9ff2-xxxxxxxx&amp;#34;, &amp;#34;hostname&amp;#34;: &amp;#34;kube&amp;#34;, &amp;#34;id&amp;#34;: 31678643, &amp;#34;lastPowerStateId&amp;#34;: null, &amp;#34;lastVerifiedDate&amp;#34;: null, &amp;#34;managedResourceFlag&amp;#34;: false, &amp;#34;maxCpu&amp;#34;: 2, &amp;#34;maxCpuUnits&amp;#34;: &amp;#34;CORE&amp;#34;, &amp;#34;maxMemory&amp;#34;: 4096, &amp;#34;metricPollDate&amp;#34;: null, &amp;#34;modifyDate&amp;#34;: &amp;#34;2017-05-02T11:10:50-06:00&amp;#34;, &amp;#34;operatingSystem&amp;#34;: { &amp;#34;hardwareId&amp;#34;: null, &amp;#34;id&amp;#34;: 15948205, &amp;#34;manufacturerLicenseInstance&amp;#34;: &amp;#34;&amp;#34;, &amp;#34;passwords&amp;#34;: [ { &amp;#34;createDate&amp;#34;: &amp;#34;2017-05-02T11:04:32-06:00&amp;#34;, &amp;#34;id&amp;#34;: 17502747, &amp;#34;modifyDate&amp;#34;: &amp;#34;2017-05-02T11:04:32-06:00&amp;#34;, &amp;#34;password&amp;#34;: &amp;#34;redacted&amp;#34;, &amp;#34;port&amp;#34;: null, &amp;#34;software&amp;#34;: null, &amp;#34;softwareId&amp;#34;: 15948205, &amp;#34;username&amp;#34;: &amp;#34;root&amp;#34; } </description>
    </item>
    <item>
      <title>Get Virtual Console Virtual Guest</title>
      <link>https://sldn.softlayer.com/ruby/getKvmDetails/</link>
      <pubDate>Thu, 04 May 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/ruby/getKvmDetails/</guid>
      <description>=begin @author Ryan Tiffany =end require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; client = SoftLayer::Client.new(:timeout =&amp;gt; 120) virtual_server_id = 31678643 mask = &amp;#39;mask[consoleIpAddressRecord[ipAddress[ipAddress],port],operatingSystem[passwords]]&amp;#39; getDetails = client[&amp;#39;SoftLayer_Virtual_Guest&amp;#39;].object_mask(mask).object_with_id(virtual_server_id).getObject pp getDetails </description>
    </item>
    <item>
      <title>Show storage on all Virtual Guests</title>
      <link>https://sldn.softlayer.com/ruby/listVsiBlockDeviceSizes/</link>
      <pubDate>Mon, 03 Apr 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/ruby/listVsiBlockDeviceSizes/</guid>
      <description>require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Create a SoftLayer API client object client = SoftLayer::Client.new() account_service = client[&amp;#39;SoftLayer_Account&amp;#39;] # We will retrieve the additional information for each VSI: mask = &amp;#39;mask[id,hostname,blockDevices[id,mountType,diskImage[capacity]]]&amp;#39; begin # getVirtualGuests() will get all the VSIs that an account has. result = account_service.object_mask(mask).getVirtualGuests pp result rescue StandardError =&amp;gt; exception puts &amp;#34;Unable to get the VSIs: #{exception}&amp;#34; end </description>
    </item>
    <item>
      <title>Use IBMid to get SL api key</title>
      <link>https://sldn.softlayer.com/rest/IBMidtoSLKey/</link>
      <pubDate>Thu, 02 Mar 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/rest/IBMidtoSLKey/</guid>
      <description>#!/bin/bash # Parameters: &amp;lt;IBMid username&amp;gt; &amp;lt;IBMid password&amp;gt; &amp;lt;SL Account number (optional)&amp;gt; # Requires: curl, jq and xmllint installed creds=$(curl -s -u &amp;#39;bx:bx&amp;#39; -k -X POST --header &amp;#39;Content-Type: application/x-www-form-urlencoded&amp;#39; --header &amp;#39;Accept: application/json&amp;#39; -d &amp;#34;grant_type=password&amp;amp;response_type=cloud_iam,ims_portal&amp;amp;username=${1}&amp;amp;password=${2}&amp;amp;ims_account=${3}&amp;#34; https://iam.ng.bluemix.net/oidc/token) ims_token=$(echo $creds | jq -r &amp;#39;.ims_token&amp;#39;) ims_user_id=$(echo $creds | jq -r &amp;#39;.ims_user_id&amp;#39;) echo $creds &amp;gt; creds.json # Get api key over xmlrpc curl -s -X POST -d &amp;#34;&amp;lt;?xml version=\&amp;#34;1.0\&amp;#34; encoding=\&amp;#34;UTF-8\&amp;#34;?&amp;gt; &amp;lt;methodCall&amp;gt; &amp;lt;methodName&amp;gt;getObject&amp;lt;/methodName&amp;gt; &amp;lt;params&amp;gt; &amp;lt;param&amp;gt; &amp;lt;value&amp;gt; &amp;lt;struct&amp;gt; &amp;lt;member&amp;gt; &amp;lt;name&amp;gt;headers&amp;lt;/name&amp;gt; &amp;lt;value&amp;gt; &amp;lt;struct&amp;gt; &amp;lt;member&amp;gt; &amp;lt;name&amp;gt;authenticate&amp;lt;/name&amp;gt; &amp;lt;value&amp;gt; &amp;lt;struct&amp;gt; &amp;lt;member&amp;gt; &amp;lt;name&amp;gt;userId&amp;lt;/name&amp;gt; &amp;lt;value&amp;gt; &amp;lt;int&amp;gt;$ims_user_id&amp;lt;/int&amp;gt; &amp;lt;/value&amp;gt; &amp;lt;/member&amp;gt; &amp;lt;member&amp;gt; &amp;lt;name&amp;gt;complexType&amp;lt;/name&amp;gt; &amp;lt;value&amp;gt; &amp;lt;string&amp;gt;PortalLoginToken&amp;lt;/string&amp;gt; &amp;lt;/value&amp;gt; &amp;lt;/member&amp;gt; &amp;lt;member&amp;gt; &amp;lt;name&amp;gt;authToken&amp;lt;/name&amp;gt; &amp;lt;value&amp;gt; &amp;lt;string&amp;gt;$ims_token&amp;lt;/string&amp;gt; &amp;lt;/value&amp;gt; &amp;lt;/member&amp;gt; &amp;lt;/struct&amp;gt; &amp;lt;/value&amp;gt; &amp;lt;/member&amp;gt; &amp;lt;member&amp;gt; &amp;lt;name&amp;gt;SoftLayer_User_CustomerInitParameters&amp;lt;/name&amp;gt; &amp;lt;value&amp;gt; &amp;lt;struct&amp;gt; &amp;lt;member&amp;gt; &amp;lt;name&amp;gt;id&amp;lt;/name&amp;gt; &amp;lt;value&amp;gt; &amp;lt;int&amp;gt;$ims_user_id&amp;lt;/int&amp;gt; &amp;lt;/value&amp;gt; &amp;lt;/member&amp;gt; &amp;lt;/struct&amp;gt; &amp;lt;/value&amp;gt; &amp;lt;/member&amp;gt; &amp;lt;member&amp;gt; &amp;lt;name&amp;gt;SoftLayer_ObjectMask&amp;lt;/name&amp;gt; &amp;lt;value&amp;gt; &amp;lt;struct&amp;gt; &amp;lt;member&amp;gt; &amp;lt;name&amp;gt;mask&amp;lt;/name&amp;gt; &amp;lt;value&amp;gt; &amp;lt;string&amp;gt;mask[username;apiAuthenticationKeys.</description>
    </item>
    <item>
      <title>Endurance Storage Replication</title>
      <link>https://sldn.softlayer.com/python/EnduranceReplication/</link>
      <pubDate>Tue, 21 Feb 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/python/EnduranceReplication/</guid>
      <description>Some good starting reading.&#xA;https://knowledgelayer.softlayer.com/procedure/endurance-replication https://knowledgelayer.softlayer.com/procedure/endurance-snapshots http://sldn.softlayer.com/reference/services/SoftLayer_Network_Storage/enableSnapshots For more information on the magic of storage ordering see the following&#xA;https://github.com/softlayer/softlayer-python/blob/master/SoftLayer/managers/file.py https://github.com/softlayer/softlayer-python/blob/master/SoftLayer/managers/storage_utils.py This example should touch on all the basics of dealing with endurance storage replication volumes. This example uses the SoftLayer-python File manager a little bit for ordering&#xA;TO authorize hosts that are NOT virtual guests, see the allowAccessFrom* methods in&#xA;http://sldn.softlayer.com/reference/services/SoftLayer_Network_Storage/ Graceful vs Immediate failover&#xA;http://sldn.softlayer.com/reference/services/SoftLayer_Network_Storage/immediateFailoverToReplicant http://sldn.softlayer.com/reference/services/SoftLayer_Network_Storage/failoverToReplicant Failback is always immediate.</description>
    </item>
    <item>
      <title>Bandwidth Pools</title>
      <link>https://sldn.softlayer.com/python/bandwidthPoolsAndSubnets/</link>
      <pubDate>Thu, 16 Feb 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/python/bandwidthPoolsAndSubnets/</guid>
      <description>VDR SoftLayer allotments are a collection of servers that share all of the servers allocated bandwidth together.&#xA;This example below lists a few of the common ways of interacting with Bandwidth pools/allotments/Virtual Dedicated Racks.&#xA;import SoftLayer from pprint import pprint as pp class example(): def __init__(self): self.client = SoftLayer.Client() debugger = SoftLayer.DebugTransport(self.client.transport) self.client.transport = debugger def getPublicSubnets(self): &amp;#34;&amp;#34;&amp;#34; subnet types SECONDARY_ON_VLAN = Portable IPs PRIMARY SUBNET_ON_VLAN = static subnets PRIMARY_6 STATIC_IP_ROUTED GLOBAL_IP ADDITIONAL_PRIMARY &amp;#34;&amp;#34;&amp;#34; object_filter = { &amp;#39;publicSubnets&amp;#39; : { &amp;#39;subnetType&amp;#39; : { &amp;#39;operation&amp;#39;: &amp;#39;SECONDARY_ON_VLAN&amp;#39; } } } subnets = self.</description>
    </item>
    <item>
      <title>Get verbose details about a Bare Metal Server</title>
      <link>https://sldn.softlayer.com/python/getVerboseBmDetails/</link>
      <pubDate>Thu, 29 Dec 2016 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/python/getVerboseBmDetails/</guid>
      <description>This script will get the Packages, Categories, and items associated with a Bare Metal Server.&#xA;import SoftLayer import pprint from pprint import pprint as pp client = SoftLayer.Client() mask = &amp;#34;mask[id, fullyQualifiedDomainName, billingItem[id, item[id, description], category[name, id],children[id, item[id, description], category[name, id]]]]&amp;#34; getDetails = client[&amp;#39;SoftLayer_Hardware&amp;#39;].getObject(mask=mask,id=296740) pp(getDetails) </description>
    </item>
    <item>
      <title>Get verbose details about a Bare Metal Server</title>
      <link>https://sldn.softlayer.com/rest/getVerboseBmDetails/</link>
      <pubDate>Thu, 29 Dec 2016 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/rest/getVerboseBmDetails/</guid>
      <description>Operation: GET&#xA;Method: SoftLayer_Hardware::getObject()&#xA;URL: SoftLayer_Hardware/getObject&#xA;Example CURL:&#xA;https://$SOFTLAYER_USERNAME:$SOFTLAYER_API_KEY@api.softlayer.com/rest/v3/SoftLayer_Hardware/$serverId/getObject.json?objectMask=mask[billingItem[item,category,children[item,category]]] </description>
    </item>
    <item>
      <title>Get verbose details about a Bare Metal Server</title>
      <link>https://sldn.softlayer.com/ruby/getVerboseBmDetails/</link>
      <pubDate>Thu, 29 Dec 2016 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/ruby/getVerboseBmDetails/</guid>
      <description>This script will get the Packages, Categories, and items associated with a Bare Metal Server.&#xA;require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; client = SoftLayer::Client.new(:timeout =&amp;gt; 120) hardware_id = 26961063 object_mask = &amp;#39;mask[id,fullyQualifiedDomainName,billingItem[id,item[id,description],category[name,id],children[id,item[id,description],category[name,id]]]]&amp;#39; getDetails = client[&amp;#39;SoftLayer_Hardware&amp;#39;].object_mask(object_mask).object_with_id(hardware_id).getObject pp getDetails </description>
    </item>
    <item>
      <title>Get verbose details about a Virtual Guest</title>
      <link>https://sldn.softlayer.com/rest/getVerboseVsiDetails/</link>
      <pubDate>Thu, 29 Dec 2016 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/rest/getVerboseVsiDetails/</guid>
      <description>Operation: GET&#xA;Method: SoftLayer_Virtual_Guest::getObject()&#xA;URL: SoftLayer_Virtual_Guest/getObject&#xA;Example CURL:&#xA;https://$SOFTLAYER_USERNAME:$SOFTLAYER_API_KEY@api.softlayer.com/rest/v3/SoftLayer_Virtual_Guest/$virtualGuestId/getObject.json?objectMask=mask[billingItem[item,category,children[item,category]]] </description>
    </item>
    <item>
      <title>Get verbose details about a Virtual Guest</title>
      <link>https://sldn.softlayer.com/ruby/getVerboseVsiDetails/</link>
      <pubDate>Thu, 29 Dec 2016 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/ruby/getVerboseVsiDetails/</guid>
      <description>This script will get the Packages, Categories, and items associated with a Virtual Guest.&#xA;require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; client = SoftLayer::Client.new(:timeout =&amp;gt; 120) virtual_server_id = 26961063 object_mask = &amp;#39;mask[id,fullyQualifiedDomainName,billingItem[id,item[id,description],category[name,id],children[id,item[id,description],category[name,id]]]]&amp;#39; getDetails = client[&amp;#39;SoftLayer_Virtual_Guest&amp;#39;].object_mask(object_mask).object_with_id(virtual_server_id).getObject pp getDetails </description>
    </item>
    <item>
      <title>Get a list of Virtual Guests and Bare Metal servers per Pod in a Datacenter</title>
      <link>https://sldn.softlayer.com/python/listByPod/</link>
      <pubDate>Fri, 18 Nov 2016 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/python/listByPod/</guid>
      <description>import SoftLayer import pprint from prettytable import PrettyTable client = SoftLayer.Client() # Define datacenter e.g: dal05, dal09, ams01, sao01, etc datacenter = &amp;#39;dal10&amp;#39; # Declare a new API service objects for SoftLayer_Account accountClient = client[&amp;#39;SoftLayer_Account&amp;#39;] # Define objectMask and objectFilters to get additional information objectMask = &amp;#39;mask[primaryNetworkComponent[router[hostname]]]&amp;#39; objectFilterBms = {&amp;#34;hardware&amp;#34;: {&amp;#34;datacenter&amp;#34;: {&amp;#34;name&amp;#34;: {&amp;#34;operation&amp;#34;: datacenter}}}} objectFilterVsi = {&amp;#34;virtualGuests&amp;#34;: {&amp;#34;datacenter&amp;#34;: {&amp;#34;name&amp;#34;: {&amp;#34;operation&amp;#34;: datacenter}}}} # Define array to add pods pods = [] try: # Getting servers and vsis servers = accountClient.</description>
    </item>
    <item>
      <title>Find Location specific pricing for a package</title>
      <link>https://sldn.softlayer.com/ruby/getLocationPricing/</link>
      <pubDate>Thu, 01 Sep 2016 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/ruby/getLocationPricing/</guid>
      <description>With the introduction to Location-based Pricing, we updated our pricing model to represent the costs in each data center more clearly. Instead of adding premiums to a base server price, we have priced servers and services in each data center with their own location-based SoftLayer_Product_Item_Price objects via the API. In the following example we will query for the Dallas 10 data center for SoftLayer Virtual Guests.&#xA;require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; client = SoftLayer::Client.</description>
    </item>
    <item>
      <title>Create Storage Snapshot</title>
      <link>https://sldn.softlayer.com/php/createSnapshot/</link>
      <pubDate>Thu, 11 Aug 2016 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/php/createSnapshot/</guid>
      <description>Trigger a manual snapshot creation of a Block storage volume.&#xA;&amp;lt;?php /* You can use the getenv() module to pull your exported Username and API key to keep from having to store them in your files */ require_once &amp;#39;./vendor/autoload.php&amp;#39;; $apiUsername = getenv(&amp;#39;SOFTLAYER_USERNAME&amp;#39;); $apiKey = getenv(&amp;#39;SOFTLAYER_API_KEY&amp;#39;); $storageid = &amp;#39;123456&amp;#39;; try { $client = \SoftLayer\SoapClient::getClient(&amp;#39;SoftLayer_Network_Storage_Iscsi&amp;#39;, $storageid, $apiUsername, $apiKey); $response = $client-&amp;gt;createSnapshot(); print_r($response); } catch(Exception $e) { echo &amp;#39;Unable to get Storage credentials: &amp;#39; .</description>
    </item>
    <item>
      <title>Create Storage Snapshot</title>
      <link>https://sldn.softlayer.com/python/createSnapshot/</link>
      <pubDate>Thu, 11 Aug 2016 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/python/createSnapshot/</guid>
      <description>Trigger a manual snapshot creation of a Block storage volume.&#xA;import SoftLayer import json iscsiStorageId = 8744521 client = SoftLayer.create_client_from_env() networkStorageIscsiService = client[&amp;#39;SoftLayer_Network_Storage_Iscsi&amp;#39;] try: iscsiStorage = networkStorageIscsiService.createSnapshot(id=iscsiStorageId) print(json.dumps(iscsiStorage, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to retrieve the Network Storage Iscsi. faultCode=%s, faultString=%s&amp;#34; % (e.faultCode, e.faultString)) The process can take sometime to complete. You can check the snapshots associated with a storage volume by using the code below:</description>
    </item>
    <item>
      <title>Create Storage Snapshot</title>
      <link>https://sldn.softlayer.com/rest/createSnapshot/</link>
      <pubDate>Thu, 11 Aug 2016 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/rest/createSnapshot/</guid>
      <description>Operation: POST&#xA;Method: [SoftLayer_Network_Storage_Iscsi::.createSnapshot()]http://sldn.softlayer.com/reference/services/SoftLayer_Network_Storage_Iscsi/createSnapshot)&#xA;URL: SoftLayer_Network_Storage_Iscsi/createSnapshot&#xA;Example CURL:&#xA;curl -s --user &amp;#34;$SOFTLAYER_USERNAME:$SOFTLAYER_API_KEY&amp;#34; &amp;#34;https://api.softlayer.com/rest/v3/SoftLayer_Network_Storage_Iscsi/8744521/createSnapshot&amp;#34; Example Response&#xA;{ &amp;#34;accountId&amp;#34;: xxxxx, &amp;#34;capacityGb&amp;#34;: 20, &amp;#34;createDate&amp;#34;: &amp;#34;2016-08-11T13:45:39-06:00&amp;#34;, &amp;#34;guestId&amp;#34;: null, &amp;#34;hardwareId&amp;#34;: null, &amp;#34;hostId&amp;#34;: null, &amp;#34;id&amp;#34;: 13430037, &amp;#34;nasType&amp;#34;: &amp;#34;SNAPSHOT&amp;#34;, &amp;#34;properties&amp;#34;: [ { &amp;#34;createDate&amp;#34;: &amp;#34;2016-08-11T13:45:39-06:00&amp;#34;, &amp;#34;modifyDate&amp;#34;: null, &amp;#34;type&amp;#34;: { &amp;#34;description&amp;#34;: &amp;#34;Determines whether the volume is currently mountable&amp;#34;, &amp;#34;keyname&amp;#34;: &amp;#34;MOUNTABLE&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;Mountable&amp;#34; }, &amp;#34;value&amp;#34;: &amp;#34;0&amp;#34;, &amp;#34;volumeId&amp;#34;: 13430037 }, { &amp;#34;createDate&amp;#34;: &amp;#34;2016-08-11T13:45:39-06:00&amp;#34;, &amp;#34;modifyDate&amp;#34;: null, &amp;#34;type&amp;#34;: { &amp;#34;description&amp;#34;: &amp;#34;Volume name&amp;#34;, &amp;#34;keyname&amp;#34;: &amp;#34;VOLUME_NAME&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;Volume Name&amp;#34; }, &amp;#34;value&amp;#34;: &amp;#34;manual.</description>
    </item>
    <item>
      <title>Create Storage Snapshot</title>
      <link>https://sldn.softlayer.com/ruby/createSnapshot/</link>
      <pubDate>Thu, 11 Aug 2016 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/ruby/createSnapshot/</guid>
      <description>Trigger a manual snapshot creation of a Block storage volume.&#xA;require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Credentials to the API are read from a configuration file by default. # See https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L44 network_storage_id = 1234567 client = SoftLayer::Client.new(:timeout =&amp;gt; 120) createsnap = client[:Network_Storage_Iscsi].object_with_id(network_storage_id).createSnapshot pp createsnap The process can take sometime to complete. You can check the snapshots associated with a storage volume by using the code below:&#xA;require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Credentials to the API are read from a configuration file by default.</description>
    </item>
    <item>
      <title>Get storage credentials for Block Storage</title>
      <link>https://sldn.softlayer.com/php/storage_credentials/</link>
      <pubDate>Wed, 10 Aug 2016 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/php/storage_credentials/</guid>
      <description>The following script allows you retrieve the username and password for Performance/Endurance Block storage. If you have not autorized hosts against the storage then you will get some basic information about the Block storage as a result.&#xA;&amp;lt;?php /* You can use the getenv() module to pull your exported Username and API key to keep from having to store them in your files */ require_once &amp;#39;./vendor/autoload.php&amp;#39;; $apiUsername = getenv(&amp;#39;SOFTLAYER_USERNAME&amp;#39;); $apiKey = getenv(&amp;#39;SOFTLAYER_API_KEY&amp;#39;); $storageid = &amp;#39;123456&amp;#39;; try { $client = \SoftLayer\SoapClient::getClient(&amp;#39;SoftLayer_Network_Storage_Iscsi&amp;#39;, $storageid, $apiUsername, $apiKey); $objectMask = new \SoftLayer\Common\ObjectMask(); $objectMask-&amp;gt;allowedHardware-&amp;gt;allowedHost-&amp;gt;credential; $objectMask-&amp;gt;allowedVirtualGuests-&amp;gt;allowedHost-&amp;gt;credential; $client-&amp;gt;setObjectMask($objectMask); $response = $client-&amp;gt;getObject(); print_r($response); } catch(Exception $e) { echo &amp;#39;Unable to get Storage credentials: &amp;#39; .</description>
    </item>
    <item>
      <title>Get storage credentials for Block Storage</title>
      <link>https://sldn.softlayer.com/ruby/storage_creds/</link>
      <pubDate>Mon, 08 Aug 2016 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/ruby/storage_creds/</guid>
      <description>The following script allows you retrieve the username and password for Performance/Endurance Block storage if you have authorized hosts against the storage.&#xA;require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Credentials to the API are read from a configuration file by default. # See https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L44 network_storage_id = 1234567 client = SoftLayer::Client.new(:timeout =&amp;gt; 120) account_service = client[&amp;#39;SoftLayer_Network_Storage_Iscsi&amp;#39;] object_mask = &amp;#39;mask[allowedHardware[allowedHost[credential]],allowedVirtualGuests[allowedHost[credential]]]&amp;#39; item = account_service.object_mask(object_mask).object_with_id(network_storage_id).getObject pp item </description>
    </item>
    <item>
      <title>Find Location specific pricing for a package</title>
      <link>https://sldn.softlayer.com/python/location_based_pricing/</link>
      <pubDate>Tue, 12 Apr 2016 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/python/location_based_pricing/</guid>
      <description>With the introduction to Location-based Pricing, we updated our pricing model to represent the costs in each data center more clearly. Instead of adding premiums to a base server price, we have priced servers and services in each data center with their own location-based SoftLayer_Product_Item_Price objects via the API. In the following example we will query for the Dallas 6 data center, and then filter our item (Local Load Balancer) and prices to include only the location-based pricing for the specific data center we&amp;rsquo;re in —or we can filter for the standard price if a location-based price doesn&amp;rsquo;t exist.</description>
    </item>
    <item>
      <title>Get tickets using an objectFilter</title>
      <link>https://sldn.softlayer.com/python/ticket_filter/</link>
      <pubDate>Fri, 26 Feb 2016 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/python/ticket_filter/</guid>
      <description>import SoftLayer from pprint import pprint as pp import logging class example(): def __init__(self): self.client = SoftLayer.Client() def main(self): # logger = logging.getLogger() # logger.addHandler(logging.StreamHandler()) # logger.setLevel(3) theDate = &amp;#34;02/25/2016 01:00:00&amp;#34; endDate = &amp;#34;02/29/2016 01:00:00&amp;#34; mask = &amp;#34;mask[updates,group[name]]&amp;#34; theFilter1 = { &amp;#39;tickets&amp;#39;: { &amp;#39;createDate&amp;#39;: { &amp;#39;operation&amp;#39;: &amp;#39;betweenDate&amp;#39;, &amp;#39;options&amp;#39;: [ {&amp;#39;name&amp;#39;: &amp;#39;startDate&amp;#39;, &amp;#39;value&amp;#39;: [theDate]}, {&amp;#39;name&amp;#39;: &amp;#39;endDate&amp;#39;, &amp;#39;value&amp;#39;: [endDate]} ] } } } theFilter2 = { &amp;#39;tickets&amp;#39;: { &amp;#39;createDate&amp;#39;: { &amp;#39;operation&amp;#39;: &amp;#39;greaterThanDate&amp;#39;, &amp;#39;options&amp;#39;: [ {&amp;#39;name&amp;#39;: &amp;#39;date&amp;#39;, &amp;#39;value&amp;#39;: [theDate]} ] }, &amp;#39;group&amp;#39; : { &amp;#39;name&amp;#39;: { &amp;#39;operation&amp;#39;: &amp;#39;Cancellations&amp;#39; } } } } result = self.</description>
    </item>
    <item>
      <title>Cancel an item or service</title>
      <link>https://sldn.softlayer.com/python/cancel_service/</link>
      <pubDate>Mon, 08 Feb 2016 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/python/cancel_service/</guid>
      <description>This article will go over a variety of examples on how to cancel items on your account. Everything you order will have a corresponding SoftLayer_Billing_Item which is what specifically needs to be canceled. Some items, like Virtual_Guests have special cancel methods, but these are basically wrappers for canceling the billing item.&#xA;Cancel Virtual Guest Service In the following example we are retrieving the Billing Item of a Virtual Guest with the ID of 12345678 and passing that ID to cancelService.</description>
    </item>
    <item>
      <title>Find a billing item from a provisioned product</title>
      <link>https://sldn.softlayer.com/python/getbillingitem/</link>
      <pubDate>Mon, 08 Feb 2016 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/python/getbillingitem/</guid>
      <description>In the following example we are looking for the Billing Item of an Virtual Guest with an ID of 1234567.&#xA;import SoftLayer from pprint import pprint as pp client = SoftLayer.Client() mask = &amp;#34;mask[id]&amp;#34; billingId = client[&amp;#39;SoftLayer_Virtual_Guest&amp;#39;].getBillingItem(mask=mask,id=1234567) pp(billingId) </description>
    </item>
    <item>
      <title>Calculating month-to-date cost of a Virtual_Guest</title>
      <link>https://sldn.softlayer.com/ruby/monthtodate/</link>
      <pubDate>Fri, 29 Jan 2016 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/ruby/monthtodate/</guid>
      <description>require &amp;#39;softlayer_api&amp;#39; # Requires softlayer_api &amp;gt;= 3.2 require &amp;#39;pp&amp;#39; # used to display results # Create a client client = SoftLayer::Client.new # add your server id, can be found with the following script: https://softlayer.github.io/ruby/list_instances/ virtual_server_id = 12345678 item = client[:Virtual_Guest].object_mask(&amp;#34;mask[billingItem[createDate,hoursUsed,hourlyRecurringFee,currentHourlyCharge]]&amp;#34;).object_with_id(virtual_server_id).getObject puts &amp;#34;Billing Item for Virtual Server:&amp;#34; pp item[&amp;#39;billingItem&amp;#39;] Example Output Billing Item for Virtual Server: {&amp;#34;createDate&amp;#34;=&amp;gt;&amp;#34;2016-01-29T12:23:43-06:00&amp;#34;, &amp;#34;currentHourlyCharge&amp;#34;=&amp;gt;&amp;#34;.023&amp;#34;, &amp;#34;hourlyRecurringFee&amp;#34;=&amp;gt;&amp;#34;.023&amp;#34;, &amp;#34;hoursUsed&amp;#34;=&amp;gt;&amp;#34;1&amp;#34;} </description>
    </item>
    <item>
      <title>Find a billing item from a provisioned product</title>
      <link>https://sldn.softlayer.com/ruby/billingfromproduct/</link>
      <pubDate>Fri, 29 Jan 2016 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/ruby/billingfromproduct/</guid>
      <description>In the following example we are looking for the Billing Item of an Endurance Storage volume with an ID of 1234567.&#xA;# add your network storage id, it can be found by doing this call: http://sldn.softlayer.com/reference/services/SoftLayer_Account/getNasNetworkStorage network_storage_id = 1234567 # item = client[:Network_Storage].object_mask(&amp;#34;mask[billingItem[createDate,hoursUsed,hourlyRecurringFee,currentHourlyCharge]]&amp;#34;).object_with_id(network_storage_id).getObject pp item[&amp;#39;billingItem&amp;#39;] </description>
    </item>
    <item>
      <title>Retrieve the month to date cost of an hourly VSI</title>
      <link>https://sldn.softlayer.com/perl/monthtodatecost/</link>
      <pubDate>Wed, 06 Jan 2016 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/perl/monthtodatecost/</guid>
      <description>#!/usr/bin/perl use lib &amp;#34;/path/to/softlayer-api-perl-client/&amp;#34;; use SoftLayer::API::SOAP; use Data::Dumper; my $api_username = &amp;#34;x&amp;#34;; my $api_key = &amp;#34;a&amp;#34;; my $client = SoftLayer::API::SOAP-&amp;gt;new(&amp;#39;SoftLayer_Account&amp;#39;, undef, $api_username, $api_key); # SoftLayer_Virtual_Guest/&amp;lt;VSI_ID&amp;gt;/getBillingItem?objectMask=mask\[createDate,hoursUsed,hourlyRecurringFee,currentHourlyCharge\]&amp;#34; # CHANGE ME to the id of the virtual guest you want to check my $virtual_guest_id = 12345678; my $virtual_guest = SoftLayer::API::SOAP-&amp;gt;new(&amp;#39;SoftLayer_Virtual_Guest&amp;#39;, $virtual_guest_id, $api_username, $api_key); my $objectMask = { &amp;#39;createDate&amp;#39; =&amp;gt; &amp;#39;&amp;#39;, &amp;#39;hoursUsed&amp;#39; =&amp;gt; &amp;#39;&amp;#39;, &amp;#39;hourlyRecurringFee&amp;#39; =&amp;gt; &amp;#39;&amp;#39;, &amp;#39;currentHourlyCharge&amp;#39; =&amp;gt; &amp;#39;&amp;#39; }; $result = $virtual_guest-&amp;gt;getBillingItem(); my $cost; $cost = $result-&amp;gt;result-&amp;gt;{&amp;#39;hoursUsed&amp;#39;} * $result-&amp;gt;result-&amp;gt;{&amp;#39;hourlyRecurringFee&amp;#39;}; print $result-&amp;gt;result-&amp;gt;{&amp;#39;hoursUsed&amp;#39;} .</description>
    </item>
    <item>
      <title>Month-to-date cost of a Virtual_Guest</title>
      <link>https://sldn.softlayer.com/rest/hourlycost_date/</link>
      <pubDate>Wed, 30 Dec 2015 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/rest/hourlycost_date/</guid>
      <description>Operation: GET&#xA;Method: SoftLayer_Virtual_Guest::getBillingItem()&#xA;URL: SoftLayer_Virtual_Guest/&amp;lt;virtual_guest_id&amp;gt;/getBillingItem?objectMask=mask[createDate,hoursUsed,hourlyRecurringFee,currentHourlyCharge]&#xA;Example CURL:&#xA;curl -su userid:api_key https://api.softlayer.com/rest/v3/SoftLayer_Virtual_Guest/&amp;lt;virtual_guest_id&amp;gt;/getBillingItem?objectMask=mask[createDate,hoursUsed,hourlyRecurringFee,currentHourlyCharge] Example Response:&#xA;{ &amp;#34;createDate&amp;#34;: &amp;#34;2015-12-30T09:26:32-06:00&amp;#34;, &amp;#34;currentHourlyCharge&amp;#34;: &amp;#34;.18&amp;#34;, &amp;#34;hourlyRecurringFee&amp;#34;: &amp;#34;.09&amp;#34;, &amp;#34;hoursUsed&amp;#34;: &amp;#34;2&amp;#34; } </description>
    </item>
    <item>
      <title>Determining SoftLayer Device Owners</title>
      <link>https://sldn.softlayer.com/ruby/determining_device_owners/</link>
      <pubDate>Fri, 09 Oct 2015 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/ruby/determining_device_owners/</guid>
      <description>require &amp;#39;softlayer_api&amp;#39; require &amp;#39;vine&amp;#39; require &amp;#39;pp&amp;#39; # Credentials to the API are read from a configuration file by default. # See https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L44 client = SoftLayer::Client.new billing = client[&amp;#39;Account&amp;#39;] object_mask = &amp;#39;mask[fullyQualifiedDomainName,billingItem[categoryCode,description,createDate,orderItem[order[userRecord[username]]]]]&amp;#39; hardware_list = billing.object_mask(object_mask).getHardware virtual_guest_list = billing.object_mask(object_mask).getVirtualGuests def describe(item) domain_name = item.access(&amp;#39;fullyQualifiedDomainName&amp;#39;) || &amp;#39;no fullyQualifiedDomainName&amp;#39; category_code = item.access(&amp;#39;billingItem.categoryCode&amp;#39;) || &amp;#39;no categoryCode&amp;#39; description = item.access(&amp;#39;billingItem.description&amp;#39;) || &amp;#39;no description&amp;#39; create_date = item.access(&amp;#39;billingItem.createDate&amp;#39;) || &amp;#39;no createDate&amp;#39; user_name = item.access(&amp;#39;billingItem.orderItem.order.userRecord.username&amp;#39;) || &amp;#39;no username&amp;#39; return &amp;#34;&amp;#39;#{domain_name}&amp;#39;, category code: &amp;#39;#{category_code}&amp;#39;, &amp;#34;\ &amp;#34;description: &amp;#39;#{description}&amp;#39;, was created by: &amp;#39;#{user_name}&amp;#39; &amp;#34;\ &amp;#34;on &amp;#39;#{create_date}&amp;#39;&amp;#34; end for item in hardware_list do puts &amp;#34;Hardware &amp;#34; + describe(item) end for item in virtual_guest_list do puts &amp;#34;Virtual Guest &amp;#34; + describe(item) end </description>
    </item>
    <item>
      <title>Get Hardware hostnames</title>
      <link>https://sldn.softlayer.com/rest/get_hardware_hostname/</link>
      <pubDate>Wed, 30 Sep 2015 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/rest/get_hardware_hostname/</guid>
      <description>Operation: GET&#xA;Method: SoftLayer_Account::getObject()&#xA;URL: SoftLayer_Account/getObject?objectMask=mask[companyName,hardware[hostname]]&amp;quot;&#xA;Example CURL:&#xA;$ curl -u username:api_key &amp;#34;https://api.softlayer.com/rest/v3/SoftLayer_Account/getObject?objectMask=mask[companyName,hardware[hostname]]&amp;#34; Example Response:&#xA;{ &amp;#34;companyName&amp;#34;: &amp;#34;SoftLayer Internal - Development Community&amp;#34;, &amp;#34;hardware&amp;#34;: [ { &amp;#34;hostname&amp;#34;: &amp;#34;bsdal5167180245106688&amp;#34; }, { &amp;#34;hostname&amp;#34;: &amp;#34;db-server&amp;#34; }, { &amp;#34;hostname&amp;#34;: &amp;#34;db-server&amp;#34; }, { &amp;#34;hostname&amp;#34;: &amp;#34;deleteme&amp;#34; } ] } </description>
    </item>
    <item>
      <title>Get hostnames</title>
      <link>https://sldn.softlayer.com/rest/get_hostnames/</link>
      <pubDate>Wed, 30 Sep 2015 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/rest/get_hostnames/</guid>
      <description>Operation: GET&#xA;Method: SoftLayer_Account::getObject()&#xA;URL: SoftLayer_Account/getObject?objectMask=mask[hardware.hostname,hourlyVirtualGuests[hostname,domain]]&amp;quot;&#xA;Example CURL:&#xA;$ curl -u username:api_key &amp;#34;https://api.softlayer.com/rest/v3/SoftLayer_Account/getObject?objectMask=mask[hardware.hostname,hourlyVirtualGuests[hostname,domain]]&amp;#34; Example Response:&#xA;{ &amp;#34;accountManagedResourcesFlag&amp;#34;: false, &amp;#34;accountStatusId&amp;#34;: 1001, &amp;#34;address1&amp;#34;: &amp;#34;4849 Alpha Rd&amp;#34;, &amp;#34;allowedPptpVpnQuantity&amp;#34;: 1, &amp;#34;brandId&amp;#34;: 2, &amp;#34;city&amp;#34;: &amp;#34;Dallas&amp;#34;, &amp;#34;claimedTaxExemptTxFlag&amp;#34;: false, &amp;#34;companyName&amp;#34;: &amp;#34;SoftLayer Internal - Development Community&amp;#34;, &amp;#34;country&amp;#34;: &amp;#34;US&amp;#34;, &amp;#34;createDate&amp;#34;: &amp;#34;2014-02-04T10:33:56-06:00&amp;#34;, &amp;#34;email&amp;#34;: &amp;#34;asd@softlayer.com&amp;#34;, &amp;#34;firstName&amp;#34;: &amp;#34;Phil&amp;#34;, &amp;#34;hardware&amp;#34;: [ { &amp;#34;hostname&amp;#34;: &amp;#34;bsdal5167180245106688&amp;#34; }, { &amp;#34;hostname&amp;#34;: &amp;#34;db-server&amp;#34; }, { &amp;#34;hostname&amp;#34;: &amp;#34;db-server&amp;#34; }, { &amp;#34;hostname&amp;#34;: &amp;#34;deleteme&amp;#34; }, { &amp;#34;hostname&amp;#34;: &amp;#34;pjacksontestorder&amp;#34; } ], &amp;#34;hourlyVirtualGuests&amp;#34;: [ { &amp;#34;domain&amp;#34;: &amp;#34;lablayer.</description>
    </item>
    <item>
      <title>GetHardware with network components</title>
      <link>https://sldn.softlayer.com/rest/get_hardware_components/</link>
      <pubDate>Wed, 30 Sep 2015 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/rest/get_hardware_components/</guid>
      <description>Operation: GET&#xA;Method: SoftLayer_Account::getHardware()&#xA;URL: SoftLayer_Account/getHardware&#xA;Parameters objectMask=mask[id,fullyQualifiedDomainName,networkComponents[name,networkHardware[hostname],uplinkComponent[name,status]]]&#xA;Example CURL:&#xA;$ curl -u username:api_key -G --data &amp;#34;objectMask=mask[id,fullyQualifiedDomainName,networkComponents[name,networkHardware[hostname],uplinkComponent[name,status]]]&amp;#34; &amp;#34;https://api.softlayer.com/rest/v3/SoftLayer_Account/getHardware&amp;#34; Example Response:&#xA;[ { &amp;#34;fullyQualifiedDomainName&amp;#34;: &amp;#34;bsdal5167180245106688.bsd.citrix.dc&amp;#34;, &amp;#34;id&amp;#34;: 115628, &amp;#34;networkComponents&amp;#34;: [ { &amp;#34;name&amp;#34;: &amp;#34;mgmt&amp;#34;, &amp;#34;networkHardware&amp;#34;: [ { &amp;#34;hostname&amp;#34;: &amp;#34;bms173.sr03.dal05&amp;#34; }, { &amp;#34;hostname&amp;#34;: &amp;#34;bcs173b.sr03.dal05&amp;#34; }, { &amp;#34;hostname&amp;#34;: &amp;#34;bas08b.sr03.dal05&amp;#34; }, { &amp;#34;hostname&amp;#34;: &amp;#34;bcr03b.dal05&amp;#34; }, { &amp;#34;hostname&amp;#34;: &amp;#34;bcr03a.dal05&amp;#34; }, { &amp;#34;hostname&amp;#34;: &amp;#34;bcs173a.sr03.dal05&amp;#34; }, { &amp;#34;hostname&amp;#34;: &amp;#34;bas08a.sr03.dal05&amp;#34; } ], &amp;#34;uplinkComponent&amp;#34;: { &amp;#34;name&amp;#34;: &amp;#34;Ethernet1&amp;#34;, &amp;#34;status&amp;#34;: &amp;#34;ACTIVE&amp;#34; } }, { &amp;#34;name&amp;#34;: &amp;#34;eth&amp;#34;, &amp;#34;networkHardware&amp;#34;: [ { &amp;#34;hostname&amp;#34;: &amp;#34;bcs173a.</description>
    </item>
    <item>
      <title>Ordering with placeOrder</title>
      <link>https://sldn.softlayer.com/rest/place_order/</link>
      <pubDate>Wed, 30 Sep 2015 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/rest/place_order/</guid>
      <description>Operation: POST&#xA;Method: SoftLayer_Product_Order::placeOrder()&#xA;URL: SoftLayer_Product_Order/verifyOrder`&#xA;Example CURL:&#xA;curl -u userid:api_key -X POST --data @create.json https://api.softlayer.com/rest/v3/SoftLayer_Product_Order/verifyOrder Input JSON:&#xA;{ &amp;#34;parameters&amp;#34; : [ { &amp;#34;packageId&amp;#34; : 126, &amp;#34;location&amp;#34; :449494, &amp;#34;quantity&amp;#34; : 1, &amp;#34;hardware&amp;#34;: [{ &amp;#34;hostname&amp;#34;: &amp;#34;TEST&amp;#34;, &amp;#34;domain&amp;#34;: &amp;#34;test1&amp;#34; }], &amp;#34;prices&amp;#34;: [ {&amp;#34;id&amp;#34;: 13739}, {&amp;#34;id&amp;#34;: 13748}, {&amp;#34;id&amp;#34;: 1267}, {&amp;#34;id&amp;#34;: 342}, {&amp;#34;id&amp;#34;: 21141}, {&amp;#34;id&amp;#34;: 58}, {&amp;#34;id&amp;#34;: 876}, {&amp;#34;id&amp;#34;: 57}, {&amp;#34;id&amp;#34;: 55}, {&amp;#34;id&amp;#34;: 21}, {&amp;#34;id&amp;#34;: 906}, {&amp;#34;id&amp;#34;: 420}, {&amp;#34;id&amp;#34;: 418}, {&amp;#34;id&amp;#34;: 37620} ] } ] } The Price Ids Explained Use getItemPrices to find the IDs and Items you need</description>
    </item>
    <item>
      <title>Get top level billing items for all owned accounts</title>
      <link>https://sldn.softlayer.com/php/get_invoice_top_level_items/</link>
      <pubDate>Sun, 24 May 2015 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/php/get_invoice_top_level_items/</guid>
      <description>With a given date range, get all the invoice details for all of the owned brands, and all of their owned accounts. The $filter can be used to get just a single accounts invoices, just take off the -&amp;gt;allOwnedAccounts bits&#xA;&amp;lt;?php require_once __DIR__.&amp;#39;/vendor/autoload.php&amp;#39;; /** * This class structure is mostly used so this can be run as a script. * Most of the print statements use fancy bash color codes to make things pretty */ class topBillingItems { function __construct() { $this-&amp;gt;apiUsername = &amp;#39;&amp;#39;; $this-&amp;gt;apiKey = &amp;#39;&amp;#39;; $this-&amp;gt;startDate = new DateTime(&amp;#39;2015-02-12T00:00:00&amp;#39;, new DateTimeZone(&amp;#39;CST&amp;#39;)); $this-&amp;gt;endDate = new DateTime(&amp;#39;2015-03-12T00:00:00&amp;#39;, new DateTimeZone(&amp;#39;CST&amp;#39;)); } /*!</description>
    </item>
    <item>
      <title>Get Invoices</title>
      <link>https://sldn.softlayer.com/php/get_invoice/</link>
      <pubDate>Sun, 22 Feb 2015 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/php/get_invoice/</guid>
      <description>&amp;lt;?php require_once __DIR__.&amp;#39;/vendor/autoload.php&amp;#39;; $apiUser = &amp;#39;&amp;#39;; $key = &amp;#39;&amp;#39;; //The date does need to be in this specific format $startDate = new DateTime(&amp;#39;2014-11-01T13:05:25&amp;#39;, new DateTimeZone(&amp;#39;CST&amp;#39;)); $endDate = new DateTime(&amp;#39;2014-12-01T09:53:51&amp;#39;, new DateTimeZone(&amp;#39;CST&amp;#39;)); $accountClient = \SoftLayer\SoapClient::getClient(&amp;#39;SoftLayer_Account&amp;#39;, null, $apiUser, $key); $filter = new stdClass(); $filter-&amp;gt;invoices = new stdClass(); // $filter-&amp;gt;invoices-&amp;gt;accountId = new stdClass(); // $filter-&amp;gt;invoices-&amp;gt;accountId-&amp;gt;operation = &amp;#39;= 391780&amp;#39;; $filter-&amp;gt;invoices-&amp;gt;createDate = new stdClass(); $filter-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;operation = &amp;#39;betweenDate&amp;#39;; $filter-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;options = array(); $filter-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;options[0] = new stdClass(); $filter-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;options[0]-&amp;gt;name = &amp;#39;startDate&amp;#39;; $filter-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;options[0]-&amp;gt;value = array($startDate-&amp;gt;format(&amp;#39;m/d/Y H:i:s&amp;#39;)); $filter-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;options[1] = new stdClass(); $filter-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;options[1]-&amp;gt;name = &amp;#39;endDate&amp;#39;; $filter-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;options[1]-&amp;gt;value = array($endDate-&amp;gt;format(&amp;#39;m/d/Y H:i:s&amp;#39;)); $objectMask = new \SoftLayer\Common\ObjectMask(); $objectMask-&amp;gt;invoices; $accountClient-&amp;gt;setObjectFilter($filter); $accountClient-&amp;gt;setObjectMask($objectMask); $invoices = $accountClient-&amp;gt;getObject(); print_r($invoices); ?</description>
    </item>
    <item>
      <title>Create virtual server</title>
      <link>https://sldn.softlayer.com/rest/create_virtual_server/</link>
      <pubDate>Sun, 15 Feb 2015 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/rest/create_virtual_server/</guid>
      <description>Operation: POST&#xA;URL: SoftLayer_Virtual_Guest.json?objectMask=id&#xA;Example CURL:&#xA;curl -X POST --data @vs_create.json --user userid:api_key https://api.softlayer.com/rest/v3/SoftLayer_Virtual_Guest.json?objectMask=mask.id Input JSON:&#xA;{ &amp;#34;parameters&amp;#34; : [ { &amp;#34;hostname&amp;#34; : &amp;#34;myhostname&amp;#34;, &amp;#34;domain&amp;#34; : &amp;#34;my.domain.com&amp;#34;, &amp;#34;startCpus&amp;#34; : 1, &amp;#34;maxMemory&amp;#34; : 1024, &amp;#34;datacenter&amp;#34; : { &amp;#34;name&amp;#34; : &amp;#34;wdc01&amp;#34; }, &amp;#34;hourlyBillingFlag&amp;#34; : true, &amp;#34;localDiskFlag&amp;#34; : true, &amp;#34;operatingSystemReferenceCode&amp;#34;: &amp;#34;UBUNTU_LATEST&amp;#34; } ] } Example Response:&#xA;{&amp;#34;id&amp;#34;:7742740} </description>
    </item>
    <item>
      <title>Get virtual server details</title>
      <link>https://sldn.softlayer.com/rest/get_virtual_server_details/</link>
      <pubDate>Sun, 15 Feb 2015 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/rest/get_virtual_server_details/</guid>
      <description>Operation: GET&#xA;URL: SoftLayer_Virtual_Guest/{server_id}&#xA;Example CURL:&#xA;curl --user userid:api_key &amp;#34;https://api.softlayer.com/rest/v3/SoftLayer_Virtual_Guest/ 7743084.json?objectMask=mask[domain,fullyQualifiedDomainName,hostname,id,primaryBack endIpAddress,primaryIpAddress,status.keyName]&amp;#34; Example Response:&#xA;{ &amp;#34;domain&amp;#34;:&amp;#34;lab01.softlayer.ws&amp;#34;, &amp;#34;fullyQualifiedDomainName&amp;#34;:&amp;#34;test03.lab01.softlayer.ws&amp;#34;, &amp;#34;hostname&amp;#34;:&amp;#34;test03&amp;#34;, &amp;#34;id&amp;#34;:7743084, &amp;#34;primaryBackendIpAddress&amp;#34;:&amp;#34;10.118.68.8&amp;#34;, &amp;#34;primaryIpAddress&amp;#34;:&amp;#34;168.1.79.8&amp;#34;, &amp;#34;status&amp;#34;:{ &amp;#34;keyName&amp;#34;:&amp;#34;ACTIVE&amp;#34;, &amp;#34;name&amp;#34;:&amp;#34;Active&amp;#34; } } </description>
    </item>
    <item>
      <title>Server Locate</title>
      <link>https://sldn.softlayer.com/ruby/server_locate/</link>
      <pubDate>Tue, 30 Sep 2014 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/ruby/server_locate/</guid>
      <description>require &amp;#39;softlayer_api&amp;#39; # gem install softlayer_api require &amp;#39;table_print&amp;#39; # gem install table_print # Credentials to the SoftLayer API are grabbed from the config file by default. # See https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L44 SoftLayer::Client.default_client = SoftLayer::Client.new servers = SoftLayer::VirtualServer.find_servers(object_mask: &amp;#39;mask[location.pathString]&amp;#39;) location_info = servers.map do |server| datacenter, server_room, rack, slot = server[&amp;#39;location&amp;#39;][&amp;#39;pathString&amp;#39;].split(&amp;#39;.&amp;#39;) { server: server.fullyQualifiedDomainName, data_center: datacenter, server_room: server_room, rack: rack, slot: slot } end tp location_info </description>
    </item>
    <item>
      <title>Object-Masks</title>
      <link>https://sldn.softlayer.com/article/object-masks/</link>
      <pubDate>Mon, 03 Dec 2012 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/article/object-masks/</guid>
      <description>Overview slides&#xA;In order to obtain relational data from an object in the API you must declare an object mask in your API call. With standard object masks, relational data is pulled using a SOAP header, an XML-RPC struct or a GET parameter in REST.&#xA;Extended object masks make use of a Domain-specific language to reduce the effort required to express what data should be returned from the API. In order to support this new method of object mask, a new input method has been added to each protocol.</description>
    </item>
    <item>
      <title>REST</title>
      <link>https://sldn.softlayer.com/article/rest/</link>
      <pubDate>Mon, 20 Jun 2011 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/article/rest/</guid>
      <description>SoftLayer provides a RESTful API in addition to RPC-style API services. Use the REST API in cases where your programming language may not have good SOAP or XML-RPC support but can perform simple HTTP protocol actions and can interpret XML or JSON data.&#xA;REST URLs REST API URLs are structured to easily traverse SoftLayer&amp;rsquo;s object hierarchy. A basic REST request is structured as follows:&#xA;curl -u [username]:[apiKey] -d &amp;#39;{&amp;#34;parameters&amp;#34;: [&amp;#34;first&amp;#34;, &amp;#34;second&amp;#34;]}&amp;#39; https://api.</description>
    </item>
    <item>
      <title>XML-RPC</title>
      <link>https://sldn.softlayer.com/article/xml-rpc/</link>
      <pubDate>Mon, 20 Jun 2011 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/article/xml-rpc/</guid>
      <description>SoftLayer provides an XML-RPC interface in addition to SOAP and REST. The XML-RPC API is built to mimic the SOAP interface. We recommend using the XML-RPC API when your chosen language doesn&amp;rsquo;t have proper SOAP support.&#xA;Endpoint URLs The SoftLayer XML-RPC API has one endpoint per available API service. Each endpoint has a unique URL containing the service name of the API services that it calls. For example: https://api.softlayer.com/xmlrpc/v3/&amp;lt;serviceName&amp;gt; or http://api.</description>
    </item>
  </channel>
</rss>
