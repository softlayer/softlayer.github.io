<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>permissions on SoftLayer API</title>
    <link>https://sldn.softlayer.com/tags/permissions/</link>
    <description>Recent content in permissions on SoftLayer API</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 21 Dec 2020 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://sldn.softlayer.com/tags/permissions/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>User Management</title>
      <link>https://sldn.softlayer.com/article/Users/</link>
      <pubDate>Mon, 21 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/article/Users/</guid>
      <description>Hierarchy Each account will have a &amp;ldquo;Master&amp;rdquo; user. This &amp;ldquo;Master&amp;rdquo; user is the main user for the account, considered the account owner, and can do anything possible for an account. This user is a bit special, in that it needs no permissions set, as it has them all. So when looking at permissions set for this user, you will notice that none are set, which is normal for this specific type of user.</description>
    </item>
    <item>
      <title>User Access Details</title>
      <link>https://sldn.softlayer.com/python/user_access_details/</link>
      <pubDate>Tue, 11 Sep 2018 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/python/user_access_details/</guid>
      <description>This script gets each user, and which dedicatedHosts, hardware, and virtual guests they have permissions to view.&#xA;The hasFullAccessFlags are used to determine if a user has access to ALL hosts of that type or not. We are using that flag here to condense the output, but each user will still have the full list of hardware under their account if they have access to all.&#xA;&amp;#34;&amp;#34;&amp;#34; List of users that have access to a certain set of devices.</description>
    </item>
    <item>
      <title>Manage Users</title>
      <link>https://sldn.softlayer.com/python/manageUsers/</link>
      <pubDate>Wed, 08 Aug 2018 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/python/manageUsers/</guid>
      <description>This example is a set of scripts I&amp;rsquo;ve used for creating and disabling users.&#xA;Some of this functionality is also in the SLCLI now.&#xA;Create Users Creates a user, sets up proper permissions, sets up devices access restrictions, creates API keys and orders the user a server.&#xA;import SoftLayer.API from pprint import pprint as pp def create_user(username, password): user_template = { &amp;#39;username&amp;#39;: username, &amp;#39;firstName&amp;#39;: &amp;#39;API&amp;#39;, &amp;#39;lastName&amp;#39;: &amp;#39;Learner&amp;#39;, &amp;#39;email&amp;#39;: &amp;#39;someone@somewhere.com&amp;#39;, &amp;#39;companyName&amp;#39;: &amp;#39;IBM&amp;#39;, &amp;#39;address1&amp;#39;: &amp;#39;123 api road&amp;#39;, &amp;#39;city&amp;#39;: &amp;#39;Houston&amp;#39;, &amp;#39;country&amp;#39;: &amp;#39;US&amp;#39;, &amp;#39;postalCode&amp;#39;: &amp;#39;TX 77002&amp;#39;, &amp;#39;userStatusId&amp;#39;: 1001, &amp;#39;timezoneId&amp;#39;: 107 } created_user = client[&amp;#39;User_Customer&amp;#39;].</description>
    </item>
    <item>
      <title>add_portal_permission.py</title>
      <link>https://sldn.softlayer.com/python/add_portal_permission.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/python/add_portal_permission.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Add bulk permissions to user The script adds permissions to an arbitrary user by making a single call to the SoftLayer_User_Customer::addBulkPortalPermission method. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/ http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer/addBulkPortalPermission http://sldn.softlayer.com/reference/datatypes/SoftLayer_User_Customer_CustomerPermission_Permission &amp;#34;&amp;#34;&amp;#34; import SoftLayer # The user id you wish to add permissions userId = 213758 &amp;#34;&amp;#34;&amp;#34; You can get all permissions by calling the SoftLayer_User_Customer_CustomerPermission_Permission::getAllObjects method see http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer_CustomerPermission_Permission/getAllObjects for more information example you can make the Following RESTFul call to get the available permissions URL: https://&amp;lt;your-username&amp;gt;:&amp;lt;your-key&amp;gt;@api.</description>
    </item>
    <item>
      <title>Set user permissions</title>
      <link>https://sldn.softlayer.com/ruby/set_permission/</link>
      <pubDate>Sun, 04 Oct 2015 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/ruby/set_permission/</guid>
      <description>require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Credentials to the SoftLayer API are grabbed from the config file by default. # See https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L44 client = SoftLayer::Client.new user_service = client[&amp;#39;User_Customer&amp;#39;] # List the user permissions USER_ID = 172536 # Change me. User id of user to inspect. pp user_service.object_with_id(USER_ID).getPermissions # add permission new_permission = { keyName: &amp;#39;TICKET_ADD&amp;#39; } result = user_service.object_with_id(USER_ID).addPortalPermission(new_permission) unless result puts &amp;#39;Failed to add permission&amp;#39; exit 1 end # list user permissions again pp user_service.</description>
    </item>
    <item>
      <title>Permission Enforcement in the SoftLayer API</title>
      <link>https://sldn.softlayer.com/article/permission-enforcement-softlayer-api/</link>
      <pubDate>Mon, 20 Jun 2011 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/article/permission-enforcement-softlayer-api/</guid>
      <description>The SoftLayer API is built around the same system of user permissions that power the SoftLayer customer portal. What the API exposes and allows depends on the user&amp;rsquo;s account that is making the call and that user&amp;rsquo;s permission set. Your account&amp;rsquo;s master user has full permissions to every service and method associated with your account. Please be wary if you choose to execute API method calls using your account&amp;rsquo;s master user.</description>
    </item>
  </channel>
</rss>
