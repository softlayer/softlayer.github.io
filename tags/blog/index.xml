<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on SoftLayer API</title>
    <link>https://sldn.softlayer.com/tags/blog/</link>
    <description>Recent content in Blog on SoftLayer API</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 14 Jun 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://sldn.softlayer.com/tags/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with the Cloud Foundry and Bluemix Command Line Utilities</title>
      <link>https://sldn.softlayer.com/blog/rtiffany/getting-started-cloud-foundry-and-bluemix-command-line-utilities/</link>
      <pubDate>Tue, 14 Jun 2016 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/rtiffany/getting-started-cloud-foundry-and-bluemix-command-line-utilities/</guid>
      <description>&lt;p&gt;In order to fully utilize the power of your Bluemix account it is recommended to install the &lt;a href=&#34;https://www.cloudfoundry.org/&#34;&gt;Cloud Foundry&lt;/a&gt; and &lt;a href=&#34;https://new-console.ng.bluemix.net&#34;&gt;Bluemix&lt;/a&gt; command line clients. This guide will walk you through that process as well as some of the basic command line options.&lt;/p&gt;&#xA;&lt;h2 id=&#34;installing-cloud-foundry-command-line-client&#34;&gt;Installing Cloud Foundry Command Line Client&lt;/h2&gt;&#xA;&lt;p&gt;Please see our &lt;a href=&#34;http://knowledgelayer.softlayer.com/articles/bluemix-and-cloud-foundry-command-line-utilities&#34;&gt;Knowledgelayer Guide&lt;/a&gt; on how to install the Cloud Foundry CLI.&lt;/p&gt;&#xA;&lt;p&gt;Once installed you will use the &lt;code&gt;cf&lt;/code&gt; command when interacting with Cloud Foundry applications and your Bluemix account.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Bluemix VPN &#43; SoftLayer Vyatta = Cloud Communication</title>
      <link>https://sldn.softlayer.com/blog/rtiffany/bluemix-vpn-softlayer-vyatta-cloud-communication/</link>
      <pubDate>Wed, 23 Mar 2016 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/rtiffany/bluemix-vpn-softlayer-vyatta-cloud-communication/</guid>
      <description>&lt;h2&gt;Overview&lt;/h2&gt;&#xA;&lt;p&gt;One of the great things about being in a connected world is the ability to have private only systems talk to each other through gateway devices. Today you will look at using the &lt;a href=&#34;https://new-console.ng.bluemix.net/docs/services/vpn/index.html&#34;&gt;Bluemix VPN Service&lt;/a&gt; connected to a &lt;a href=&#34;http://knowledgelayer.softlayer.com/learning/network-gateway-devices-vyatta&#34;&gt;SoftLayer Vyatta Network Gateway Device&lt;/a&gt; to enable communication between Private-Only Bluemix containers and SoftLayer instances.&lt;/p&gt;&#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt;&#xA;&lt;h3&gt;Installing and configuring the Bluemix command line&lt;/h3&gt;&#xA;&lt;p&gt;Besides the VPN service, an IBM container is required in order to test the connection between Bluemix and SoftLayer. To push the test container into the Bluemix account, the Cloud Foundry command line app and its associated IBM Container plugin needs to be installed, following these &lt;a href=&#34;https://new-console.ng.bluemix.net/docs/containers/container_cli_ov.html#container_cli_ov&#34;&gt;instructions&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Getting started with the SLCLI and Load Balancers </title>
      <link>https://sldn.softlayer.com/blog/rtiffany/getting-started-slcli-and-load-balancers/</link>
      <pubDate>Tue, 26 Jan 2016 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/rtiffany/getting-started-slcli-and-load-balancers/</guid>
      <description>&lt;p&gt;Load Balancing is a way to distribute processing and communications evenly across multiple servers within a data center so that a single device does not carry an entire load.   SoftLayer Load Balancing enables customers to employ a variety of balancing methods to distribute traffic, including persistent and non-persistent options, that can be changed, activated and deactivated at any time. Today we are going to look at how to use the &lt;a href=&#34;https://softlayer-python.readthedocs.org/en/latest/cli.html&#34;&gt;Python slcli client&lt;/a&gt; to manage your SoftLayer Local Load balancers.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ordering Bare Metal Servers Using the SoftLayer API </title>
      <link>https://sldn.softlayer.com/blog/bpotter/ordering-bare-metal-servers-using-softlayer-api/</link>
      <pubDate>Thu, 27 Aug 2015 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/bpotter/ordering-bare-metal-servers-using-softlayer-api/</guid>
      <description>&lt;p&gt;The ability to order bare metal servers is one of the unique advantages of the SoftLayer cloud. But bare metal servers are inherently more complicated than virtual server infrastructures (VSI) because there are many more choices. A subset of the common bare metal servers can be ordered fairly easily using the [[SoftLayer_Hardware::createObject()]] method. If that’s sufficient for you, you can stop reading this article right here. If you only need to order one type of custom bare metal server, you don&amp;rsquo;t need most of the detail that follows.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Location-based Pricing and You</title>
      <link>https://sldn.softlayer.com/blog/cmporter/location-based-pricing-and-you/</link>
      <pubDate>Wed, 22 Jul 2015 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/cmporter/location-based-pricing-and-you/</guid>
      <description>&lt;p&gt;When we launch a new data center, we try to keep everything as consistent as possible between locations. We use the same hardware, we have a skilled “Go Live” team to bring everything online, and we train our local operations staff the same way. When we open a new data center in Dallas, that’s easy. But when the new facility is on the other side of the planet, things can get a little more complicated.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to Use The SoftLayer API to Authorize Guest VMs to iSCSI Storage</title>
      <link>https://sldn.softlayer.com/blog/sjanowiak/how-use-softlayer-api-authorize-guest-vms-iscsi-storage/</link>
      <pubDate>Thu, 16 Jul 2015 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/sjanowiak/how-use-softlayer-api-authorize-guest-vms-iscsi-storage/</guid>
      <description>&lt;p&gt;SoftLayer iSCSI storage is a great platform for running a clustered OS and file system. Featuring Multipath I/O (MPIO), industry leading durability, and our global footprint, the &lt;a href=&#34;https://www.softlayer.com/block-storage&#34;&gt;Endurance and Performance&lt;/a&gt; iSCSI block storage products are a great fit for a variety of workloads worldwide.&lt;/p&gt;&#xA;&lt;p&gt;One important feature of our Endurance and Performance block storage options is the ability to give access and authorization to any host(s) you choose via the SoftLayer customer portal or API. Once you’ve authorized a host to access a storage device, you’ve created a unique authentication string to build into your iSCSI initiator.&lt;/p&gt;</description>
    </item>
    <item>
      <title>More SoftLayer REST API Examples</title>
      <link>https://sldn.softlayer.com/blog/bpotter/more-softlayer-rest-api-examples/</link>
      <pubDate>Wed, 24 Jun 2015 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/bpotter/more-softlayer-rest-api-examples/</guid>
      <description>&lt;p&gt;The SoftLayer REST API is powerful and convenient because you can use it from any language or no language (the command line or browser). The basics of using the REST API are explained in an &lt;a href=&#34;http://sldn.softlayer.com/article/rest&#34;&gt;SLDN article on REST&lt;/a&gt;, and some examples are given in an &lt;a href=&#34;http://sldn.softlayer.com/blog/klaude/Time-REST-Everyone&#34;&gt;SLDN blog post on REST&lt;/a&gt;. But even with this good information, it can be a little confusing understanding how to map what you see in the &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Account&#34;&gt;SoftLayer API Services and Data Reference&lt;/a&gt; to the exact REST API invocation that should be made. Some additional examples and guidelines are presented here to help with that.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ember-cli-defeatureify Addon: Feature Flag Support and Stripping of Debug Statements </title>
      <link>https://sldn.softlayer.com/blog/jbrown/ember-cli-defeatureify-addon-feature-flag-support-and-stripping-debug-statements/</link>
      <pubDate>Wed, 03 Jun 2015 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/jbrown/ember-cli-defeatureify-addon-feature-flag-support-and-stripping-debug-statements/</guid>
      <description>&lt;p&gt;If you have ever used a canary build of the Ember.js framework, you are likely familiar with feature flags. Used to bundle functionality and make it available in an application, it also allows for its use to be turned on or off via an entry in the application’s configuration file. While used by the Ember.js community to allow for an easy way to test new, and sometimes experimental, features in upcoming releases of Ember.js, there are times when such capabilities can be useful in your own applications. And thanks to the &lt;a href=&#34;https://github.com/jkarsrud/ember-cli-defeatureify&#34;&gt;ember-cli-defeatureify&lt;/a&gt; addon, you can use and test it out too!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Going Further with the SoftLayer API Python Client - Part 3</title>
      <link>https://sldn.softlayer.com/blog/bpotter/going-further-softlayer-api-python-client-part-3/</link>
      <pubDate>Wed, 11 Mar 2015 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/bpotter/going-further-softlayer-api-python-client-part-3/</guid>
      <description>&lt;p&gt;In my first two blog posts in this series, &lt;a href=&#34;http://sldn.softlayer.com/blog/bpotter/Going-Further-SoftLayer-API-Python-Client-Part-1&#34;&gt;Part 1&lt;/a&gt; and &lt;a href=&#34;http://sldn.softlayer.com/blog/bpotter/Going-Further-SoftLayer-API-Python-Client-Part-2&#34;&gt;Part 2&lt;/a&gt;, I covered many general aspects of how to use the SoftLayer API effectively. In this post, we&amp;rsquo;ll dive into how to order SoftLayer resources using the SoftLayer API. [For ordering virtual servers, read &lt;a href=&#34;http://sldn.softlayer.com/blog/phil/Simplified-CCI-Creation&#34;&gt;Simplified CCI Creation&lt;/a&gt; for a great explanation of the simplified virtual server ordering process.]&lt;/p&gt;&#xA;&lt;h2&gt;Understanding How to Order SoftLayer Resources&lt;/h2&gt;&#xA;  &lt;p&gt;First, it is probably obvious, but to order a resource means to begin renting it, and to cancel a resource means to stop renting it. Some more terminology is necessary: What you actually order is called a product package since a SoftLayer resource is usually made up of many piece parts. Each part of a package is identified by a category, and then you can choose usually one item, in that category. Since each item has a price associated with it, items are usually called item prices. &#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Going Further with the SoftLayer API Python Client - Part 2</title>
      <link>https://sldn.softlayer.com/blog/bpotter/going-further-softlayer-api-python-client-part-2/</link>
      <pubDate>Fri, 13 Feb 2015 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/bpotter/going-further-softlayer-api-python-client-part-2/</guid>
      <description>&lt;p&gt;In my previous &lt;a href=&#34;http://sldn.softlayer.com/blog/bpotter/Going-Further-SoftLayer-API-Python-Client-Part-1&#34;&gt;blog post&lt;/a&gt;, I covered how to navigate the &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Account&#34;&gt;SoftLayer Services&lt;/a&gt; website, and how to query the SoftLayer API efficiently. In this post, I&#39;ll cover additional aspects of using the SoftLayer API with the python client. &#xA;&lt;/p&gt;&#xA;&lt;h2&gt;List of Services to Start Navigating From&lt;/h2&gt;&#xA;  &lt;p&gt;If you read &lt;a href=&#34;http://sldn.softlayer.com/blog/bpotter/Going-Further-SoftLayer-API-Python-Client-Part-1&#34;&gt;part 1&lt;/a&gt; of the series, you have a lot of good techniques for querying the data of resources in SoftLayer such that from any service you can efficiently follow the data trail to other services to get to all of the information you want. The last big thing you need to know about querying the SoftLayer API is: Where are the best places in the enormous SoftLayer Services website to begin these trails? The Account service is a good place to start for many data types, but always starting there will not get you to everything. Even if you can eventually get to the data you want by starting with the Account service, there are often shortcuts to be found by starting somewhere else. I&#39;ve put together a list of useful trail heads and what data types can be found down each trail. This is by no means an exhaustive list, but will hopefully get you started. &#xA;  &lt;/p&gt;</description>
    </item>
    <item>
      <title>Going Further with the SoftLayer API Python Client - Part 1</title>
      <link>https://sldn.softlayer.com/blog/bpotter/going-further-softlayer-api-python-client-part-1/</link>
      <pubDate>Fri, 06 Feb 2015 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/bpotter/going-further-softlayer-api-python-client-part-1/</guid>
      <description>&lt;p&gt;So you want to code to the SoftLayer API, your language of choice is python (well done), and you’ve read the &lt;a href=&#34;http://sldn.softlayer.com/article/SoftLayer-API-Overview&#34;&gt;SoftLayer API Overview&lt;/a&gt; on the &lt;a href=&#34;http://sldn.softlayer.com/&#34;&gt;SLDN&lt;/a&gt; site. You&amp;rsquo;ve even read the article &lt;a href=&#34;http://sldn.softlayer.com/article/Python&#34;&gt;using the SoftLayer API from python&lt;/a&gt;, but it just felt like a tease. So you follow the web trail to &lt;a href=&#34;https://softlayer-api-python-client.readthedocs.org/en/latest/api/client/&#34;&gt;readthedocs&lt;/a&gt; for the slightly longer &lt;a href=&#34;https://softlayer-api-python-client.readthedocs.org/en/latest/api/client/&#34;&gt;API Documentation&lt;/a&gt;. You think, “maybe that’s all I need to know.” You dive in and start your first program. But as soon as you create the Client object and get your first Account object, questions start flooding in, and you realize you need a lot more information. So you look to your trusted friend Google and find a few hits in the &lt;a href=&#34;https://forums.softlayer.com/forum/softlayer-developer-network&#34;&gt;SLDN Forums&lt;/a&gt;, and a few short examples scattered around the Internet, but you realize something very quickly: The SoftLayer API has bindings for many different languages/formats in addition to python (ruby, perl, c#, SOAP, RESTful, etc.), and it’s not clear at all how to translate the code snippets in those other languages to your situation, because each binding seems to interact with the SoftLayer API in a different way. What do you do?&lt;/p&gt;</description>
    </item>
    <item>
      <title>SoftLayer CLI Simple Bind Importer</title>
      <link>https://sldn.softlayer.com/blog/cgallo/softlayer-cli-simple-bind-importer/</link>
      <pubDate>Fri, 02 Jan 2015 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/cgallo/softlayer-cli-simple-bind-importer/</guid>
      <description>&lt;p&gt;We added a new feature, a simple bind importer, to the python CLI client that allows users to easily import bind style DNS zones into the SoftLayer DNS system. Before diving into the caveats that come with dealing with a file format that seems to be more human readable than machine readable, let’s discuss how to use it.&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;~$ sl dns import&#xA;usage: sl dns import &lt;file&gt; [—dryRun]&#xA;~$ sl dns import realtest.test &lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Getting started with CCIs</title>
      <link>https://sldn.softlayer.com/blog/phil/getting-started-ccis/</link>
      <pubDate>Mon, 08 Dec 2014 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/phil/getting-started-ccis/</guid>
      <description>&lt;p&gt;In the context of the SoftLayer API, SoftLayer CloudLayer Computing Instances(CCIs) are represented by &lt;a href=&#34;https://sldn.softlayer.com/reference/datatypes/SoftLayer_Virtual_Guest/&#34;&gt;SoftLayer_Virtual_Guest&lt;/a&gt; objects. The &lt;a href=&#34;https://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/&#34;&gt;SoftLayer_Virtual_Guest&lt;/a&gt; service allows for interaction with a specific CCI and you are able to interact with all CCIs on your account through the &lt;a href=&#34;https://sldn.softlayer.com/reference/services/SoftLayer_Account/&#34;&gt;SoftLayer_Account&lt;/a&gt; service.&lt;/p&gt;&#xA;&lt;h2&gt;Creating&lt;/h2&gt;&#xA;&lt;p&gt;Ordering new CCIs is accomplished through &lt;a href=&#34;https://sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/createObject&#34;&gt;SoftLayer_Virtual_Guest::createObject&lt;/a&gt;.&lt;br /&gt;&#xA;First, a SoftLayer_Virtual_Guest template object is created that contains the details of the CCI. Every CCI template object will need, at minimum, the following properties defined:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Getting Started With User Data and Post Provisioning Scripts</title>
      <link>https://sldn.softlayer.com/blog/jarteche/getting-started-user-data-and-post-provisioning-scripts/</link>
      <pubDate>Thu, 21 Aug 2014 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/jarteche/getting-started-user-data-and-post-provisioning-scripts/</guid>
      <description>&lt;p&gt;The SoftLayer platform lets you add dynamic data and scripts when you place your order.  The scripts are executed after the machine is booted.&lt;/p&gt;&#xA;&lt;p&gt;To place a script on a virtual server, the script must be available through a URL.&lt;/p&gt;&#xA;&lt;p&gt;Note: For HTTP URLs, the script is injected in the server and manually executed. For HTTPS URLs, the script is injected and automatically executed.&lt;/p&gt;&#xA;&lt;p&gt;In this article, we use &lt;em&gt;&lt;a href=&#34;https://x.x.x.x/&#34;&gt;https://x.x.x.x/&lt;/a&gt;&lt;/em&gt; as the URL where the scripts are available and &lt;em&gt;time.sh&lt;/em&gt; as the script. If you place the URL on the browser, the result should be:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using fog-softlayer for Managing Global IP Addresses</title>
      <link>https://sldn.softlayer.com/blog/matteldridge/using-fog-softlayer-managing-global-ip-addresses/</link>
      <pubDate>Fri, 01 Aug 2014 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/matteldridge/using-fog-softlayer-managing-global-ip-addresses/</guid>
      <description>&lt;p&gt;In &lt;a href=&#34;http://sldn.softlayer.com/blog/matteldridge/Using-fog-softlayer-Managing-Networks-VLANs&#34;&gt;part six&lt;/a&gt; of this series we explored using &lt;a href=&#34;https://github.com/softlayer/fog-softlayer&#34;&gt;fog-softlayer&lt;/a&gt; for managing your SoftLayer VLANs.&lt;/p&gt;&#xA;&lt;p&gt;In this installment, we’ll cover creating and routing &lt;a href=&#34;http://blog.softlayer.com/2012/global-ip-addresses-what-are-they-and-how-do-they-work&#34;&gt;global IP addresses&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;You can follow &lt;a href=&#34;http://blog.softlayer.com/2012/global-ip-addresses-what-are-they-and-how-do-they-work&#34;&gt;this link&lt;/a&gt; for details  on  what SoftLayer global IP addresses are and how they work.&lt;/p&gt;&#xA;&lt;p&gt;In short, with SoftLayer global IP addresses you can route a public IPv4 or IPv6 address to any server, on any (public) VLAN, in any SoftLayer data center.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using fog-softlayer for Managing Networks (VLANs)</title>
      <link>https://sldn.softlayer.com/blog/matteldridge/using-fog-softlayer-managing-networks-vlans/</link>
      <pubDate>Thu, 31 Jul 2014 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/matteldridge/using-fog-softlayer-managing-networks-vlans/</guid>
      <description>&lt;p&gt;In &lt;a href=&#34;http://sldn.softlayer.com/blog/matteldridge/Using-fog-softlayer-Managing-Key-Pairs&#34;&gt;part five&lt;/a&gt; of this series, we explored using &lt;a href=&#34;https://github.com/softlayer/fog-softlayer&#34;&gt;fog-softlayer&lt;/a&gt; for managing your SoftLayer key pairs.&lt;/p&gt;&#xA;&lt;p&gt;In this blog, we&amp;rsquo;ll look at creating and assigning VLANs for use with our virtual servers.&lt;/p&gt;&#xA;&lt;p&gt;######Network Examples&lt;/p&gt;&#xA;&lt;p&gt;Note that SoftLayer uses the term &lt;code&gt;VLAN&lt;/code&gt;. The Fog project tries to keep things provider-independent, so we&amp;rsquo;ll be referring to them as &lt;code&gt;networks&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;These examples all assume you have &lt;code&gt;~/.fog&lt;/code&gt;, which contain the following:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using fog-softlayer for Managing Key Pairs</title>
      <link>https://sldn.softlayer.com/blog/matteldridge/using-fog-softlayer-managing-key-pairs/</link>
      <pubDate>Wed, 30 Jul 2014 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/matteldridge/using-fog-softlayer-managing-key-pairs/</guid>
      <description>&lt;p&gt;In &lt;a href=&#34;http://sldn.softlayer.com/blog/matteldridge/Using-fog-softlayer-Managing-DNS&#34;&gt;part four&lt;/a&gt; of this series, we explored using &lt;a href=&#34;https://github.com/softlayer/fog-softlayer&#34;&gt;fog-softlayer&lt;/a&gt; for managing your SoftLayer tags.&lt;/p&gt;&#xA;&lt;p&gt;In this post, we&amp;rsquo;ll look at creating and assigning SSH key pairs for use with our compute instances.&lt;/p&gt;&#xA;&lt;h5 id=&#34;key-pair-examples&#34;&gt;Key Pair Examples&lt;/h5&gt;&#xA;&lt;p&gt;These examples all assume you have &lt;code&gt;~/.fog&lt;/code&gt;, which contains the following:&lt;/p&gt;&#xA;   &lt;code&gt;&#xA;default:&#xA;  softlayer_username: example-username&#xA;  softlayer_api_key: 1a1a1a1a1a1a1a1a1a11a1a1a1a1a1a1a1a1a1 &#xA;  softlayer_default_domain: example.com&#xA;  &lt;/code&gt;&#xA;&lt;h5 id=&#34;create-a-connection-to-softlayer-compute-service&#34;&gt;Create a Connection to SoftLayer Compute Service&lt;/h5&gt;&#xA;&lt;ruby&gt;&#xA;require &#39;fog/softlayer&#39;&#xA;@sl = Fog::Compute[:softlayer]&#xA;&lt;/ruby&gt;&lt;br&gt;&#xA;&lt;h5 id=&#34;key-pair-basics&#34;&gt;Key Pair Basics&lt;/h5&gt;&#xA;&lt;p&gt;Create some new key pairs:&#xA;&lt;ruby&gt;&#xA;kp1 = @sl.key_pairs.create(:label =&amp;gt; &amp;lsquo;my-new-key&amp;rsquo;, :key =&amp;gt; &amp;lsquo;ssh-rsa AAAAxbU2lx&amp;hellip;&amp;rsquo;)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using fog-softlayer for Managing DNS</title>
      <link>https://sldn.softlayer.com/blog/matteldridge/using-fog-softlayer-managing-dns/</link>
      <pubDate>Fri, 25 Jul 2014 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/matteldridge/using-fog-softlayer-managing-dns/</guid>
      <description>&lt;p&gt;This is Part 4 of a series, so to get the most out of it you may want to &lt;a href=&#34;http://sldn.softlayer.com/blog/matteldridge/Fog-Gem-Support-SoftLayer&#34;&gt;start at the beginning&lt;/a&gt;. This post explores using &lt;a href=&#34;https://github.com/softlayer/fog-softlayer&#34;&gt;fog-softlayer&lt;/a&gt; to manage your SoftLayer DNS.&lt;/p&gt;&#xA;&lt;p&gt;First however, to give credit where it&amp;rsquo;s due, a thank you goes out to &lt;a href=&#34;https://github.com/fernandes&#34;&gt;@fernandes&lt;/a&gt;. He sent in the initial pull request that adds this DNS support.&lt;/p&gt;&#xA;&lt;h5 id=&#34;configure&#34;&gt;Configure&lt;/h5&gt;&#xA;&lt;p&gt;These examples all assume you have &lt;code&gt;~/.fog&lt;/code&gt;, which contains the following.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using fog-softlayer for Managing Servers</title>
      <link>https://sldn.softlayer.com/blog/matteldridge/using-fog-softlayer-managing-servers/</link>
      <pubDate>Tue, 01 Jul 2014 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/matteldridge/using-fog-softlayer-managing-servers/</guid>
      <description>&lt;p&gt;In &lt;a href=&#34;http://sldn.softlayer.com/blog/matteldridge/Fog-Gem-Support-SoftLayer&#34;&gt;part one&lt;/a&gt; of this series we introduced a new ruby gem, &lt;a href=&#34;https://github.com/softlayer/fog-softlayer&#34;&gt;fog-softlayer&lt;/a&gt;, which enables SoftLayer users to leverage &lt;a href=&#34;https://github.com/fog/fog&#34;&gt;fog&lt;/a&gt;, the Ruby cloud services library.&lt;/p&gt;&#xA;&lt;p&gt;In this installment, we will walk users through getting started with fog, covering several examples of using &lt;a href=&#34;https://github.com/softlayer/fog&#34;&gt;fog-softlayer&lt;/a&gt; to manage servers using both VMs and bare metal cloud instances.&lt;/p&gt;&#xA;&lt;h4 id=&#34;configure-fog-softlayerhttpsgithubcomsoftlayerfog-softlayer-for-your-account&#34;&gt;Configure &lt;a href=&#34;https://github.com/softlayer/fog-softlayer&#34;&gt;fog-softlayer&lt;/a&gt; for Your Account&lt;/h4&gt;&#xA;&lt;p&gt;These examples assume you have a local file at &lt;code&gt;~/.fog&lt;/code&gt; that contains:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Fog Gem Support for SoftLayer</title>
      <link>https://sldn.softlayer.com/blog/matteldridge/fog-gem-support-softlayer/</link>
      <pubDate>Thu, 19 Jun 2014 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/matteldridge/fog-gem-support-softlayer/</guid>
      <description>&lt;p&gt;Things just got easier for developers working with the SoftLayer API.  Support for SoftLayer is introduced with the release of &lt;a href=&#34;http://rubygems.org/gems/fog-softlayer&#34;&gt;fog-softlayer&lt;/a&gt;, which is a provider gem for &lt;a href=&#34;http://fog.io/&#34;&gt;fog&lt;/a&gt;, the Ruby cloud services library.&lt;/p&gt;&#xA;&lt;p&gt;Fog is an open source cloud services library implemented in Ruby.&lt;/p&gt;&#xA;&lt;h5 id=&#34;call-it-what-you-will-fog-calls-it-what-it-is&#34;&gt;&lt;strong&gt;Call it what you will, fog calls it what it is.&lt;/strong&gt;&lt;/h5&gt;&#xA;&lt;p&gt;&lt;code&gt;CCI&lt;/code&gt;, &lt;code&gt;VM&lt;/code&gt;, &lt;code&gt;Cloud Server&lt;/code&gt;, &lt;code&gt;Elastic Cloud Compute Instance&lt;/code&gt;, &lt;code&gt;EC2&lt;/code&gt;, &lt;code&gt;Compute Instance&lt;/code&gt;. All of these terms mean the exact same thing! They&amp;rsquo;re all different ways of saying &lt;strong&gt;an instance of an operating system is running on virtualized hardware in a cloud&lt;/strong&gt;. The name you use depends on which cloud provider you&amp;rsquo;re working with.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ordering RAID Through API</title>
      <link>https://sldn.softlayer.com/blog/hanskristian/ordering-raid-through-api/</link>
      <pubDate>Tue, 22 Apr 2014 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/hanskristian/ordering-raid-through-api/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;See also &lt;a href=&#34;https://sldn.softlayer.com/python/orderBareMetal/&#34;&gt;orderBareMetal/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;As a SoftLayer user, you have probably seen the beautiful RAID Configurator that greets you when you order a server on the SoftLayer website.&lt;/p&gt;&#xA;&lt;p&gt;It allows you to do anything you like, from a straight RAID configuration involving all drives in a single disk array, to a much more intricate configuration with nearly any mix of disks and RAID types.&lt;/p&gt;&#xA;&lt;p&gt;However beautiful and practical the interface, sometimes you want to script this process, and the SoftLayer mantra of &amp;ldquo;Anything you can do in the Web interface, you can do on the API&amp;rdquo; also rings true in this case.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Nessus Security Scans Using the SoftLayer API</title>
      <link>https://sldn.softlayer.com/blog/jmarhee/nessus-security-scans-using-softlayer-api/</link>
      <pubDate>Tue, 15 Apr 2014 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/jmarhee/nessus-security-scans-using-softlayer-api/</guid>
      <description>&lt;p&gt;SoftLayer offers free vulnerability scans with all servers. When utilized through the customer portal, it will run a scan on the primary IP for the given server. Because vulnerabilities and misconfiguration are a fact of life in server administration, SoftLayer recommends running scan regularly to keep you you up-to-date on security risks that may impact your server.&lt;/p&gt;&#xA;&lt;p&gt;Automating regular vulnerability scans can become effortless when using the SoftLayer API.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Do More with Less: A SoftLayer Knife for Chef</title>
      <link>https://sldn.softlayer.com/blog/matteldridge/do-more-less-softlayer-knife-chef/</link>
      <pubDate>Thu, 10 Apr 2014 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/matteldridge/do-more-less-softlayer-knife-chef/</guid>
      <description>&lt;p&gt;We&#39;re excited to announce the initial release of the &lt;a href=&#34;https://github.com/softlayer/knife-softlayer&#34;&gt;knife-softlayer&lt;/a&gt; Ruby gem.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/softlayer/knife-softlayer&#34;&gt;Knife-softlayer&lt;/a&gt; is a &lt;a href=&#34;http://docs.opscode.com/community_plugin_knife.html&#34;&gt;plugin&lt;/a&gt; for the &lt;a href=&#34;http://docs.opscode.com/knife.html&#34;&gt;knife&lt;/a&gt; utility used with &lt;a href=&#34;http://docs.opscode.com/&#34;&gt;Chef&lt;/a&gt; that allows users to launch a &lt;a href=&#34;http://www.softlayer.com/&#34;&gt;SoftLayer&lt;/a&gt; virtual server and &lt;a href=&#34;http://docs.opscode.com/knife_bootstrap.html&#34;&gt;bootstrap&lt;/a&gt; it in a single command.  If you&#39;re new to Chef, here&#39;s &lt;a href=&#34;http://sldn.softlayer.com/blog/waelriac/Introduction-Deploying-Drupal-SoftLayer-Chef-Part-1&#34;&gt;a guide to get you started&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;div class=&#34;geshifilter&#34;&gt;&#xA;&lt;pre class=&#34;text geshifilter-text&#34; style=&#34;font-family:monospace;&#34;&gt;user@local&gt; knife softlayer server create --hostname web --domain example.com --flavor medium&lt;/pr</description>
    </item>
    <item>
      <title>Introduction: Deploying Drupal on SoftLayer with Chef</title>
      <link>https://sldn.softlayer.com/blog/phil/introduction-deploying-drupal-softlayer-chef/</link>
      <pubDate>Wed, 05 Mar 2014 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/phil/introduction-deploying-drupal-softlayer-chef/</guid>
      <description>&lt;p&gt;DevOps adoption rate has substantially increased in the last couple of years across all organization sizes due to the real business value that DevOps provides in terms of agility. Automation of application installation in the cloud is an important aspect in DevOps. Traditionally, automation has been achieved via writing shell scripts. These were sufficient to manage smaller applications, but more complex runtimes required the scripts to be written in higher-level programming languages like Perl, Python and Ruby. To manage these complexities better, several automation frameworks have been developed. Chef and Puppet are examples of two such automation and configuration management frameworks.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Getting Started with the Python CLI</title>
      <link>https://sldn.softlayer.com/blog/phil/getting-started-python-cli/</link>
      <pubDate>Thu, 31 Oct 2013 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/phil/getting-started-python-cli/</guid>
      <description>&lt;script type=&#34;text/javascript&#34;&gt;toc_collapse=0;&lt;/script&gt;&lt;div class=&#34;toc&#34; id=&#34;toc&#34;&gt;&#xA;&lt;div class=&#34;toc-title&#34;&gt;Table of contents&lt;span class=&#34;toc-toggle-message&#34;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&#xA;&lt;div class=&#34;toc-list&#34;&gt;&#xA;&lt;ol&gt;&#xA;&lt;li class=&#34;toc-level-1&#34;&gt;&lt;a href=&#34;#Setup&#34;&gt;Setup&lt;/a&gt;&#xA;&lt;ol&gt;&#xA;&lt;li class=&#34;toc-level-2&#34;&gt;&lt;a href=&#34;#Install&#34;&gt;Install&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li class=&#34;toc-level-2&#34;&gt;&lt;a href=&#34;#Configure&#34;&gt;Configure&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li class=&#34;toc-level-1&#34;&gt;&lt;a href=&#34;#Help&#34;&gt;Help&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li class=&#34;toc-level-1&#34;&gt;&lt;a href=&#34;#Filters&#34;&gt;Filters&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li class=&#34;toc-level-1&#34;&gt;&lt;a href=&#34;#Examples&#34;&gt;Examples&lt;/a&gt;&#xA;&lt;ol&gt;&#xA;&lt;li class=&#34;toc-level-2&#34;&gt;&lt;a href=&#34;#CCI&#34;&gt;CCI&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li class=&#34;toc-level-2&#34;&gt;&lt;a href=&#34;#DNS&#34;&gt;DNS&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt;The SoftLayer API client includes a utility, &lt;span class=&#34;geshifilter&#34;&gt;&lt;code class=&#34;text geshifilter-text&#34;&gt;sl&lt;/code&gt;&lt;/span&gt;, that provides a way to manage portions of a SoftLayer environment on the command line. Each section of the CLI shares a name with a manager that powers it. These managers wrap the necessary SoftLayer API calls and allow the CLI libraries to focus on data manipulation and display.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Redirection and Controller Workflow</title>
      <link>https://sldn.softlayer.com/blog/tvance/redirection-and-controller-workflow/</link>
      <pubDate>Thu, 05 Sep 2013 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/tvance/redirection-and-controller-workflow/</guid>
      <description>&lt;p&gt;A common problem when developing controller functionality is how to structure the workflow of the page. You have to make sure that the different scenarios are accounted for and make sense to the end user, but you also want to make sure that your code stays neat and easy to maintain. &lt;/p&gt;&#xA;&lt;p&gt;A good solution to this common problem is to break up your functionality into two discrete categories and use header redirection to navigate between controller actions that only belong to one category or the other. One type of action is going to show information to the user. This includes tables, forms, reports, etc. that send information from the application out, usually to a user&#39;s web browser. The second type of action is to take data in, usually from a form submission. The top-level process flow is greatly simplified when these two basic categories of task are kept discrete.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Technical Debt</title>
      <link>https://sldn.softlayer.com/blog/jbrown/technical-debt/</link>
      <pubDate>Thu, 25 Jul 2013 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/jbrown/technical-debt/</guid>
      <description>&lt;p&gt;According to &lt;a href=&#34;http://www.merriam-webster.com&#34;&gt;Merriam-Webster dictionary&lt;/a&gt;, &lt;em&gt;debt&lt;/em&gt; is defined as, &#34;something owed, an obligation, to be in a state of owing.&#34;  You are likely familiar with this concept as it pertains to financial affairs.  When you take out a loan to purchase a home or vehicle, you have obligated yourself to repay the amount of money you borrowed from a financial institution.  If you do not fulfill your repayment obligation there are consequences, most likely the repossession of the item purchased with the borrowed funds and a decrease in your credit worthiness.  Did you know it is also possible to incur debt during the development of a coding project? This concept is referred to as &lt;em&gt;technical debt&lt;/em&gt; and it can have just as damaging of consequences for a project as its financial cousin.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Unit Testing Ember Data Models</title>
      <link>https://sldn.softlayer.com/blog/jbrown/unit-testing-ember-data-models/</link>
      <pubDate>Fri, 21 Jun 2013 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/jbrown/unit-testing-ember-data-models/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://emberjs.com/&#34;&gt;Ember.js&lt;/a&gt; is a JavaScript &lt;a href=&#34;http://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller&#34;&gt;MVC&lt;/a&gt; framework for creating ambitious web applications and is one that, along with the Ember Data library&#39;s models, SoftLayer uses for its projects.  The &#34;M&#34; in MVC stands for model which is the most important layer in an application, for if the data models are not correctly architected anything built on top of them will inherit their deficiencies.  While this post is not going to discuss how to architect your data models in Ember.js it is going to propose a way in which you can Unit Test your model&#39;s definitions so that you keep any incongruent changes from being introduced into them.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Getting started with Firewalls</title>
      <link>https://sldn.softlayer.com/blog/phil/getting-started-firewalls/</link>
      <pubDate>Tue, 04 Jun 2013 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/phil/getting-started-firewalls/</guid>
      <description>&lt;p&gt;SoftLayer provides two flavors of firewall service that share some API components. Single device firewall solutions are interacted with through the &lt;a href=&#34;https://sldn.softlayer.com/reference/services/SoftLayer_Network_Component_Firewall/&#34;&gt;SoftLayer_Network_Component_Firewall&lt;/a&gt; service and VLAN firewalls can be accessed with the &lt;a href=&#34;https://sldn.softlayer.com/reference/services/SoftLayer_Network_Firewall_AccessControlList/&#34;&gt;SoftLayer_Network_Firewall_AccessControlList&lt;/a&gt; service.&lt;/p&gt;&#xA;&lt;h1&gt;Single device firewalls&lt;/h1&gt;&#xA;&lt;h2&gt;Listing&lt;/h2&gt;&#xA;&lt;p&gt;As &lt;a href=&#34;https://sldn.softlayer.com/reference/datatypes/SoftLayer_Network_Component_Firewall/&#34;&gt;SoftLayer_Network_Component_Firewall&lt;/a&gt; objects are attached to the device they are providing protection for. The best way to retrieve a list of all firewalls protecting dedicated servers is a call to &lt;a href=&#34;https://sldn.softlayer.com/reference/services/SoftLayer_Account/getHardware&#34;&gt;SoftLayer_Account::getHardware&lt;/a&gt; with an object mask for &#34;firewallServiceComponent&#34;. A list of firewalls protecting Cloud Computing Instances can be found with &lt;a href=&#34;https://sldn.softlayer.com/reference/services/SoftLayer_Account/getVirtualGuests&#34;&gt;SoftLayer_Account::getVirtualGuests&lt;/a&gt; using the same object mask.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Zend Framework 1.x...Without Inhaling</title>
      <link>https://sldn.softlayer.com/blog/jbrown/zend-framework-1xwithout-inhaling/</link>
      <pubDate>Thu, 23 May 2013 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/jbrown/zend-framework-1xwithout-inhaling/</guid>
      <description>&lt;p&gt;&lt;em&gt;Not sure how to integrate all Zend Framework 1.x has to offer into your existing code? Do you want to know how you can use Zend Framework 1.x without having to fully adopt the MVC architecture? What if you want to begin using MVC later? This article will present ideas and examples on how you can integrate Zend Framework 1.x alongside your existing codebase with minimal need for future re-factoring.&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Getting started with DNS</title>
      <link>https://sldn.softlayer.com/blog/phil/getting-started-dns/</link>
      <pubDate>Thu, 25 Apr 2013 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/phil/getting-started-dns/</guid>
      <description>&lt;p&gt;Users interact with SoftLayer&#39;s authortative DNS servers through the &lt;a href=&#34;https://sldn.softlayer.com/reference/services/SoftLayer_Dns_Domain/&#34;&gt;SoftLayer_Dns_Domain&lt;/a&gt; service. Each &lt;a href=&#34;https://sldn.softlayer.com/reference/datatypes/SoftLayer_Dns_Domain/&#34;&gt;SoftLayer_Dns_Domain&lt;/a&gt; has a collection of &lt;a href=&#34;https://sldn.softlayer.com/reference/services/SoftLayer_Dns_Domain_ResourceRecord/&#34;&gt;SoftLayer_DNS_Domain_ResourceRecords&lt;/a&gt; referenced by the resourceRecords relational property. While it is possible to interact with resource records through the &lt;a href=&#34;https://sldn.softlayer.com/reference/services/SoftLayer_Dns_Domain/&#34;&gt;SoftLayer_Dns_Domain&lt;/a&gt; service, it is best to use the &lt;a href=&#34;https://sldn.softlayer.com/reference/services/SoftLayer_Dns_Domain_ResourceRecord/&#34;&gt;SoftLayer_Dns_Domain_ResourceRecord&lt;/a&gt; service directly after initial zone creation.&lt;/p&gt;&#xA;&lt;h2&gt;Domains&lt;/h2&gt;&#xA;&lt;h3&gt;Listing&lt;/h3&gt;&#xA;&lt;p&gt;A list of all domains currently hosted on the SoftLayer nameservers can be retrieved with &lt;a href=&#34;https://sldn.softlayer.com/reference/services/SoftLayer_Account/getDomains&#34;&gt;SoftLayer_Account::getDomains&lt;/a&gt; which  returnr an array of &lt;a href=&#34;https://sldn.softlayer.com/reference/datatypes/SoftLayer_Dns_Domain/&#34;&gt;SoftLayer_Dns_Domain&lt;/a&gt; template objects. You can extend this call to also pull the records associated with these domains with an &lt;a href=&#34;https://sldn.softlayer.com/article/object mask&#34;&gt;object mask&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Getting started with VSI&#39;s</title>
      <link>https://sldn.softlayer.com/blog/phil/getting-started-vsis/</link>
      <pubDate>Thu, 18 Apr 2013 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/phil/getting-started-vsis/</guid>
      <description>&lt;p&gt;In the context of the SoftLayer API, SoftLayer Virtual Server Instances(VSIs) are represented by [[SoftLayer_Virtual_Guest (type)]] objects. The [[SoftLayer_Virtual_Guest]] service allows for interaction with a specific VSI and you are able to interact with all VSIs on your account through the [[SoftLayer_Account]] service. You will want to make sure you are on the latest version of the &lt;a href=&#34;https://github.com/softlayer/softlayer-api-php-client&#34;&gt;Softlayer PHP API SoapClient&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;creating&#34;&gt;Creating&lt;/h2&gt;&#xA;&lt;p&gt;Ordering new VSIs is accomplished through [[SoftLayer_Virtual_Guest::createObject]].&#xA;First, a SoftLayer_Virtual_Guest template object is created that contains the details of the VSI. Every VSI template object will need, at minimum, the following properties defined:&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to Solve: Error fetching http headers</title>
      <link>https://sldn.softlayer.com/article/how-solve-error-fetching-http-headers/</link>
      <pubDate>Tue, 19 Mar 2013 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/article/how-solve-error-fetching-http-headers/</guid>
      <description>&lt;p&gt;&lt;code&gt;&amp;quot;Error Fetching http headers&amp;quot;&lt;/code&gt; is a common error to encounter when working with the SLAPI. Fortunately, it is not terribly difficult to avoid. This error most commonly met when working with a large sets of data and can be a bit cryptic, as it seems to imply some sort of connection issue. In truth, it is a client side error provided when a timeout occurs while waiting for a response from the API.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Simplified CCI Creation</title>
      <link>https://sldn.softlayer.com/blog/phil/simplified-cci-creation/</link>
      <pubDate>Tue, 18 Dec 2012 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/phil/simplified-cci-creation/</guid>
      <description>&lt;p&gt;The SoftLayer API is a thorough beast...many ins and outs, options and choices. It is aimed to impart the greatest level of control to our customers and partners as possible. Our ordering system is a prime example. With it you are able to not only choose the standard assortment of specifications for a cloud server, but also if you want your storage stored locally vs on a SAN or even how you want us to contact you if there is an issue with a particular CCI...&lt;/p&gt;</description>
    </item>
    <item>
      <title>Dedicated server ordering with Flex Image and Python</title>
      <link>https://sldn.softlayer.com/blog/phil/dedicated-server-ordering-flex-image-and-python/</link>
      <pubDate>Mon, 10 Dec 2012 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/phil/dedicated-server-ordering-flex-image-and-python/</guid>
      <description>&lt;p&gt;Automating server provisioning is not only fun, it can also save you the time and pain recovering from the carpal tunnel all of the clicking and typing ordering 100&#39;s of servers from the managment portal can cause. To save you from that fate I have put together this guide in hopes to help you explore the world of order automation with the SoftLayer API :)&lt;/p&gt;&#xA;&lt;p&gt;We will assume that at some earlier point in time we have created a Flex Image. Each image is a point in time snapshot of your primary drive, complete with OS and software configurations which means less work once the server is online.&lt;/p&gt;</description>
    </item>
    <item>
      <title>CCI Ram Upgrades</title>
      <link>https://sldn.softlayer.com/blog/phil/cci-ram-upgrades/</link>
      <pubDate>Fri, 26 Oct 2012 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/phil/cci-ram-upgrades/</guid>
      <description>&lt;p&gt;Sometimes I just can&#39;t be bothered to do things in the &#34;normal&#34; way. Now, I can enjoy a good ole zen activity like the occasional manual data entry, but in general if I have to repeat a task more than a few times I get antsy. And I am not completely unsure that someone smart and sucessful said something good about lazy people. So in my quest for maximum return for minimal effort I find myself collecting various useful snippets and scripts. Today we will go through one in my collection.&lt;/p&gt;</description>
    </item>
    <item>
      <title>An American SLayer In Europe</title>
      <link>https://sldn.softlayer.com/blog/phil/american-slayer-europe/</link>
      <pubDate>Thu, 04 Oct 2012 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/phil/american-slayer-europe/</guid>
      <description>&lt;p&gt;From time to time, I get the opportunity to travel and work with various groups and organizations around the world. Sometimes these adventures take place on the conference floor manning the SoftLayer booth trying to best &lt;a href=&#34;http://blog.softlayer.com/author/khazard/&#34;&gt;khazzy’s&lt;/a&gt; sub 47 second time on the &lt;a href=&#34;http://blog.softlayer.com/?s=%22server+challenge%22&#34;&gt;server challenge&lt;/a&gt;, talking with passersby about the wonderfulness that is the SoftLayer API or even amazing audiences with my switch-ball skills. While these events are a staple in the life of a Development Community Advocate I have had the fortune to speak at engagements and more recently work with the guys and gals that make our Startup program, Catalyst, possible.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Extended Object Masks: a taste of things to come</title>
      <link>https://sldn.softlayer.com/blog/phil/extended-object-masks-taste-things-come/</link>
      <pubDate>Tue, 17 Jul 2012 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/phil/extended-object-masks-taste-things-come/</guid>
      <description>&lt;p&gt;While my &lt;a href=&#34;http://sldn.softlayer.com/blog/klandreth/Deglazing-slbackuppy-Usage-Object-Storage-Kitchen&#34;&gt;culinary endeavors&lt;/a&gt; have never been on par with Kevin&#39;s(he grills a mean steak), I wanted to take some time to provide this tasty morsel of the new Extended Object Masks which will soon be served in full portion for the feast.&lt;/p&gt;&#xA;&lt;p&gt;As many users know, the SLAPI is able to provide you with an enormous amount of data about your environment. And as knowledge is power, having access to the SLAPI puts you at least on par with Aquaman. Sometimes however, knowledge sits heavy on the brow, especically when you require more information than current technologies can afford.&lt;/p&gt;</description>
    </item>
    <item>
      <title>OS Reload, OS Reload, OS Reload...</title>
      <link>https://sldn.softlayer.com/blog/phil/os-reload-os-reload-os-reload/</link>
      <pubDate>Wed, 06 Jun 2012 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/phil/os-reload-os-reload-os-reload/</guid>
      <description>&lt;p&gt;Need to OS Reload many servers you say!?!&lt;/p&gt;&#xA;&lt;p&gt;Do you have a large number of servers whom could use fresh start? A 1/2 dozen boxes which can now be re-purposed? Maybe want to upgrade to the latest version of Debian and just couldn&#39;t be bothered with apt?&lt;/p&gt;&#xA;&lt;p&gt;What ever the series of events which have led to this moment, you now find yourself in need of a way to submit a seemingly limitless number of OS Reloads and the threat of carpel tunnel makes you weary of accomplishing this task the old(or would that be new) &lt;a href=&#34;http://knowledgelayer.softlayer.com/questions/218/OS+Reloads&#34;&gt;fashioned way&lt;/a&gt;. &lt;/p&gt;</description>
    </item>
    <item>
      <title>Take the Bite Out of Editing Firewall Rules – A Python Example</title>
      <link>https://sldn.softlayer.com/blog/phil/take-bite-out-editing-firewall-rules-%e2%80%93-python-example/</link>
      <pubDate>Wed, 09 May 2012 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/phil/take-bite-out-editing-firewall-rules-%e2%80%93-python-example/</guid>
      <description>&lt;p&gt;Time is the only true bartering resource. We trade dollars for goods or services but the hard earned currency for the transaction is one&#39;s time for another&#39;s. Due to the nonrenewable nature of this resource it is oft difficult for spare hours to be put into learning or researching that topic you always had a passing interest in or that everyone is gushing over. I try and keep an eye out during my daily experience for situations which may provide the excuse I need to allot time to one of the items on my &#34;when-time-allows&#34; list. On my list for some time: &lt;a href=&#34;http://python.org/&#34;&gt;Python&lt;/a&gt;. This will not be a post about the merits and strengths of Python, but rather a look into a use case which provided me an opportunity to make use of it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Measure Twice; Cut Once</title>
      <link>https://sldn.softlayer.com/blog/tgarrison/measure-twice-cut-once/</link>
      <pubDate>Thu, 26 Apr 2012 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/tgarrison/measure-twice-cut-once/</guid>
      <description>&lt;p&gt;Recently I launched a project that displayed items in a blog-like format with an attached thumbnail.  When I had originally developed this project, I built my thumbnail generator with the intent of adding caching support to it in order to reduce the strain placed on the server during peak usage.  Unfortunately, I had forgotten to add the caching support and the product went live without.&lt;/p&gt;&#xA;&lt;p&gt;When this product was launched, the initial traffic spurt was about 110 users all at the same time. Quickly, I found out that the server’s 5 minute load average had risen from values lower than 1.0 all the way up to nearly 50.0!  Panicked, I was able to locate the cause of the load, and traced it down to the thumbnail generator.  When I disabled the thumbnails, the load average quickly dropped down below 1.0 again; this promptly confirmed that the thumbnail generator was to blame.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The CCI VLAN Specification</title>
      <link>https://sldn.softlayer.com/blog/phil/cci-vlan-specification/</link>
      <pubDate>Fri, 09 Mar 2012 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/phil/cci-vlan-specification/</guid>
      <description>&lt;p&gt;When ordering a CCI on our shopping cart you are currently unable to specify a VLAN. While there are exceptions in place for things like VLAN-bound firewalls and load balancers, there are a number of situations outside of those in which a shared VLAN is preferable. Good news - when placing an order via the API this is something that can be accomplished!&lt;/p&gt;&#xA;&lt;p&gt;When populating the virtualGuests property of a &lt;a href=&#34;https://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Virtual_Guest/&#34;&gt;SoftLayer_Container_Product_Order_Virtual_Guest&lt;/a&gt; you need to create an array of SoftLayer_Virtual_Guest.  Normally during this process you only need to provide a hostname and domain. However when placing an order with a specific VLAN in mind you will need to also include the VLAN id by defining primaryNetworkComponent-&gt;networkVlan-&gt;id or primaryBackendNetworkComponent-&gt;networkVlan-&gt;id .&lt;/p&gt;</description>
    </item>
    <item>
      <title>Command Line Simplicity</title>
      <link>https://sldn.softlayer.com/blog/phil/command-line-simplicity/</link>
      <pubDate>Fri, 24 Feb 2012 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/phil/command-line-simplicity/</guid>
      <description>&lt;p&gt;Sometimes when putting together a script for the API I find myself wanting to remove as much complication from the process as possible.  Maybe in need of troubleshooting simplicity to rule out the plethora of idiosyncrasies which may be causing an API call to fail, or possibly just the need to walk my way through an idea and worry about the logic later.&lt;/p&gt;&#xA;&lt;p&gt;I’m sure we all have our own process to filter out all of the complications the technologies we use may cause; for me in the case of the SLAPI I fall back to a &lt;a href=&#34;http://www.gnu.org/software/bash/&#34;&gt;Bash shell&lt;/a&gt;, &lt;a href=&#34;http://curl.haxx.se/&#34;&gt;curl&lt;/a&gt; and our &lt;a href=&#34;https://sldn.softlayer.com/article/REST&#34;&gt;REST&lt;/a&gt; endpoint.  This trio allows me to make calls to the API without having to be concerned with remembering to define my array outside of a loop.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Scheduled Maintenance</title>
      <link>https://sldn.softlayer.com/blog/phil/scheduled-maintenance/</link>
      <pubDate>Mon, 12 Dec 2011 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/phil/scheduled-maintenance/</guid>
      <description>&lt;p&gt;The SoftLayer Development Network site will be unavailable between 5:00am and 6:00am CST on 12/14/2011.  This maintenance window will be used to upgrade the infrastructure hosting the site.  Please contact &lt;a href=&#34;mailto:sldn@softlayer.com&#34;&gt;sldn@softlayer.com&lt;/a&gt; if you have any questions or concerns.&lt;/p&gt;</description>
    </item>
    <item>
      <title>SLDN Update!</title>
      <link>https://sldn.softlayer.com/blog/phil/sldn-update/</link>
      <pubDate>Fri, 18 Nov 2011 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/phil/sldn-update/</guid>
      <description>&lt;p&gt;The SoftLayer Developer Network thrives on your feedback!  Let us know what features and improvements you would like to see in the future.  You can reach the SLDN team at &lt;a href=&#34;mailto:sldn@softlayer.com&#34;&gt;sldn@softlayer.com&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Change Log:&lt;/strong&gt;&lt;br /&gt;&#xA;*A number of GUI tweaks which should make the site a bit more kind on the eyes.&lt;br /&gt;&#xA;*The blog section has been removed and now all blogs and news articles will appear on the home page.&lt;br /&gt;&#xA;*A tag cloud has been added to provide filtering for blog/news articles.&lt;br /&gt;&#xA;*Inline code examples on method pages will show when a relevant example exists(check &lt;a href=&#34;https://sldn.softlayer.com/reference/services/SoftLayer_Ticket/edit&#34;&gt;SoftLayer_Ticket::edit&lt;/a&gt; for an example of the examples)&lt;br /&gt;&#xA;*Single Sign On with your SoftLayer portal account: You can now log into SLDN with the same account information you use for manage.softlayer.com.&lt;br /&gt;&#xA;*Question/Answers section:  This feature was created to provide a more direct way to get information.  This is in the initial phases so the ability to search/filter/find what your looking for will grow with time.  The idea at its core is simple however, ask a question, and other users(including SoftLayer employees!) will have the ability to answer.&lt;br /&gt;&#xA;*Improved search: We taught the search indexer more about each page making results more relevant.  You can also now filter the results by type of content(article, method, services, etc...)&lt;/p&gt;</description>
    </item>
    <item>
      <title>cPanel Provides SoftLayer DNS Clustering Support</title>
      <link>https://sldn.softlayer.com/blog/phil/cpanel-provides-softlayer-dns-clustering-support/</link>
      <pubDate>Mon, 26 Sep 2011 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/phil/cpanel-provides-softlayer-dns-clustering-support/</guid>
      <description>&lt;p&gt;Since the release of &lt;a href=&#34;http://www.cpanel.net/2011/08/cpanel-expands-its-dns-cluster-functionality-with-softlayer-and-vpsnet.html&#34;&gt;cPanel &amp; WHM 11.30&lt;/a&gt;, users of the control panel have had the ability to incorporate the native DNS Cluster Management with DNS services offered by SoftLayer and UK2Group (under the brand VPS.NET). While the benefits utilizing a geographically diverse and scalable DNS architecture merit a &lt;a href=&#34;http://blog.softlayer.com/2010/dns-from-all-angles/&#34;&gt;post&lt;/a&gt; dedicated to them, it is the implementation of this feature which has caught my attention.&lt;br /&gt;&#xA;Simply providing a SLAPI user with DNS management permissions and its associated SLAPI key allows cPanel to seamlessly integrate interaction with the SoftLayer DNS infrastructure. Once the straightforward setup is complete, any zones currently on SoftLayer&#39;s DNS servers will be available for administration.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Helper Functions: Small Changes, Big Win</title>
      <link>https://sldn.softlayer.com/blog/tgarrison/helper-functions-small-changes-big-win/</link>
      <pubDate>Wed, 31 Aug 2011 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/tgarrison/helper-functions-small-changes-big-win/</guid>
      <description>&lt;p&gt;If your job is anything like mine, there is just never enough time to finish everything.  When working on projects, I try to find ways which can speed up my development process.  There are many tools and ideas which can help greatly in this area, however, sometimes very small behavioral changes can result in a cumulative win.  When working on web-based projects in PHP, I often find that I need to see what’s contained in an array or an object so I can get my code just right.  PHP offers a nice way to do this with the print_r() function, but there’s a problem in using it for web apps: It’s monospaced.&lt;/p&gt;</description>
    </item>
    <item>
      <title>SOAP API Application Development 101</title>
      <link>https://sldn.softlayer.com/blog/ktrachier/soap-api-application-development-101/</link>
      <pubDate>Tue, 23 Aug 2011 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/ktrachier/soap-api-application-development-101/</guid>
      <description>&lt;p&gt;Simple Object Access Protocol (SOAP) is built on server-to-server remote procedure calls over HTTP. The data is formatted as XML; this means secure, well formatted data will be sent and received from SoftLayer’s API. This may take a little more time to set up than the REST API but it can be more scalable as you programmatically interface with it. SOAP’s ability to tunnel through existing protocols such as HTTP and innate ability to work in an object-oriented structure make it an excellent choice for interaction with the SoftLayer API.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The New SLDN</title>
      <link>https://sldn.softlayer.com/blog/phil/new-sldn/</link>
      <pubDate>Thu, 30 Jun 2011 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/phil/new-sldn/</guid>
      <description>&lt;p&gt;Good news everyone!&lt;/p&gt;&#xA;&lt;p&gt;The past few months we have been working feverously on redesigning the SoftLayer Development Network site.&lt;/p&gt;&#xA;&lt;p&gt;The goals for this first release are as follows:&lt;br /&gt;&#xA;* Maintain level of functionality and features of the previous SLDN&lt;br /&gt;&#xA;* Unify browsing experience by collapsing the blog and reference documentation into a single content management system&lt;br /&gt;&#xA;* Lay the groundwork for advanced features such as rating, comments, user generated content, and even a real time feed of API changes&lt;/p&gt;</description>
    </item>
    <item>
      <title>The End Is Nigh</title>
      <link>https://sldn.softlayer.com/blog/phil/end-nigh/</link>
      <pubDate>Fri, 03 Jun 2011 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/phil/end-nigh/</guid>
      <description>&lt;p&gt;As the depletion of IPv4 space draws nearer we have added a new requirement when placing an order which contains addtional IP addresses.  In addition to the usual suspects you will need to add an additional array to your order &lt;a href=&#34;https://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order/&#34;&gt;container object&lt;/a&gt;: itemCategoryQuestionAnswers.&lt;br /&gt;&#xA;One of the SL developers, Kien Phan, was kind enough to provide the example which can be found at the bottom of this post, but for the johnny-on-the-spots out there you can get a list of the possible questions with an Object Mask of questions for &lt;a href=&#34;http://sldn.softlayer.com/wiki/index.php/SoftLayer_Product_Item_Category&#34;&gt;SoftLayer_Product_Item_Category&lt;/a&gt; with a categoryId of 14(secondary IP addresses).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Understanding Objective-C : Messaging</title>
      <link>https://sldn.softlayer.com/blog/sthompson/understanding-objective-c-messaging/</link>
      <pubDate>Mon, 23 May 2011 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/sthompson/understanding-objective-c-messaging/</guid>
      <description>&lt;p&gt;In this installment, I hope now to point out some of the unique features of the Objective-C language and entice other geeks to look at the language with new eyes. In this case we are going to examine the technique used to invoke object behaviors, message passing.&lt;a href=&#34;http://en.wikipedia.org/wiki/Objective-C&#34;&gt;Objective-C&lt;/a&gt; is the lingua franca of &lt;a href=&#34;http://en.wikipedia.org/wiki/Mac_OS_X&#34;&gt;Mac OS X&lt;/a&gt; and &lt;a href=&#34;http://en.wikipedia.org/wiki/Iphone_os&#34;&gt;iOS&lt;/a&gt; application development. However, the language is seldom seen outside of the Apple development environment. As a result, relatively few developers are exposed to the language. Regular readers of this blog will know that I&#39;m a bit of a language geek. I enjoy learning about different programming languages, their unique structures and the tools they provide to help programmers solve problems. In the coming weeks, I hope to point out some of the unique features of the Objective-C language and entice other geeks to look at the language. In this case we are going to examine the technique used to invoke object behaviors, &lt;a href=&#34;http://en.wikipedia.org/wiki/Message_passing&#34;&gt;message passing&lt;/a&gt;. But first, a historical diversion.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Blocks - A welcome addition to C</title>
      <link>https://sldn.softlayer.com/blog/sthompson/blocks-welcome-addition-c/</link>
      <pubDate>Mon, 18 Apr 2011 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/sthompson/blocks-welcome-addition-c/</guid>
      <description>&lt;p&gt;In the programming environment of Mac OS X 10.6 (Snow Leopard), Apple added a programming construct to C (and by extension C++ and Objective-C) known simply as &#34;Blocks&#34;. This new construct has been carried to the iOS platform starting with iOS 4.0. Developers familiar with the venerable LISP will smile knowingly at blocks, and wonder what took that young whippersnapper C so long. Likewise, Ruby aficionados will look at blocks and find an old friend. JavaScript developers will see in blocks echoes of anonymous functions. The concepts and behaviors that define Blocks are neither new nor revolutionary, and are implemented in a variety of languages. Seeing those concepts and behaviors implemented in a family of C languages, however, is new and exciting.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Virtual Guest Ordering</title>
      <link>https://sldn.softlayer.com/blog/sthompson/virtual-guest-ordering/</link>
      <pubDate>Tue, 11 Jan 2011 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/sthompson/virtual-guest-ordering/</guid>
      <description>&lt;p&gt;&lt;i&gt;Note: This process for ordering CCIs has been deprecated. Please see the updated process &lt;a href=&#34;http://sldn.softlayer.com/blog/phil/Simplified-CCI-Creation&#34;&gt;here&lt;/a&gt;. However this blog contains current information regarding ordering complex CCI solutions and all other products.&lt;/i&gt;&lt;/p&gt;&#xA;&lt;p&gt;The universe is a strange place.&lt;/p&gt;&#xA;&lt;p&gt;Many times in my life there have been occasions where I will run into the same concept, or the same question repeatedly within a short span of time. Perhaps It&#39;s more a question of perception than cosmic coincidence, but the phenomenon itself is real. Philosophical musings aside, however, we have had several customers, from different quarters of our business, all asking the same question this past week &#34;How do I order a virtual guest through the SoftLayer API?&#34;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Go Go Gadget</title>
      <link>https://sldn.softlayer.com/blog/wfrancis/go-go-gadget/</link>
      <pubDate>Mon, 03 Jan 2011 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/wfrancis/go-go-gadget/</guid>
      <description>&lt;p&gt;To gadgetize or not to gadgetize?  That is the question.  Between Apple widgets, Google gadgets, and Windows gadgets, these technologies have a bit of buzz associated with them.  But as with any technology, just because it’s cool doesn’t mean it makes sense in every situation.  So when I was first approached with the idea of implementing a Windows gadget to interact with the SoftLayer Application Programming Interface (SLAPI), I stepped back and asked myself what area or areas of the SLAPI make a compelling case for gadgetization.  (I know, neither gadgetize nor gadgetization is a real word but you have to admit is it sure is fun to try and say.)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Adding SoftLayer to the Mac OS X Dashboard</title>
      <link>https://sldn.softlayer.com/blog/sthompson/adding-softlayer-mac-os-x-dashboard/</link>
      <pubDate>Mon, 20 Dec 2010 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/sthompson/adding-softlayer-mac-os-x-dashboard/</guid>
      <description>&lt;p&gt;The SoftLayer API started on the web. It was originally created to support the back end of our web portals. However, the API is an asset whose value extends beyond the web. The API is built on commonly used technologies like XML, JSON, and HTTP. As a result, it is possible to access the API from environments that are very different than that of the typical web browser. The &lt;a href=&#34;http://www.softlayer.com/resources/mobile-apps/&#34;&gt;SoftLayer Mobile Client&lt;/a&gt; is an excellent example. The application space found in Apple&#39;s iOS or Google&#39;s Android, technologically speaking, do not share much in common with the computing environment of a web page in a browser. However, we are able to offer the SoftLayer Mobile Client for those operating systems because of the flexibility inherit in the SoftLayer API. &lt;/p&gt;</description>
    </item>
    <item>
      <title>Directory Tree in XML</title>
      <link>https://sldn.softlayer.com/blog/dhudlow/directory-tree-xml/</link>
      <pubDate>Fri, 29 Oct 2010 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/dhudlow/directory-tree-xml/</guid>
      <description>&lt;p&gt;As a fan of XML, &lt;a href=&#34;http://en.wikipedia.org/wiki/Document_Object_Model&#34;&gt;the DOM&lt;/a&gt;, and interesting design patterns, when recently asked for a way to retrieve a representation of a public directory tree on an iPhone app, I decided to code something a little more elegant than printing raw XML or, worse, some custom format. My first assumption was that I&#39;d be building an actual DOM tree, then outputting formatted XML from there. This way, I&#39;d be assured my output was always valid XML.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Captured in a Gem - The SoftLayer API Client for Ruby</title>
      <link>https://sldn.softlayer.com/blog/sthompson/captured-gem-softlayer-api-client-ruby/</link>
      <pubDate>Thu, 12 Aug 2010 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/sthompson/captured-gem-softlayer-api-client-ruby/</guid>
      <description>&lt;p&gt;When I first learned about object oriented programming, many years ago, I found that the technique fit me well. I found the process of breaking a computing problem down into objects to be a natural way to analyze many of them. At the same time, my designs are never as elegant as I would like them to be in the first draft.  For me, the object oriented design process involves tinkering with the design, trying a couple of iterations, and refining the deconstruction over time. I prefer to work with prototypes and explore their interaction before settling on a final implementation.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The SoftLayer Mobile Client: A New Perspective</title>
      <link>https://sldn.softlayer.com/blog/sthompson/softlayer-mobile-client-new-perspective/</link>
      <pubDate>Mon, 21 Jun 2010 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/sthompson/softlayer-mobile-client-new-perspective/</guid>
      <description>&lt;p&gt;Much of the development work that goes on here centers on the &lt;a href=&#34;https://manage.softlayer.com/&#34;&gt;SoftLayer Customer Portal&lt;/a&gt;. The Customer Portal is a traditional Web application that links your browser to the powerful back-end systems that our engineers have crafted over the course of many years. Most of the engineers around here are first rate hands at web application technologies like PHP, JavaScript, and HTML.&lt;/p&gt;&#xA;&lt;p&gt;I don&#39;t know much HTML. I know even less PHP. I spent many years working on desktop Macintosh applications in C and C++.  With the introduction of the iPhone SDK, a new job opportunity made me an iPhone developer. The leap from the Cocoa framework, on the desktop Mac OS, to the Cocoa Touch framework of the iPhone was not difficult at all. The two frameworks share a lot in common and the parts that are different still share a lot of design patterns. All in all, making the transition to a company whose primary focus is web development was a lot more intimidating than picking up the iPhone API.&lt;/p&gt;</description>
    </item>
    <item>
      <title>A Conversation on API Abstraction</title>
      <link>https://sldn.softlayer.com/blog/dmcaloon/conversation-api-abstraction/</link>
      <pubDate>Thu, 08 Apr 2010 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/dmcaloon/conversation-api-abstraction/</guid>
      <description>&lt;p&gt;As a developer, I have a good relationship with the PHP community.  Many of my personal friends are involved in large PHP projects all over the world.  One friend in particular is the lead developer of &lt;a href=&#34;http://theeasyapi.com/&#34;&gt;The Easy API&lt;/a&gt;.  It&#39;s an API wrapper that does the &#34;hard parts&#34; for you.  Some companies release &#34;APIs&#34; that are confusing hodgepodges of unrelated functionality.  Many times the API in question is simply a web form that developers are expected to POST to and parse poorly-formatted output.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Object Masks and Filters in C Sharp</title>
      <link>https://sldn.softlayer.com/blog/wfrancis/object-masks-and-filters-c-sharp/</link>
      <pubDate>Fri, 19 Feb 2010 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/wfrancis/object-masks-and-filters-c-sharp/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Object Masks, Filters, and Other V3 Black Magic&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Everyone has heard the age old saying for any given job you need to have the right tool. Just as most of us have tried to use the flat rounded edge of a butter knife a time or two when what we desperately needed was a screw driver. Does that mean you weren&#39;t able to open that little compartment on whatever gizmo and replace the batteries? Probably not. In most cases it is possible to use a butter knife when a screw driver is the tool of choice; it&#39;s just more painful and a lot less effective.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Building the Data Warehouse</title>
      <link>https://sldn.softlayer.com/blog/dmcaloon/building-data-warehouse/</link>
      <pubDate>Tue, 29 Sep 2009 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/dmcaloon/building-data-warehouse/</guid>
      <description>&lt;p&gt;Here at SoftLayer, we have a lot of things that we need to keep track of. It&#39;s not just payments, servers, rack slots, network ports, processors, hard drives, RAM sticks, and operating systems, it&#39;s also bandwidth, monitoring, network intrusions, firewall logs, VPN access logs, API access, user history, and a whole host more. Last year, I was tapped to completely overhaul the existing bandwidth system. The old system was starting to show its age, and with our phenomenal growth it just hasn&#39;t been able to keep up. &lt;/p&gt;</description>
    </item>
    <item>
      <title>Using CURL to access CloudLayer Storage</title>
      <link>https://sldn.softlayer.com/blog/nday/using-curl-access-cloudlayer-storage/</link>
      <pubDate>Fri, 10 Jul 2009 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/nday/using-curl-access-cloudlayer-storage/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.softlayer.com/cloudlayer_storage.html&#34;&gt;CloudLayer Storage&lt;/a&gt; is billed as providing &#34;anytime, anywhere access to your data&#34;.  This isn’t just referring to human interfaces, but also includes automated interfaces.&lt;/p&gt;&#xA;&lt;p&gt;One easy way to automate access to CloudLayer Storage is through &lt;a href=&#34;http://curl.haxx.se/&#34;&gt;curl&lt;/a&gt;.  Curl is available as a command-line tool in most every operating system and is typically used for transferring files.  In this post I’ll show some examples on how to use curl to add, get, delete, or otherwise manipulate files in CloudLayer Storage.  Note that this isn’t using the SoftLayer API, but instead interfaces directly with CloudLayer Storage.&lt;/p&gt;</description>
    </item>
    <item>
      <title>PHP Memory Management in Foreach</title>
      <link>https://sldn.softlayer.com/blog/dmcaloon/php-memory-management-foreach/</link>
      <pubDate>Thu, 15 Jan 2009 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/dmcaloon/php-memory-management-foreach/</guid>
      <description>&lt;style type=&#34;text/css&#34;&gt;code { display: block; background:#dddddd; border: 1px solid #999999; padding: 5px; }&lt;/style&gt;&lt;p&gt;Many developers, even experienced ones, are confused by the way PHP handles arrays in &lt;a href=&#34;http://us3.php.net/foreach&#34;&gt;foreach loops&lt;/a&gt;.  In the standard foreach loop, PHP makes a copy of the array that is used in the loop.  The copy is discarded immediately after the loop finishes.  This is transparent in the operation of a simple foreach loop.  For example:&lt;/p&gt;</description>
    </item>
    <item>
      <title>PHP Type Conversions for Comparison</title>
      <link>https://sldn.softlayer.com/blog/dmcaloon/php-type-conversions-comparison/</link>
      <pubDate>Fri, 02 Jan 2009 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/dmcaloon/php-type-conversions-comparison/</guid>
      <description>&lt;p&gt;There has been some discussion recently among our dev team regarding PHP type conversion.  I’ll give some of the problems we’ve run into and then try to shed some light on the inner workings of PHP when it does comparisons.&lt;/p&gt;&#xA;&lt;p&gt;The first example may seem familiar to most seasoned developers, but when chained together it brings up an interesting point about PHP: The &lt;a href=&#34;http://www.php.net/manual/en/language.operators.comparison.php&#34;&gt;= = operator&lt;/a&gt; isn’t &lt;a href=&#34;http://en.wikipedia.org/wiki/Transitive_relation&#34;&gt;transitive&lt;/a&gt;.  &lt;/p&gt;</description>
    </item>
    <item>
      <title>URL Obfuscation</title>
      <link>https://sldn.softlayer.com/blog/dmcaloon/url-obfuscation/</link>
      <pubDate>Fri, 31 Oct 2008 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/dmcaloon/url-obfuscation/</guid>
      <description>&lt;div style=&#34;text-align: left;&#34;&gt;On August 26, our CTO Nathan Day wrote a &lt;a href=&#34;http://theinnerlayer.softlayer.com/2008/do-you-know-where-your-nameserver-is/&#34;&gt;post on the InnerLayer blog about nameservers&lt;/a&gt;.  His straightforward explanation of nameservers and their operations got me thinking about how NOT straightforward the whole operation is.  &lt;/p&gt;&#xA;&lt;p&gt;The way Nathan explained it, you type in “theinnerlayer.softlayer.com” and it is translated to an IP address, which is then contacted, and the page is returned to you.  However, if you know the IP address already, you can use that instead of the URL, and skip the nameserver entirely.  For instance, &lt;a href=”http://66.228.119.19”&gt;http://66.228.119.19&lt;/a&gt; will take you directly to the InnerLayer blog, bypassing the name server.  But that&#39;s not all!  Not only will the dotted-decimal representation of the IP work in a url, but the dword representation will as well!  Try &lt;a href=&#34;http://1122268947&#34;&gt;http://1122268947&lt;/a&gt;.  That will also get you to the InnerLayer.  &lt;/p&gt;</description>
    </item>
    <item>
      <title>The New Face of Search Engine Optimization</title>
      <link>https://sldn.softlayer.com/blog/dmcaloon/new-face-search-engine-optimization/</link>
      <pubDate>Mon, 11 Aug 2008 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/dmcaloon/new-face-search-engine-optimization/</guid>
      <description>&lt;p&gt;Most SL customers host websites on our services, and all websites benefit from high search engine rankings.  The &#34;old method&#34; of search engine optimization doesn&#39;t really work anymore.  Back in the days before Google, the best way to get to the top of the search engine rankings was to follow four easy steps:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Diversify your IP space.&lt;/li&gt;&#xA;&lt;li&gt;Add keywords to the &lt;meta&gt; tag on your site.&lt;/li&gt;&#xA;&lt;li&gt;Make sure those keywords also appear in the body of your document.&lt;/li&gt;&#xA;&lt;li&gt;Take 2 &amp; 3 and fill them with references to Pok&amp;eacute;mon, pop music, and porn.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;However, only #3 is a valid tactic in this new, Google-driven world.  Let&#39;s analyze them one by one.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Dot Net? You Bet!</title>
      <link>https://sldn.softlayer.com/blog/wfrancis/dot-net-you-bet/</link>
      <pubDate>Thu, 20 Mar 2008 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/wfrancis/dot-net-you-bet/</guid>
      <description>&lt;p&gt;Greetings fellow SLAPI enthusiasts!  When the call went out for examples I figured why not cowboy up and try my hand at with a .NET example.  After all, being an MCP in a largely PHP shop makes me as qualified as anyone.  Plus I am constantly pushing the Microsoft Kool-Aid around the office so this was a chance to put my money where my mouth is.&lt;/p&gt;&#xA;&lt;p&gt;Unfortunately, there was just one catch—I’m not a .NET programmer.  I’ve got 10 years of experience writing drivers, protocol suites, and firmware.  In other words,   C/C++ with a little bit of assembler thrown in when push comes to shove.  Sure I can write a c-sharp application, but I’m pretty green at it and until a month ago if someone had told me they had a problem with their WSDL (pronounced wiz’duhl) I would have wondered why they were telling me instead of their urologist!&lt;/p&gt;</description>
    </item>
    <item>
      <title>More methods, this time for the bean counters.</title>
      <link>https://sldn.softlayer.com/blog/dharris/more-methods-time-bean-counters/</link>
      <pubDate>Mon, 16 Jul 2007 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/dharris/more-methods-time-bean-counters/</guid>
      <description>&lt;p&gt;(This post refers to SoftLayer API version 1. Check out &lt;a href=&#34;http://sldn.softlayer.com/03/2008/and-now-for-something-completely-different/&#34;&gt;API version 3&lt;/a&gt; for our latest updates.)&lt;/p&gt;&#xA;&lt;p&gt;We&#39;ve put four new methods into the API. They are:&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;getInvoiceList()&lt;/strong&gt;&lt;br /&gt;&#xA;Return a listing for each account that includes the invoice id, date, starting balance, ending balance, invoice amount, payment amount, and account type.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;getAccountBalance()&lt;/strong&gt;&lt;br /&gt;&#xA;Return the current balance and next bill date for an account.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;getInvoice(intInvoiceId)&lt;/strong&gt;&lt;br /&gt;&#xA;Retrieve a copy of an invoice in PDF format.&lt;/p&gt;</description>
    </item>
    <item>
      <title>New API method for searching IP addresses</title>
      <link>https://sldn.softlayer.com/blog/jrangel/new-api-method-searching-ip-addresses/</link>
      <pubDate>Fri, 06 Jul 2007 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/jrangel/new-api-method-searching-ip-addresses/</guid>
      <description>&lt;p&gt;(This post refers to SoftLayer API version 1. Check out &lt;a href=&#34;http://sldn.softlayer.com/03/2008/and-now-for-something-completely-different/&#34;&gt;API version 3&lt;/a&gt; for our latest updates.)&lt;/p&gt;&#xA;&lt;p&gt;We&#39;ve added a new feature to the&lt;br /&gt;&#xA;Softlayer API: &lt;b&gt;getIPaddressDetails&lt;/b&gt;. For a given IP address, this method will retrieve the parent subnet, VLAN identifier, IP address which it is routed to and the name of the server it&#39;s routed to. Instead of using the customer portal and typing in a slew of IP addresses one by one into the public network ip search page, simply call this IP for each IP address, saving you time and typing. It&#39;s incredibly useful for tracking down your secondary IPs. &lt;/p&gt;</description>
    </item>
    <item>
      <title>It pays to ask</title>
      <link>https://sldn.softlayer.com/blog/dharris/it-pays-ask/</link>
      <pubDate>Tue, 03 Jul 2007 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/dharris/it-pays-ask/</guid>
      <description>&lt;p&gt;(This post refers to SoftLayer API version 1. Check out &lt;a href=&#34;http://sldn.softlayer.com/03/2008/and-now-for-something-completely-different/&#34;&gt;API version 3&lt;/a&gt; for our latest updates.)&lt;/p&gt;&#xA;&lt;p&gt;Ask...&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://forums.softlayer.com/showthread.php?t=1736&#34;&gt;&lt;img border=&#34;0&#34; width=&#34;302&#34; src=&#34;http://sldn.softlayer.com/wp-content/sldn/23/01-api_request-small.png&#34; height=&#34;186&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;And you shall receive…&lt;/p&gt;&#xA;&lt;p&gt;The newest addition to the API methods has been released and is now available for use. We have improved upon the Portal&#39;s monitoring features by adding just a little more data.(This post refers to SoftLayer API version 1. Check out &lt;a href=&#34;http://sldn.softlayer.com/03/2008/and-now-for-something-completely-different/&#34;&gt;API version 3&lt;/a&gt; for our latest updates.)&lt;/p&gt;</description>
    </item>
    <item>
      <title>API Hacking Fun With Python</title>
      <link>https://sldn.softlayer.com/blog/sboles/api-hacking-fun-python/</link>
      <pubDate>Thu, 21 Jun 2007 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/sboles/api-hacking-fun-python/</guid>
      <description>&lt;p&gt;(This post refers to SoftLayer API version 1. Check out &lt;a href=&#34;http://sldn.softlayer.com/03/2008/and-now-for-something-completely-different/&#34;&gt;API version 3&lt;/a&gt; for our latest updates.)&lt;/p&gt;&#xA;&lt;p&gt;Hello!  I&#39;m Shawn, one of new &#34;Code Writing Professionals&#34; at SoftLayer. When a call went out for examples using SoftLayer&#39;s new API, I immediately signed up to write the &lt;a href=&#34;http://en.wikipedia.org/wiki/Intercal&#34;&gt;INTERCAL&lt;/a&gt;, &lt;a href=&#34;http://en.wikipedia.org/wiki/Prolog&#34;&gt;Prolog&lt;/a&gt;, and &lt;a href=&#34;http://en.wikipedia.org/wiki/Apollo_Guidance_Computer&#34;&gt;Apollo Guidance Computer&lt;/a&gt; modules. I was told to make those &lt;strong&gt;low&lt;/strong&gt; priority projects, and to perhaps focus on hacking with &lt;a href=&#34;http://www.python.org/&#34;&gt;Python&lt;/a&gt; instead. If you just want to see the finished code without all the Python evangelization, skip to the end of the post. For those of you who haven&#39;t hacked with Python yet, follow along for the ride!&lt;/p&gt;</description>
    </item>
    <item>
      <title>API Addition - Backbone Graphs</title>
      <link>https://sldn.softlayer.com/blog/dgeorge/api-addition-backbone-graphs/</link>
      <pubDate>Fri, 08 Jun 2007 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/dgeorge/api-addition-backbone-graphs/</guid>
      <description>&lt;p&gt;(This post refers to SoftLayer API version 1. Check out &lt;a href=&#34;http://sldn.softlayer.com/03/2008/and-now-for-something-completely-different/&#34;&gt;API version 3&lt;/a&gt; for our latest updates.)&lt;/p&gt;&#xA;&lt;p&gt;Due to popular demand, we rolled out a change today which allows querying of our backbone connection graphs.  For the uninitiated, backbone graphs show the network usage between the SoftLayer datacenter and the Internet. This functionality was accomplished by adding two new methods to the SoftLayer API.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;getBackboneList&lt;/strong&gt;&lt;br /&gt;&#xA;Retrieves an array of id and name pairs for all SoftLayer&#39;s Backbone providers&lt;/p&gt;</description>
    </item>
    <item>
      <title>You ask, we respond</title>
      <link>https://sldn.softlayer.com/blog/nday/you-ask-we-respond/</link>
      <pubDate>Tue, 29 May 2007 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/nday/you-ask-we-respond/</guid>
      <description>&lt;p&gt;(This post refers to SoftLayer API version 1. Check out &lt;a href=&#34;http://sldn.softlayer.com/03/2008/and-now-for-something-completely-different/&#34;&gt;API version 3&lt;/a&gt; for our latest updates.)&lt;/p&gt;&#xA;&lt;p&gt;&lt;font size=&#34;2&#34;&gt;We have received a lot of positive feedback on the API. Thanks, we appreciate it. We stood around and patted ourselves on the back for five seconds and got back to work.&lt;/font&gt;&lt;font size=&#34;2&#34;&gt;The first few requests were for bandwidth graphs of our network providers and the ability to control the SoftLayer DNS resolvers for forward and reverse lookups just like in the customer portal. These will be the next couple features you see.&lt;/font&gt;&lt;font size=&#34;2&#34;&gt;Another popular suggestion is for an API function to perform OS reloads (like you currently can from the customer portal). Also, some of you have asked for a sandbox. We are scoping out these two projects so we can add these as well.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Forums</title>
      <link>https://sldn.softlayer.com/blog/nday/forums/</link>
      <pubDate>Mon, 21 May 2007 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/nday/forums/</guid>
      <description>&lt;p&gt;We have launched a new group of forums to provide an area where developers and SoftLayer customers can discuss topics related to the SoftLayer API and receive new features / release announcements for the API. Additionally, you can showcase your newly developed applications that utilize the SoftLayer API.&lt;/p&gt;&#xA;&lt;p&gt;Section one “Announcements” provide information pertaining to new additions of downloadable content, official add-ons for server control panels and other related software, new features that have been added to the API, and any upgrade windows pertaining to SoftLayer API infrastructure. &lt;/p&gt;</description>
    </item>
    <item>
      <title>Introduction</title>
      <link>https://sldn.softlayer.com/blog/nday/introduction/</link>
      <pubDate>Mon, 21 May 2007 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/nday/introduction/</guid>
      <description>&lt;p&gt;Welcome to the SoftLayer Developer Network!&lt;/p&gt;&#xA;&lt;p&gt;SoftLayer has been a leader in giving our customers control over their dedicated server environment through our customer portal. Now we are pushing the envelope and exposing that same level of functionality to our customers through an API. To help you we have created this community - The SoftLayer Developer Network.&lt;/p&gt;&#xA;&lt;p&gt;Just think of what you could do with an API to the datacenter. You could integrate the API into your custom application, you could write a plug-in to your favorite third party app, you could integrate dedicated server command and control into your corporate intranet, or you could even create your own version of the SoftLayer portal.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Quick example</title>
      <link>https://sldn.softlayer.com/blog/dgeorge/quick-example/</link>
      <pubDate>Mon, 21 May 2007 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/dgeorge/quick-example/</guid>
      <description>&lt;p &gt;We are ushering in a new era at SoftLayer with the release of the SoftLayer API.&amp;nbsp;The API opens endless possibilities for our customers to integrate SoftLayer specific functionality into their corporate infrastructure and / or software products.&amp;nbsp;With the API, you can provide datacenter specific control for your server or custom management of SoftLayer services to your customer base. For server resellers, this allows unbranded SoftLayer functionality to their customers via integration into their current customer portal. The API utilizes SOAP or XML-RPC for a communication protocol, by using a non-language specific protocol like SOAP or XML-RPC integration can be made with most current programming languages.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Show off your project</title>
      <link>https://sldn.softlayer.com/blog/nday/show-your-project/</link>
      <pubDate>Mon, 21 May 2007 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/blog/nday/show-your-project/</guid>
      <description>&lt;p&gt;Everyone at SoftLayer is excited about the API. But we can&#39;t wait to see what our customers are going to be doing with it. You can go to the implementations page to see some examples of ways to use the API. What we would really like to put on that page is a list of applications developed by our customers. If you create a use for the API that is new and unique, or if you just want to show the world how cool you are - send us an email at &lt;a href=&#34;mailto:sldn@softlayer.com&#34;&gt;sldn@softlayer.com&lt;/a&gt; and tell us about it and we will feature your project on the implementation page.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
