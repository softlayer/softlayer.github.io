<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>product_package on SoftLayer API</title>
    <link>https://sldn.softlayer.com/tags/product_package/</link>
    <description>Recent content in product_package on SoftLayer API</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 01 Jul 2020 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://sldn.softlayer.com/tags/product_package/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Working with Product package</title>
      <link>https://sldn.softlayer.com/ruby/product_package.rb/</link>
      <pubDate>Wed, 01 Jul 2020 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/ruby/product_package.rb/</guid>
      <description>Product_Package&#xA;Product package examples Some examples use the most important methods. require &amp;#39;softlayer_api&amp;#39; require &amp;#39;json&amp;#39; class ProductPackage def initialize(username, apikey) client = SoftLayer::Client.new(username: username, api_key: apikey,) @package_service = client[&amp;#39;SoftLayer_Product_Package&amp;#39;] end def getAllObject() return @package_service.getAllObjects() end def getActivePreset(packageId) return @package_service.object_with_id(packageId).getActivePreset() end def getItemPrices(packageId) return @package_service.object_with_id(packageId).getItemPrices() end def getItemsConflicts(packageId) return @package_service.object_with_id(packageId).getItemsConflicts() end def getLocations(packageId) return @package_service.object_with_id(packageId).getLocations() end def getObject(packageId) return @package_service.object_with_id(packageId).getObject() end def getRegions(packageId) return @package_service.object_with_id(packageId).getRegions() end def getType(packageId) return @package_service.object_with_id(packageId).getType() end end user = &amp;#39;set - me&amp;#39; key = &amp;#39;set - me&amp;#39; product = ProductPackage.</description>
    </item>
    <item>
      <title>Working with Product package</title>
      <link>https://sldn.softlayer.com/java/productPackage.java/</link>
      <pubDate>Wed, 24 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/java/productPackage.java/</guid>
      <description>Product_Package&#xA;Product package examples Some examples use the most important methods. import com.google.gson.Gson; import com.google.gson.GsonBuilder; import com.softlayer.api.ApiClient; import com.softlayer.api.RestApiClient; import com.softlayer.api.service.Location; import com.softlayer.api.service.location.Region; import com.softlayer.api.service.product.Item; import com.softlayer.api.service.product.Package; import com.softlayer.api.service.product.Package.Service; import com.softlayer.api.service.product.item.Category; import com.softlayer.api.service.product.item.Price; import com.softlayer.api.service.product.pkg.Attribute; import com.softlayer.api.service.product.pkg.Locations; import com.softlayer.api.service.product.pkg.Preset; import com.softlayer.api.service.product.pkg.Type; import com.softlayer.api.service.product.pkg.order.Configuration; import java.util.List; public class ProductPackage { ApiClient client; Service service; /** * method constructor for get the items without package Id * @param user user name credential * @param apiKey api key credential */ public ProductPackage(String user, String apiKey) { client = (new RestApiClient()).</description>
    </item>
  </channel>
</rss>
