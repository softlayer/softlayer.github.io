<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>virtual on SoftLayer API</title>
    <link>https://sldn.softlayer.com/tags/virtual/</link>
    <description>Recent content in virtual on SoftLayer API</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 11 Jan 2019 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://sldn.softlayer.com/tags/virtual/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Working with placement groups</title>
      <link>https://sldn.softlayer.com/go/placement_group.go/</link>
      <pubDate>Fri, 11 Jan 2019 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/go/placement_group.go/</guid>
      <description>Create Placement Group&#xA;package main import ( &amp;#34;encoding/json&amp;#34; &amp;#34;fmt&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/datatypes&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/services&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/session&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/sl&amp;#34; ) func main() { // Create a session sess := session.New() // Get SoftLayer_Virtual_PlacementGroup service. service := services.GetVirtualPlacementGroupService(sess) // A Virtual_PlacementGroup template templateObject := datatypes.Virtual_PlacementGroup{ Name: sl.String(&amp;#34;test&amp;#34;), BackendRouterId: sl.Int(12345), RuleId: sl.Int(1), } // Get SoftLayer_Virtual_PlacementGroup service. receipt, err := service.CreateObject(&amp;amp;templateObject) if err != nil { fmt.Printf(&amp;#34;%s\n&amp;#34;, err) return } jsonFormat, jsonErr := json.MarshalIndent(receipt, &amp;#34;&amp;#34;, &amp;#34; &amp;#34;) if jsonErr !</description>
    </item>
    <item>
      <title>Working with placement groups</title>
      <link>https://sldn.softlayer.com/java/placementGroup.java/</link>
      <pubDate>Fri, 30 Nov 2018 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/java/placementGroup.java/</guid>
      <description>Create Placement Group&#xA;import com.google.gson.Gson; import com.google.gson.GsonBuilder; import com.softlayer.api.ApiClient; import com.softlayer.api.RestApiClient; import com.softlayer.api.service.virtual.PlacementGroup; public class CreateVirtualPlacementGroup { public static void main(String []arg){ String username = &amp;#34;set me&amp;#34;; String apiKey = &amp;#34;set me&amp;#34;; PlacementGroup placement = new PlacementGroup(); placement.setName(&amp;#34;fotest&amp;#34;); placement.setBackendRouterId(11111L); placement.setRuleId(1L); ApiClient client = new RestApiClient().withCredentials(username, apiKey).withLoggingEnabled(); PlacementGroup.Service placementGroup = PlacementGroup.service(client); try { PlacementGroup result = placementGroup.createObject(placement); Gson gson = new GsonBuilder().setPrettyPrinting().create(); System.out.println(gson.toJson(result)); } catch (Exception e) { System.out.println(&amp;#34;Error: &amp;#34; + e); } } } Delete Placement Group</description>
    </item>
    <item>
      <title>Server Locate</title>
      <link>https://sldn.softlayer.com/ruby/server_locate/</link>
      <pubDate>Tue, 30 Sep 2014 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/ruby/server_locate/</guid>
      <description>require &amp;#39;softlayer_api&amp;#39; # gem install softlayer_api require &amp;#39;table_print&amp;#39; # gem install table_print # Credentials to the SoftLayer API are grabbed from the config file by default. # See https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L44 SoftLayer::Client.default_client = SoftLayer::Client.new servers = SoftLayer::VirtualServer.find_servers(object_mask: &amp;#39;mask[location.pathString]&amp;#39;) location_info = servers.map do |server| datacenter, server_room, rack, slot = server[&amp;#39;location&amp;#39;][&amp;#39;pathString&amp;#39;].split(&amp;#39;.&amp;#39;) { server: server.fullyQualifiedDomainName, data_center: datacenter, server_room: server_room, rack: rack, slot: slot } end tp location_info </description>
    </item>
  </channel>
</rss>
