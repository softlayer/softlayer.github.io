<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>vlan on SoftLayer API</title>
    <link>https://sldn.softlayer.com/tags/vlan/</link>
    <description>Recent content in vlan on SoftLayer API</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 18 Dec 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://sldn.softlayer.com/tags/vlan/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>VLAN Trunking</title>
      <link>https://sldn.softlayer.com/article/vlanTrunking/</link>
      <pubDate>Mon, 18 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/article/vlanTrunking/</guid>
      <description>Basics of VLAN Trunking Trunking VLANs allows you to enable bare metal servers that are in the same POD, but on different primary VLANs, to be able to communicate as if they were on the same VLAN. So if you have Server1 on VLAN1, and Server2 on VLAN2 (in the same POD), you could trunk VLAN2 to Server1&amp;rsquo;s switch port allowing Server1 to communicate on VLAN2.&#xA;This article will explain how to do that with the CLI and API tools.</description>
    </item>
    <item>
      <title>Trunking VLANs</title>
      <link>https://sldn.softlayer.com/python/vlanTagging/</link>
      <pubDate>Thu, 04 Aug 2022 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/python/vlanTagging/</guid>
      <description>This example shows how to add VLAN Trunks to a server.&#xA;NOTE When trying to get the vlan tags/trunks from a server, the trunk information is on the Hardware_Server-&amp;gt;networkComponent-&amp;gt;uplinkComponent-&amp;gt;networkVlanTrunks relationship.&#xA;VLAN Trunks &amp;#34;&amp;#34;&amp;#34; @author Christopher Gallo Adds specified Public and Private VLANs to a given server ID. Script requried Python 3.7+ click 8.0+ rich &amp;#34;&amp;#34;&amp;#34; # Click is used to make this script support CLI arguments import click # Used for details table output from rich.</description>
    </item>
    <item>
      <title>Working with Subnets</title>
      <link>https://sldn.softlayer.com/php/workingWithSubnets/</link>
      <pubDate>Fri, 22 Apr 2022 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/php/workingWithSubnets/</guid>
      <description>Read up on the PHP article for information on how to setup the CLI Framework to get this code to run easily.&#xA;Canceling Image template This script makes a paginated API call to SoftLayer_Billing_Item::cancelItem().&#xA;&amp;lt;?php /** * Cancel a Subnet. * This script cancels a network subnet using its billing Item. * * Important manual pages: * http://sldn.softlayer.com/reference/services/SoftLayer_Billing_Item/cancelItem * * @license &amp;lt;http://sldn.softlayer.com/wiki/index.php/License&amp;gt; * @author SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ require_once(dirname(__FILE__) .</description>
    </item>
    <item>
      <title>Working with VLANs</title>
      <link>https://sldn.softlayer.com/go/workingWithNetworks/</link>
      <pubDate>Wed, 29 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/go/workingWithNetworks/</guid>
      <description>For these set of examples, we will be using a cobra CLI framework for golang, letting us create an individual command for each example as we go along. Read up on the Golang Example Framework for information on how to setup the CLI Framework to get this code to run easily.&#xA;Listing VLANs Listing vlans is likely the most common thing to do, so it makes a good starting point. This script makes a paginated API call to SoftLayer_Account::getNetworkVlans() and prints out a quick CSV about the servers on your acccount.</description>
    </item>
    <item>
      <title>Order a Virtual and Bare Metal Server by frondend/backend vlan or router</title>
      <link>https://sldn.softlayer.com/go/order_server_by_vlan_router.go/</link>
      <pubDate>Wed, 30 Jun 2021 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/go/order_server_by_vlan_router.go/</guid>
      <description>Order a Bare Metal by frondend/backend vlan or router. Find the package that you want to order. listServerPackages() will filter out all that are not bare metal servers.&#xA;Use getServerPrices() to find the item keyNames you want to include in your order. These price IDs can be included prices array directly, but I’ve included gatherPriceIds() to match up KeyNames to build a list of price ids. getServerPrices() will also show the locations available for ordering.</description>
    </item>
    <item>
      <title>Order a Virtual and Bare Metal Server by frondend/backend vlan or router</title>
      <link>https://sldn.softlayer.com/python/order_server_by_vlan_router.py/</link>
      <pubDate>Thu, 26 Nov 2020 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/python/order_server_by_vlan_router.py/</guid>
      <description>Order a Bare Metal by frondend/backend vlan or router. Example of how to build an order for a bare metal server.&#xA;1. Find the package that you want to order. listServerPackages() will filter out all that are not bare metal servers. 2. Use getServerPrices() to find the item keyNames you want to include in your order. These price IDs can be included prices array directly, but I’ve included gatherPriceIds() to match up KeyNames to build a list of price ids.</description>
    </item>
    <item>
      <title>Working with Network Vlan</title>
      <link>https://sldn.softlayer.com/java/networkVlan.java/</link>
      <pubDate>Thu, 25 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/java/networkVlan.java/</guid>
      <description>import com.google.gson.Gson; import com.google.gson.GsonBuilder; import com.softlayer.api.ApiClient; import com.softlayer.api.RestApiClient; import com.softlayer.api.service.Account; import com.softlayer.api.service.Entity; import com.softlayer.api.service.Location; import com.softlayer.api.service.container.product.Order; import com.softlayer.api.service.container.product.order.network.Vlan; import com.softlayer.api.service.location.Datacenter; import com.softlayer.api.service.product.Item; import com.softlayer.api.service.product.Package; import com.softlayer.api.service.product.item.Price; import java.util.List; public class NetworkVlanExample { private final ApiClient client; public NetworkVlanExample() { String username = &amp;#34;set me&amp;#34;; String apiKey = &amp;#34;set me&amp;#34;; client = new RestApiClient().withCredentials(username, apiKey).withLoggingEnabled(); } public static void main(String[] args) { final String vlanName = &amp;#34;Test Vlan&amp;#34;; final String packageKeyname = &amp;#34;NETWORK_VLAN&amp;#34;; final String datacenter = &amp;#34;dal13&amp;#34;; final String item = &amp;#34;PRIVATE_NETWORK_VLAN&amp;#34;; final boolean verify = true; NetworkVlanExample networkVlan = new NetworkVlanExample(); networkVlan.</description>
    </item>
    <item>
      <title>Advanced Bare Metal Server Ordering</title>
      <link>https://sldn.softlayer.com/python/orderBareMetal/</link>
      <pubDate>Wed, 20 Mar 2019 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/python/orderBareMetal/</guid>
      <description>Example of how to build an order for a bare metal server.&#xA;Find the package that you want to order. listServerPackages() will filter out all that are not bare metal servers Use getServerPrices() to find the item keyNames you want to include in your order. These price IDs can be included prices array directly, but I&amp;rsquo;ve included gatherPriceIds() to match up KeyNames to build a list of price ids. getServerPrices() will also show the locations available for ordering.</description>
    </item>
    <item>
      <title>Order Portable Subnet</title>
      <link>https://sldn.softlayer.com/python/order_portable_subnet/</link>
      <pubDate>Fri, 15 Mar 2019 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/python/order_portable_subnet/</guid>
      <description>This example uses the verifyOrder method to check the order for errors, replace it by placeOrder method when you are ready to order.&#xA;NOTE: The selected Vlan must be in the same location you want to order the new portable subnet&#xA;import SoftLayer from pprint import pprint class Network: def __init__(self): self.client = SoftLayer.Client() def _get_package_id(self, keyname): _filter = {&amp;#34;type&amp;#34;:{&amp;#34;keyName&amp;#34;:{&amp;#34;operation&amp;#34;:keyname}}} package = self.client[&amp;#39;Product_Package&amp;#39;].getAllObjects(filter=_filter) return package[0][&amp;#39;id&amp;#39;] def _get_item_price(self, package_id, item_keyname): _filter = {&amp;#34;items&amp;#34;:{&amp;#34;keyName&amp;#34;:{&amp;#34;operation&amp;#34;:item_keyname}}} items = self.</description>
    </item>
    <item>
      <title>CancelVlan.cs</title>
      <link>https://sldn.softlayer.com/csharp/CancelVlan.cs/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/csharp/CancelVlan.cs/</guid>
      <description>//----------------------------------------------------------------------- // &amp;lt;copyright file=&amp;#34;CancelVlan.cs&amp;#34; company=&amp;#34;Softlayer&amp;#34;&amp;gt; // SoftLayer Technologies, Inc. // &amp;lt;/copyright&amp;gt; // &amp;lt;license&amp;gt; // http://sldn.softlayer.com/article/License // &amp;lt;/license&amp;gt; //----------------------------------------------------------------------- namespace CancelVlanNamespace { using System; /// &amp;lt;summary&amp;gt; /// Example to cancel a VLAN /// The script will get the Billing_Item id of the VLAN service /// then it will cancel the VLAN service /// &amp;lt;/summary&amp;gt; /// &amp;lt;manualPages&amp;gt; /// http://sldn.softlayer.com/reference/services/SoftLayer_Network_Vlan /// http://sldn.softlayer.com/reference/services/SoftLayer_Network_Vlan/getObject /// http://sldn.softlayer.com/reference/services/SoftLayer_Billing_Item /// http://sldn.softlayer.com/reference/services/SoftLayer_Billing_Item/cancelService /// &amp;lt;/manualPages&amp;gt; class CancelVlan { static void Main(string[] args) { // Your SoftLayer API username and key.</description>
    </item>
    <item>
      <title>CancelVlan.php</title>
      <link>https://sldn.softlayer.com/php/CancelVlan.php/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/php/CancelVlan.php/</guid>
      <description>&amp;lt;?php /** * Example to cancel a VLAN * * The script will get the Billing_Item id of the VLAN service * then it will cancel the VLAN service * * Important manual pages * http://sldn.softlayer.com/reference/services/SoftLayer_Network_Vlan * http://sldn.softlayer.com/reference/services/SoftLayer_Network_Vlan/getObject * http://sldn.softlayer.com/reference/services/SoftLayer_Billing_Item * http://sldn.softlayer.com/reference/services/SoftLayer_Billing_Item/cancelService * * License: http://sldn.softlayer.com/article/License * Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ require_once (&amp;#39;SoftLayer/SoapClient.class.php&amp;#39;); // Your SoftLayer API username and key. $apiUsername = &amp;#39;set me&amp;#39;; $apiKey = &amp;#39;set me&amp;#39;; // The VLAN id you wish to cancel $vlanId = 563298; // Declaring the API client $networkVlanService = Softlayer_SoapClient::getClient(&amp;#39;SoftLayer_Network_Vlan&amp;#39;, null, $apiUsername, $apiKey); $billingItemService = Softlayer_SoapClient::getClient(&amp;#39;SoftLayer_Billing_Item&amp;#39;, null, $apiUsername, $apiKey); $networkVlanService-&amp;gt;setInitParameter($vlanId); // Declaring an object mask to get the billing item information $objectMask = new SoftLayer_ObjectMask(); $objectMask-&amp;gt;billingItem; $objectMask-&amp;gt;billingItem-&amp;gt;id; $networkVlanService-&amp;gt;setObjectMask($objectMask); try { // Getting the Billing Item to cancel the VLAN service.</description>
    </item>
    <item>
      <title>GetDetailVLAN.cs</title>
      <link>https://sldn.softlayer.com/csharp/GetDetailVLAN.cs/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/csharp/GetDetailVLAN.cs/</guid>
      <description>//----------------------------------------------------------------------- // &amp;lt;copyright file=&amp;#34;GetDetailVLAN.cs&amp;#34; company=&amp;#34;Softlayer&amp;#34;&amp;gt; // SoftLayer Technologies, Inc. // &amp;lt;/copyright&amp;gt; // &amp;lt;license&amp;gt; // http://sldn.softlayer.com/article/License // &amp;lt;/license&amp;gt; //----------------------------------------------------------------------- namespace GetDetailVLANNamespace { using System; /// &amp;lt;summary&amp;gt; /// Retrieve VLAN details such as primary router and subnet. /// The script retrieves the primary router and subnet for a determinate VLAN /// associated with a SoftLayer customer account /// We do this with a call to the getObject() method in the /// SoftLayer_Network_Vlan API service using an object mask to retrieve /// associated subnets and primary router records.</description>
    </item>
    <item>
      <title>GetSubnets.cs</title>
      <link>https://sldn.softlayer.com/csharp/GetSubnets.cs/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/csharp/GetSubnets.cs/</guid>
      <description>//----------------------------------------------------------------------- // &amp;lt;copyright file=&amp;#34;GetSubnets.cs&amp;#34; company=&amp;#34;Softlayer&amp;#34;&amp;gt; // SoftLayer Technologies, Inc. // &amp;lt;/copyright&amp;gt; // &amp;lt;license&amp;gt; // http://sldn.softlayer.com/article/License // &amp;lt;/license&amp;gt; //----------------------------------------------------------------------- namespace GetSubnetsNamespace { using System; class GetSubnets { /// &amp;lt;summary&amp;gt; /// Retrieve the subnets for a VLAN /// The example retrieves all the subnets for a determinate VLAN /// associated with a SoftLayer customer account /// We do this with a call to the getSubnets() method in the /// SoftLayer_Network_Vlan API service. See below for more details.</description>
    </item>
    <item>
      <title>GetVlANs.cs</title>
      <link>https://sldn.softlayer.com/csharp/GetVlANs.cs/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/csharp/GetVlANs.cs/</guid>
      <description>//----------------------------------------------------------------------- // &amp;lt;copyright file=&amp;#34;GetVlANs.cs&amp;#34; company=&amp;#34;Softlayer&amp;#34;&amp;gt; // SoftLayer Technologies, Inc. // &amp;lt;/copyright&amp;gt; // &amp;lt;license&amp;gt; // http://sldn.softlayer.com/article/License // &amp;lt;/license&amp;gt; //----------------------------------------------------------------------- namespace GetVlansNamespace { using System; class GetVlANs { /// &amp;lt;summary&amp;gt; /// Retrieve account VLANs and subnet information. /// The script retrieves a list of all VLANs associated with a SoftLayer customer account /// and prints a simple report detailing these VLANs and the subnets assigned to /// them. We do this with a call to the getNetworkVlans() method in the /// SoftLayer_Account API service using an object mask to retrieve the VLANs&amp;#39; /// associated subnets and primary router records.</description>
    </item>
    <item>
      <title>OrderVLAN.cs</title>
      <link>https://sldn.softlayer.com/csharp/OrderVLAN.cs/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/csharp/OrderVLAN.cs/</guid>
      <description>//----------------------------------------------------------------------- // &amp;lt;copyright file=&amp;#34;OrderVLAN.cs&amp;#34; company=&amp;#34;Softlayer&amp;#34;&amp;gt; // SoftLayer Technologies, Inc. // &amp;lt;/copyright&amp;gt; // &amp;lt;license&amp;gt; // http://sldn.softlayer.com/article/License // &amp;lt;/license&amp;gt; //----------------------------------------------------------------------- namespace OrderVLANNamespace { using System; using System.Collections.Generic; class OrderVLAN { /// &amp;lt;summary&amp;gt; /// Example to create a new VLAN /// the script uses the placeOrder method to order /// a new VLAN with 32 static IP address /// &amp;lt;/summary&amp;gt; /// &amp;lt;manualPages&amp;gt; /// http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order /// http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder /// http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder/ /// http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Network_Vlan /// http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price /// &amp;lt;/manualPages&amp;gt; static void Main(string[] args) { // Your SoftLayer API and username key.</description>
    </item>
    <item>
      <title>PlaceOrderVlan.php</title>
      <link>https://sldn.softlayer.com/php/PlaceOrderVlan.php/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/php/PlaceOrderVlan.php/</guid>
      <description>&amp;lt;?php /** * Example to create a new VLAN. * * The script uses the placeOrder method to order * a new VLAN with 32 static IP address * * Important manual pages: * http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order * http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder * http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder/ * http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order_Network_Vlan * http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price * * License: http://sldn.softlayer.com/article/License * Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ require_once (&amp;#39;Softlayer/SoapClient.class.php&amp;#39;); // Your SoftLayer API username and key. $username = &amp;#39;set me&amp;#39;; $key = &amp;#39;set me&amp;#39;; # Building a skeleton SoftLayer_Product_Item_Price objects.</description>
    </item>
    <item>
      <title>SwitchPortStats.cs</title>
      <link>https://sldn.softlayer.com/csharp/SwitchPortStats.cs/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/csharp/SwitchPortStats.cs/</guid>
      <description>//----------------------------------------------------------------------- // &amp;lt;copyright file=&amp;#34;SwitchPortStats.cs&amp;#34; company=&amp;#34;Softlayer&amp;#34;&amp;gt; // SoftLayer Technologies, Inc. // &amp;lt;/copyright&amp;gt; // &amp;lt;license&amp;gt; // http://sldn.softlayer.com/article/License // &amp;lt;/license&amp;gt; //----------------------------------------------------------------------- namespace SwitchPortStatsNamespace { using System; class SwitchPortStats { /// &amp;lt;summary&amp;gt; /// Retrieve a list of switchport statistics for a server&amp;#39;s network interfaces. /// This script makes a single call to the getPortStatistics() method in the /// SoftLayer_Network_Component API service /// for each of a server&amp;#39;s network components to query port statistics for that /// interface from SoftLayer&amp;#39;s switches.</description>
    </item>
    <item>
      <title>SwitchPortStats.php</title>
      <link>https://sldn.softlayer.com/php/SwitchPortStats.php/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/php/SwitchPortStats.php/</guid>
      <description>&amp;lt;?php /** * Retrieve a list of switch port statistics for a server&amp;#39;s network interfaces. * * This script makes a single call to the getPortStatistics() method in the * SoftLayer_Network_Component API service * for each of a server&amp;#39;s network components to query port statistics for that * interface from SoftLayer&amp;#39;s switches. Port statistics are modeled by the * SoftLayer__Container_Network_Port_Statistic data type * See below for more details. * * Important manual pages: * http://sldn.</description>
    </item>
    <item>
      <title>Network Topology</title>
      <link>https://sldn.softlayer.com/python/networkTopology/</link>
      <pubDate>Fri, 17 Mar 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/python/networkTopology/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; @author Christopher Gallo &amp;#34;&amp;#34;&amp;#34; import SoftLayer from pprint import pprint as pp class example(): def __init__(self): self.client = SoftLayer.Client() def main(self): mask = &amp;#34;&amp;#34;&amp;#34; mask[ attachedNetworkGateway[publicVlan,privateVlan], hardware[fullyQualifiedDomainName,frontendNetworkComponents[uplinkComponent], backendNetworkComponents[uplinkComponent]], network, networkSpace, primaryRouter[hostname], primarySubnet, subnets[networkIdentifier], virtualGuests[fullyQualifiedDomainName] ] &amp;#34;&amp;#34;&amp;#34; orderedVlans = {} result = self.client[&amp;#39;SoftLayer_Account&amp;#39;].getNetworkVlans(mask=mask) &amp;#34;&amp;#34;&amp;#34; This bit builds a nicely structured object of the network topology &amp;#34;&amp;#34;&amp;#34; for vlan in result: vlanNumber = vlan[&amp;#39;vlanNumber&amp;#39;] router,dc = vlan[&amp;#39;primaryRouter&amp;#39;][&amp;#39;hostname&amp;#39;].split(&amp;#34;.&amp;#34;) if dc not in orderedVlans: orderedVlans[dc] = {} if router not in orderedVlans[dc]: orderedVlans[dc][router] = {} toAppend = { &amp;#39;hardware&amp;#39;: vlan[&amp;#39;hardware&amp;#39;], &amp;#39;virtualGuests&amp;#39;: vlan[&amp;#39;virtualGuests&amp;#39;], &amp;#39;subnets&amp;#39;: vlan[&amp;#39;subnets&amp;#39;] } if &amp;#39;attachedNetworkGateway&amp;#39; in vlan: if vlan[&amp;#39;networkSpace&amp;#39;] == &amp;#39;PUBLIC&amp;#39;: gatewayVlan = vlan[&amp;#39;attachedNetworkGateway&amp;#39;][&amp;#39;publicVlan&amp;#39;][&amp;#39;vlanNumber&amp;#39;] elif vlan[&amp;#39;networkSpace&amp;#39;] == &amp;#39;PRIVATE&amp;#39;: gatewayVlan = vlan[&amp;#39;attachedNetworkGateway&amp;#39;][&amp;#39;privateVlan&amp;#39;][&amp;#39;vlanNumber&amp;#39;] if gatewayVlan not in orderedVlans[dc][router]: orderedVlans[dc][router][gatewayVlan] = {} orderedVlans[dc][router][gatewayVlan][vlanNumber] = toAppend orderedVlans[dc][router][gatewayVlan][&amp;#39;gateway&amp;#39;] = True else: orderedVlans[dc][router][vlanNumber] = toAppend &amp;#34;&amp;#34;&amp;#34; This bit prints out everything nicely-ish.</description>
    </item>
  </channel>
</rss>
