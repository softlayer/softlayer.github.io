<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cdn on SoftLayer API</title>
    <link>https://sldn.softlayer.com/tags/cdn/</link>
    <description>Recent content in cdn on SoftLayer API</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 02 Jan 2021 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://sldn.softlayer.com/tags/cdn/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Managing CDN accounts</title>
      <link>https://sldn.softlayer.com/java/CDN_services.java/</link>
      <pubDate>Sat, 02 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/java/CDN_services.java/</guid>
      <description>Setup Each of these snippets below will share basically the same initialization code, so to save some space we will include the initialization code here, and assume you can setup the SoftLayer client before running each example.&#xA;package networkcdnMarketplaceconfigurationmapping; import com.google.gson.Gson; import com.google.gson.GsonBuilder; import com.google.gson.JsonObject; import com.softlayer.api.ApiClient; import com.softlayer.api.RestApiClient; import com.softlayer.api.service.network.cdnmarketplace.configuration.Mapping; import com.softlayer.api.service.network.cdnmarketplace.configuration.mapping.Path; import com.softlayer.api.service.network.cdnmarketplace.configuration.cache.Purge; import com.softlayer.api.service.container.network.cdnmarketplace.configuration.*; import java.util.AbstractMap; import java.util.HashMap; import java.util.List; import java.util.Map; import java.util.regex.Matcher; import java.util.regex.Pattern; public class CdnServices { Path.</description>
    </item>
    <item>
      <title>Managing CDN accounts</title>
      <link>https://sldn.softlayer.com/go/CDN_services.go/</link>
      <pubDate>Wed, 07 Oct 2020 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/go/CDN_services.go/</guid>
      <description>Setup Each of these snippets below will share basically the same initialization code, so to save some space we will include the initialization code here, and assume you can setup the SoftLayer client before running each example.&#xA;package main import ( &amp;#34;encoding/json&amp;#34; &amp;#34;fmt&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/datatypes&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/filter&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/services&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/session&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/sl&amp;#34; ) // username and API key can be read from the ~/.softlayer file, or set here if needed. username := &amp;#34;set- me&amp;#34; apikey := &amp;#34;set - me&amp;#34; // Create SoftLayer API session sess := session.</description>
    </item>
    <item>
      <title>Working with CDN Network.rb</title>
      <link>https://sldn.softlayer.com/ruby/cdn_network.rb/</link>
      <pubDate>Wed, 03 Jul 2019 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/ruby/cdn_network.rb/</guid>
      <description>List CDN network require &amp;#39;softlayer_api&amp;#39; require &amp;#39;awesome_print&amp;#39; SL_API_USERNAME = &amp;#39;Set me&amp;#39; SL_API_KEY = &amp;#39;Set me&amp;#39; client = SoftLayer::Client.new(username: SL_API_USERNAME, api_key: SL_API_KEY) cdnService = client[&amp;#39;SoftLayer_Network_CdnMarketplace_Configuration_Mapping&amp;#39;] begin result = cdnService.listDomainMappings() ap result rescue StandardError =&amp;gt; error_reason puts &amp;#34;Unable to create the image #{error_reason}&amp;#34; end list CDN origin path require &amp;#39;softlayer_api&amp;#39; require &amp;#39;awesome_print&amp;#39; SL_API_USERNAME = &amp;#39;set me&amp;#39; SL_API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer::Client.new(username: SL_API_USERNAME, api_key: SL_API_KEY, endpoint_url: ENDPOINT_URL) cdnService = client[&amp;#39;SoftLayer_Network_CdnMarketplace_Configuration_Mapping_Path&amp;#39;] # Set with CDN unique id.</description>
    </item>
    <item>
      <title>Working with CDN Network.py</title>
      <link>https://sldn.softlayer.com/python/cdn_network.py/</link>
      <pubDate>Tue, 11 Jun 2019 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/python/cdn_network.py/</guid>
      <description>List CDN network import SoftLayer import json client = SoftLayer.create_client_from_env() apiAuthenticationKey = client[&amp;#39;SoftLayer_Network_CdnMarketplace_Configuration_Mapping&amp;#39;] try: response = apiAuthenticationKey.listDomainMappings() print(json.dumps(response, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to list the response for the CDN network: &amp;#34;, &amp;#39;{} - {}&amp;#39;.format(e.faultCode, e.faultString)) ###list CDN origin path&#xA;import SoftLayer import json client = SoftLayer.create_client_from_env() apiAuthenticationKey = client[&amp;#39;SoftLayer_Network_CdnMarketplace_Configuration_Mapping_Path&amp;#39;] &amp;#34;&amp;#34;&amp;#34; Set with CDN unique id. &amp;#34;&amp;#34;&amp;#34; uniqueId = &amp;#34;123456&amp;#34; try: response = apiAuthenticationKey.listOriginPath(uniqueId) print(json.dumps(response, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.</description>
    </item>
    <item>
      <title>CDN Purge</title>
      <link>https://sldn.softlayer.com/java/CDNPurge/</link>
      <pubDate>Thu, 02 Aug 2018 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/java/CDNPurge/</guid>
      <description>Akamai CDN&#xA;import java.util.List; import com.google.gson.Gson; import com.google.gson.GsonBuilder; import com.softlayer.api.ApiClient; import com.softlayer.api.RestApiClient; import com.softlayer.api.service.container.network.cdnmarketplace.configuration.cache.Purge; public class AkamaiCDNPurge{ public static void main(String[] args) { // Your SoftLayer API username and key. String user = &amp;#34;set me&amp;#34;; String apiKey = &amp;#34;set me&amp;#34;; // ID of Akamai CDN String cdnId = &amp;#34;11334422425697&amp;#34;; // Standard Unix path syntax to reach the file you wish to purge. String path = &amp;#34;/folderPath/file&amp;#34;; // API client ApiClient client = new RestApiClient().</description>
    </item>
    <item>
      <title>add_origin_mapping.go</title>
      <link>https://sldn.softlayer.com/go/add_origin_mapping.go/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/go/add_origin_mapping.go/</guid>
      <description>/* Create an origin mappings in a CDN. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Network_ContentDelivery_Account/createOriginPullMapping http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Network_ContentDelivery_OriginPull_Mapping License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ package main import ( &amp;#34;fmt&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/session&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/services&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/datatypes&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/sl&amp;#34; ) func main() { // SoftLayer API username and key username := &amp;#34;set me&amp;#34; apikey := &amp;#34;set me&amp;#34; // The id of CDN Account you wish to add an origin pull mapping cdnId := 8166 // Declare the mediaType, originURL and cname mediaType := &amp;#34;HTTP&amp;#34; originUrl := &amp;#34;http://www.</description>
    </item>
    <item>
      <title>add_origin_mapping.py</title>
      <link>https://sldn.softlayer.com/python/add_origin_mapping.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/python/add_origin_mapping.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Create an origin mappings in a CDN. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Network_ContentDelivery_Account/createOriginPullMapping http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Network_ContentDelivery_OriginPull_Mapping License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; cdnid = 30393 template = { &amp;#34;mediaType&amp;#34;: &amp;#34;HTTP&amp;#34;, &amp;#34;originUrl&amp;#34;: &amp;#34;http://www.example.com&amp;#34;, &amp;#34;cname&amp;#34;: &amp;#34;cdn.example.com&amp;#34; } # Declare the API client client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) cdnService = client[&amp;#39;SoftLayer_Network_ContentDelivery_Account&amp;#39;] try: response = cdnService.createOriginPullMapping(template, id=cdnid) print(json.dumps(response, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.</description>
    </item>
    <item>
      <title>add_origin_mapping.rb</title>
      <link>https://sldn.softlayer.com/ruby/add_origin_mapping.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/ruby/add_origin_mapping.rb/</guid>
      <description># Create an origin mappings in a CDN. # # Important manual pages # http://sldn.softlayer.com/reference/services/SoftLayer_Network_ContentDelivery_Account/createOriginPullMapping # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Network_ContentDelivery_OriginPull_Mapping # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Your SoftLayer API key and username. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; cdn_id = 303_93 template = { &amp;#39;mediaType&amp;#39; =&amp;gt; &amp;#39;HTTP&amp;#39;, &amp;#39;originUrl&amp;#39; =&amp;gt; &amp;#39;http://www.example.com&amp;#39;, &amp;#39;cname&amp;#39; =&amp;gt; &amp;#39;cdn.example.com&amp;#39; } # Declaring the API client client = SoftLayer::Client.new(username: USERNAME, api_key: API_KEY) cdn_service = client[&amp;#39;SoftLayer_Network_ContentDelivery_Account&amp;#39;] begin response = cdn_service.</description>
    </item>
    <item>
      <title>CDN Bandwidth Data</title>
      <link>https://sldn.softlayer.com/python/get_bandwidth_data.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/python/get_bandwidth_data.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Get bandwidth data in a CDN. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Network_ContentDelivery_Account/getBandwidthData License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; cdnid = 30393 startDate = &amp;#34;2014-10-10 00:00:00&amp;#34; endDate = &amp;#34;2015-10-10 05:00:00&amp;#34; # Declare the API client client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) cdnService = client[&amp;#39;SoftLayer_Network_ContentDelivery_Account&amp;#39;] try: response = cdnService.getBandwidthData(startDate, endDate, id=cdnid) print(json.dumps(response, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to get the bandwidth data.</description>
    </item>
    <item>
      <title>delet_origin_mapping.py</title>
      <link>https://sldn.softlayer.com/python/delet_origin_mapping.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/python/delet_origin_mapping.py/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Delete an origin mappings in a CDN. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Network_ContentDelivery_Account/deleteOriginPullRule http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Network_ContentDelivery_OriginPull_Mapping License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; cdnid = 30393 originid = &amp;#34;co616979&amp;#34; # Declare the API client client = SoftLayer.Client(username=USERNAME, api_key=API_KEY) cdnService = client[&amp;#39;SoftLayer_Network_ContentDelivery_Account&amp;#39;] try: response = cdnService.deleteOriginPullRule(originid, id=cdnid) print(json.dumps(response, sort_keys=True, indent=2, separators=(&amp;#39;,&amp;#39;, &amp;#39;: &amp;#39;))) except SoftLayer.SoftLayerAPIError as e: print(&amp;#34;Unable to delete the origin mappings.</description>
    </item>
    <item>
      <title>delete_origin_mapping.go</title>
      <link>https://sldn.softlayer.com/go/delete_origin_mapping.go/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/go/delete_origin_mapping.go/</guid>
      <description>/* Delete an origin mappings in a CDN. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Network_ContentDelivery_Account/deleteOriginPullRule http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Network_ContentDelivery_OriginPull_Mapping License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ package main import ( &amp;#34;fmt&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/session&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/services&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/sl&amp;#34; ) func main() { // SoftLayer API username and key username := &amp;#34;set me&amp;#34; apikey := &amp;#34;set me&amp;#34; // The id of CDN Account you wish to delete an origin mapping cdnId := 8166 // The id of origin pull mapping you wish to delete originId := &amp;#34;op1689589&amp;#34; // Create SoftLayer API session sess := session.</description>
    </item>
    <item>
      <title>delete_origin_mapping.rb</title>
      <link>https://sldn.softlayer.com/ruby/delete_origin_mapping.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/ruby/delete_origin_mapping.rb/</guid>
      <description># Delete an origin mappings in a CDN. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Network_ContentDelivery_Account/deleteOriginPullRule # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Network_ContentDelivery_OriginPull_Mapping # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Your SoftLayer API key and username. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; cdn_id = 303_93 origin_id = &amp;#39;op907521&amp;#39; # Declaring the API client client = SoftLayer::Client.new(username: USERNAME, api_key: API_KEY) cdn_service = client[&amp;#39;SoftLayer_Network_ContentDelivery_Account&amp;#39;] begin response = cdn_service.object_with_id(cdn_id).deleteOriginPullRule(origin_id) print response rescue StandardError =&amp;gt; exception puts &amp;#34;Unable to delete the origin mappings.</description>
    </item>
    <item>
      <title>get_bandwidth_data.go</title>
      <link>https://sldn.softlayer.com/go/get_bandwidth_data.go/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/go/get_bandwidth_data.go/</guid>
      <description>/* Get bandwidth data in a CDN. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Network_ContentDelivery_Account/getBandwidthData License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ package main import ( &amp;#34;fmt&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/session&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/services&amp;#34; &amp;#34;encoding/json&amp;#34; &amp;#34;time&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/sl&amp;#34; ) func main() { // SoftLayer API username and key username := &amp;#34;set me&amp;#34; apikey := &amp;#34;set me&amp;#34; // The id of CDN Account you wish to get bandwidth data information cdnId := 8166 // Declare between what dates you wish to get the bandwidth data.</description>
    </item>
    <item>
      <title>get_bandwidth_data.rb</title>
      <link>https://sldn.softlayer.com/ruby/get_bandwidth_data.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/ruby/get_bandwidth_data.rb/</guid>
      <description># Get bandwidth data in a CDN. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Network_ContentDelivery_Account/getBandwidthData # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Your SoftLayer API key and username. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; cdn_id = 303_93 start_date = &amp;#39;2014-10-10 00:00:00&amp;#39; end_date = &amp;#39;2015-10-10 05:00:00&amp;#39; client = SoftLayer::Client.new(username: USERNAME, api_key: API_KEY) cdn_service = client[&amp;#39;SoftLayer_Network_ContentDelivery_Account&amp;#39;] begin response = cdn_service.object_with_id(cdn_id).getBandwidthData(start_date, end_date) print response rescue StandardError =&amp;gt; exception puts &amp;#34;Unable to get the bandwidth data.</description>
    </item>
    <item>
      <title>list_origin_mapping.go</title>
      <link>https://sldn.softlayer.com/go/list_origin_mapping.go/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/go/list_origin_mapping.go/</guid>
      <description>/* List all the origin pull mappings in the CDN. Important manual pages: http://sldn.softlayer.com/reference/services/SoftLayer_Network_ContentDelivery_Account/getOriginPullMappingInformation License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ package main import ( &amp;#34;fmt&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/session&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/services&amp;#34; &amp;#34;encoding/json&amp;#34; ) func main() { // SoftLayer API username and key username := &amp;#34;set me&amp;#34; apikey := &amp;#34;set me&amp;#34; // The id of CDN Account you wish to get pull mapping information cdnId := 8166 // Create SoftLayer API session sess := session.</description>
    </item>
    <item>
      <title>list_origin_mapping.rb</title>
      <link>https://sldn.softlayer.com/ruby/list_origin_mapping.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/ruby/list_origin_mapping.rb/</guid>
      <description># List all the origin pull mappings in the CDN. # # Important manual pages: # http://sldn.softlayer.com/reference/services/SoftLayer_Network_ContentDelivery_Account/getOriginPullMappingInformation # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Your SoftLayer API key and username. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; cdn_id = 303_93 # Declaring the API client client = SoftLayer::Client.new(username: USERNAME, api_key: API_KEY) cdn_service = client[&amp;#39;SoftLayer_Network_ContentDelivery_Account&amp;#39;] begin response = cdn_service.object_with_id(cdn_id).getOriginPullMappingInformation print response rescue StandardError =&amp;gt; exception puts &amp;#34;Unable to list origin mappings.</description>
    </item>
  </channel>
</rss>
