<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>verifyorder on SoftLayer API</title>
    <link>https://sldn.softlayer.com/tags/verifyorder/</link>
    <description>Recent content in verifyorder on SoftLayer API</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 19 Mar 2019 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://sldn.softlayer.com/tags/verifyorder/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Verify items conflicts in ordering</title>
      <link>https://sldn.softlayer.com/python/verify_items_conflicts_in_ordering/</link>
      <pubDate>Tue, 19 Mar 2019 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/python/verify_items_conflicts_in_ordering/</guid>
      <description>This example goes over how to find items conflicts in ordering, e.g. antivirus Windows has a conflict with OS linux, https://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item/#conflicts&#xA;import SoftLayer from SoftLayer.managers import ordering from pprint import pprint class ItemsConflicts: def __init__(self): self.client = SoftLayer.create_client_from_env() # slcli order package-list --package_type BARE_METAL_CPU # Will get you available package keynames self.package_keyname = &amp;#34;DUAL_INTEL_XEON_PROCESSOR_SCALABLE_FAMILY_4_DRIVES&amp;#34; self.complex_type = &amp;#39;SoftLayer_Container_Product_Order_Hardware_Server&amp;#39; def order(self, dc): order_svc = self.client[&amp;#39;Product_Order&amp;#39;] order_items = self.item_keynames() extras = { &amp;#34;hardware&amp;#34;: [ {&amp;#34;hostname&amp;#34;: &amp;#34;testOrder1&amp;#34;, &amp;#34;domain&amp;#34;: &amp;#34;test.</description>
    </item>
    <item>
      <title>Migrating a VSI from SAN to Local Storage and vice-versa</title>
      <link>https://sldn.softlayer.com/python/migratevsi/</link>
      <pubDate>Mon, 07 Nov 2016 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/python/migratevsi/</guid>
      <description>You can use the following python example to get a list of all the available priceId&amp;rsquo;s for the Virtual_Guest package. You need to change the second to last line from main.getPackage(126) to main.getPackage(46). The priceId you need will depend on if you are moving to or from Local Storage and the size of the current primary drive.&#xA;import SoftLayer import json # The package for Virtual Guests packageId = 46 # Our exising VSI ID virtualGuests = [ { &amp;#34;id&amp;#34;:25367125 } ] # The price item id for a 25GB Local Primary Drive.</description>
    </item>
    <item>
      <title>Migrating a VSI from SAN to Local Storage and vice-versa</title>
      <link>https://sldn.softlayer.com/ruby/migrateVsi/</link>
      <pubDate>Mon, 07 Nov 2016 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/ruby/migrateVsi/</guid>
      <description>You can use the following ruby example to get a list of all the available priceId&amp;rsquo;s for the Virtual_Guest package. You need to change the second to last line from main.getPackage(126) to main.getPackage(46). The priceId you need will depend on if you are moving to or from Local Storage and the size of the current primary drive.&#xA;require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; softlayer_client = SoftLayer::Client.new(:timeout =&amp;gt; 120) client = softlayer_client.service_named(&amp;#39;Product_Order&amp;#39;) # The package for Virtual Guests packageId = 46 # The price item id for a 25GB Local Primary Drive.</description>
    </item>
    <item>
      <title>Migrating a VSI from SAN to Local Storage and vice-versa</title>
      <link>https://sldn.softlayer.com/rest/migrateVsiDisk/</link>
      <pubDate>Fri, 04 Nov 2016 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/rest/migrateVsiDisk/</guid>
      <description>Operation: POST&#xA;Method: SoftLayer_Product_Order::placeOrder()&#xA;URL: SoftLayer_Product_Order/verifyOrder`&#xA;Getting the proper priceId You can use the following python example to get a list of all the available priceId&amp;rsquo;s for the Virtual_Guest package. You need to change the second to last line from main.getPackage(126) to main.getPackage(46). The priceId you need will depend on if you are moving to or from Local Storage and the size of the current primary drive.&#xA;Example CURL:&#xA;curl --user &amp;#34;$SOFTLAYER_USERNAME:$SOFTLAYER_API_KEY&amp;#34; -X POST --data @migrate.</description>
    </item>
    <item>
      <title>Order a Local Load Balancer</title>
      <link>https://sldn.softlayer.com/ruby/orderLB/</link>
      <pubDate>Wed, 18 May 2016 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/ruby/orderLB/</guid>
      <description>require &amp;#39;rubygems&amp;#39; require &amp;#39;softlayer_api&amp;#39; location = &amp;#39;DALLAS06&amp;#39; # The id of the SoftLayer_Product_Package you wish to order. # In this case it is a Local Load Balancer. packageId = 194 # Build a skeleton SoftLayer_Product_Item_Price objects. These objects contain # much more than ids, but SoftLayer&amp;#39;s ordering system only needs the price&amp;#39;s id # to know what you want to order. # Every item in SoftLayer&amp;#39;s product catalog is assigned an id.</description>
    </item>
    <item>
      <title>Order a Local Load Balancer</title>
      <link>https://sldn.softlayer.com/rest/orderLB/</link>
      <pubDate>Thu, 05 May 2016 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/rest/orderLB/</guid>
      <description>Operation: POST&#xA;Method: SoftLayer_Product_Order::verifyOrder() Method: SoftLayer_Product_Order::placeOrder()&#xA;URL: SoftLayer_Product_Order/verifyOrder URL: SoftLayer_Product_Order/placeOrder&#xA;In the following example I am ordering a Local Load Balancer 500 VIP connections (PriceId: 2078) in the Dallas 06 Datacenter (locationId: 154820).&#xA;Example CURL using verifyOrder:&#xA;curl --user &amp;#34;$SOFTLAYER_USERNAME:$SOFTLAYER_API_KEY&amp;#34; -k -X POST -d &amp;#39;{&amp;#34;parameters&amp;#34;:[{&amp;#34;packageId&amp;#34;:194,&amp;#34;location&amp;#34;:154820,&amp;#34;quantity&amp;#34;:1,&amp;#34;prices&amp;#34;:[{&amp;#34;id&amp;#34;:2078}]}]}&amp;#39; &amp;#34;https://api.softlayer.com/rest/v3/SoftLayer_Product_Order/verifyOrder&amp;#34; Example CURL using placeOrder:&#xA;curl --user &amp;#34;$SOFTLAYER_USERNAME:$SOFTLAYER_API_KEY&amp;#34; -k -X POST -d &amp;#39;{&amp;#34;parameters&amp;#34;:[{&amp;#34;packageId&amp;#34;:194,&amp;#34;location&amp;#34;:154820,&amp;#34;quantity&amp;#34;:1,&amp;#34;prices&amp;#34;:[{&amp;#34;id&amp;#34;:2078}]}]}&amp;#39; &amp;#34;https://api.softlayer.com/rest/v3/SoftLayer_Product_Order/placeOrder&amp;#34; </description>
    </item>
    <item>
      <title>Order a Local Load Balancer</title>
      <link>https://sldn.softlayer.com/python/createLBpython/</link>
      <pubDate>Fri, 29 Apr 2016 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/python/createLBpython/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Order a load balancer Important manual pages: http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Product_Order http://sldn.softlayer.com/reference/datatypes/SoftLayer_Product_Item_Price http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/verifyOrder http://sldn.softlayer.com/reference/services/SoftLayer_Product_Order/placeOrder License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#34;&amp;#34;&amp;#34; import SoftLayer import json # The package to order load balancers. packageId = 194 # Build a skeleton SoftLayer_Product_Item_Price objects. These objects contain # much more than ids, but SoftLayer&amp;#39;s ordering system only needs the price&amp;#39;s id # to know what you want to order. # Since Load Balancers can have Location Specific itemPriceId&amp;#39;s I am using the following script to # return just the standard (location agnostic) itemPriceId&amp;#39;s.</description>
    </item>
    <item>
      <title>Upgrade Hardware and Virtual Servers</title>
      <link>https://sldn.softlayer.com/python/upgrade_examples/</link>
      <pubDate>Tue, 22 Mar 2016 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/python/upgrade_examples/</guid>
      <description>import SoftLayer from pprint import pprint as pp class example(): def __init__(self): self.client = SoftLayer.Client() &amp;#34;&amp;#34;&amp;#34; Prints out what can be upgraded on a server by category. &amp;#34;&amp;#34;&amp;#34; def getUpgradeItemPrices(self, hardware_id, service=&amp;#39;SoftLayer_Hardware_Server&amp;#39;): result = self.client[service].getUpgradeItemPrices(id=hardware_id) last_id = 0 for item in result: now_id = item[&amp;#39;categories&amp;#39;][0][&amp;#39;id&amp;#39;] if now_id != last_id: print(&amp;#34;%s (%s)&amp;#34; % (item[&amp;#39;categories&amp;#39;][0][&amp;#39;name&amp;#39;], item[&amp;#39;categories&amp;#39;][0][&amp;#39;id&amp;#39;])) last_id = now_id print(&amp;#34;\t %s (%s)&amp;#34; % (item[&amp;#39;item&amp;#39;][&amp;#39;description&amp;#39;], item[&amp;#39;id&amp;#39;])) &amp;#34;&amp;#34;&amp;#34; Get the available maintenance windows that exist for a server.</description>
    </item>
  </channel>
</rss>
