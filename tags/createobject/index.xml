<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>createobject on SoftLayer API</title>
    <link>https://sldn.softlayer.com/tags/createobject/</link>
    <description>Recent content in createobject on SoftLayer API</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 14 Apr 2022 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://sldn.softlayer.com/tags/createobject/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Working with Virtual Guests</title>
      <link>https://sldn.softlayer.com/go/workingWithVirtualGuests/</link>
      <pubDate>Thu, 14 Apr 2022 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/go/workingWithVirtualGuests/</guid>
      <description>Read up on the Golang Example Framework for information on how to setup the CLI Framework to get this code to run easily.&#xA;Creating a Virtual Guest These scripts make a paginated API call to SoftLayer_Virtual_Guest::createObject() and print the id and the hostname of the new instance.&#xA;The first script calls the method from the main function&#xA;package main import ( &amp;#34;fmt&amp;#34; &amp;#34;log&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/datatypes&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/services&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/session&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/sl&amp;#34; ) // A virtual guest template // // (use convenience functions to get pointers from literals, as needed) var vGuestTemplate = datatypes.</description>
    </item>
    <item>
      <title>Create a new Bandwidth Pool</title>
      <link>https://sldn.softlayer.com/ruby/createBwPool/</link>
      <pubDate>Mon, 15 Aug 2016 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/ruby/createBwPool/</guid>
      <description>require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Credentials to the API are read from a configuration file by default. # See https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L44 client = SoftLayer::Client.new(:timeout =&amp;gt; 120) object_id = nil orderTemplate = { &amp;#39;accountId&amp;#39; =&amp;gt; xxxxx, &amp;#39;bandwidthAllotmentTypeId&amp;#39; =&amp;gt; 2, &amp;#39;locationGroupId&amp;#39; =&amp;gt; 1, &amp;#39;name&amp;#39; =&amp;gt; &amp;#39;newRubyBwPool&amp;#39; } orderPool = client[&amp;#39;SoftLayer_Network_Bandwidth_Version1_Allotment&amp;#39;] item = orderPool.object_with_id(object_id).createObject(orderTemplate) pp item </description>
    </item>
    <item>
      <title>Create a new Bandwidth Pool</title>
      <link>https://sldn.softlayer.com/rest/createBWpool/</link>
      <pubDate>Mon, 02 May 2016 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/rest/createBWpool/</guid>
      <description>Operation: POST&#xA;Method: SoftLayer_Network_Bandwidth_Version1_Allotment::createObject()&#xA;URL: SoftLayer_Network_Bandwidth_Version1_Allotment/createObject&#xA;Example Payload:&#xA;{ &amp;#34;parameters&amp;#34;: [{ &amp;#34;accountId&amp;#34;: 111111, &amp;#34;bandwidthAllotmentTypeId&amp;#34;: 2, &amp;#34;locationGroupId&amp;#34;: 1, &amp;#34;name&amp;#34;: &amp;#34;My_new_Bancwidth_Pool&amp;#34;, &amp;#34;serviceProviderId&amp;#34;: 1 }] } Example CURL:&#xA;curl -H &amp;#34;Content-Type: application/json&amp;#34; --data @createpool.json &amp;#34;https://$SOFTLAYER_USERNAME:$SOFTLAYER_API_KEY@api.softlayer.com/rest/v3/SoftLayer_Network_Bandwidth_Version1_Allotment/createObject&amp;#34; </description>
    </item>
  </channel>
</rss>
