<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>brands on SoftLayer API</title>
    <link>https://sldn.softlayer.com/tags/brands/</link>
    <description>Recent content in brands on SoftLayer API</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 03 Jul 2020 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://sldn.softlayer.com/tags/brands/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Working with Tickets</title>
      <link>https://sldn.softlayer.com/python/ticket.py/</link>
      <pubDate>Fri, 03 Jul 2020 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/python/ticket.py/</guid>
      <description>Getting ticket Subjects Standard support tickets&amp;rsquo; titles must be selected from a pre-determined list of ticket subjects, defined in the SoftLayer_Ticket_Subject service. The following example will output all of the Ticket Subjects:&#xA;import SoftLayer client = SoftLayer.Client() def getSubjects(self): mask = &amp;#34;mask[group]&amp;#34; subjects = client.call(&amp;#39;SoftLayer_Ticket_Subject&amp;#39;, &amp;#39;getAllObjects&amp;#39;, mask=mask) print(&amp;#34;|Subject Id | Subject Name | Group Name |&amp;#34;) print(&amp;#34;| --- | --- | --- |&amp;#34;) for subject in subjects: print(&amp;#34;|%s| %s| %s|&amp;#34; % (subject[&amp;#39;id&amp;#39;], subject[&amp;#39;name&amp;#39;], subject[&amp;#39;group&amp;#39;][&amp;#39;name&amp;#39;])) Subjects Subject Id Subject Name Group Name 1522 API Question Support 1001 Accounting Request Accounting 1181 CDN Question SysAdmin 1261 Colocation Service Request Hardware 1041 DNS Request Support 1201 DOS/Abuse Issue Support 1121 Hardware Firewall Question Support 1021 Hardware Issue Support 1122 Hardware Load Balancer Question Support 1081 Licensing Question Support 1141 Mail Server Issue Support 1004 OS Reload Question Support 1005 Portal Information Question Support 1061 Private Network Question Support 1022 Public Network Question Support 1003 Reboots and Console Access Support 1002 Sales Request Sales 1603 Sales Request - Compute &amp;amp; Infrastructure Sales 1645 Sales Request - Firewall Service Sales 1647 Sales Request - General Question Sales 1605 Sales Request - Network &amp;amp; Security Services Sales 1643 Sales Request - Other Services Sales 1607 Sales Request - Upgrades &amp;amp; Add-ons Sales 1101 Security Issue Support 1161 Storage Question Support 1221 Transcoding Question Support 1723 VMware Solutions VMware Solutions 1482 Vyatta Question SysAdmin Create Standard Ticket Create a standard support ticket.</description>
    </item>
    <item>
      <title>cutomerIssueBAMbrand.rb</title>
      <link>https://sldn.softlayer.com/ruby/cutomerIssueBAMbrand.rb/</link>
      <pubDate>Wed, 25 Apr 2018 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/ruby/cutomerIssueBAMbrand.rb/</guid>
      <description>require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; puts &amp;#34;INFO: connecting....&amp;#34; account_service = SoftLayer::Service.new(&amp;#34;SoftLayer_Account&amp;#34;, :username =&amp;gt; &amp;#34;&amp;#34;, :api_key =&amp;gt; &amp;#34;apikey_goes_here&amp;#34;) brand_service = SoftLayer::Service.new(&amp;#34;SoftLayer_Brand&amp;#34;, :username =&amp;gt; &amp;#34;&amp;#34;, :api_key =&amp;gt; &amp;#34;apikey_goes_here&amp;#34;) brands = account_service.getOwnedBrands() puts &amp;#34;INFO: printing brands....&amp;#34; pp (brands) puts &amp;#34;INFO: printing customers for the brands....&amp;#34; for brand in brands accounts = brand_service.object_with_id(brand[&amp;#39;id&amp;#39;]).getAllOwnedAccounts() pp (accounts) end </description>
    </item>
    <item>
      <title>create_account_and_api_key.rb</title>
      <link>https://sldn.softlayer.com/ruby/create_account_and_api_key.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/ruby/create_account_and_api_key.rb/</guid>
      <description># Creates new account and create API key for that account # # The script creates a new account using the createCustomerAccount() method, # then the script will create the API key for that account, in order to achieve # that goal it is necessary to make soap request because in oder to create # the API key we need to call the method addApiAuthenticationKey() using the # the credentials of the new account as we do not have that information we are # calling the method using impersonation.</description>
    </item>
    <item>
      <title>create_customer.go</title>
      <link>https://sldn.softlayer.com/go/create_customer.go/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/go/create_customer.go/</guid>
      <description>/* Create a customer. Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Brand/createCustomerAccount http://sldn.softlayer.com/reference/datatypes/SoftLayer_Account License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ package main import ( &amp;#34;fmt&amp;#34; &amp;#34;encoding/json&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/sl&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/datatypes&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/session&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/services&amp;#34; ) func main() { // SoftLayer API username and key username := &amp;#34;set me&amp;#34; apikey := &amp;#34;set me&amp;#34; //Bypass validation for duplicate account byPassDuplicateAccountCheck := sl.Bool(false) // Build the skeleton of SoftLayer_Account object with the account&amp;#39;s information templateObject := datatypes.Account{ CompanyName : sl.String(&amp;#34;My company&amp;#34;), Email : sl.</description>
    </item>
    <item>
      <title>create_customer.py</title>
      <link>https://sldn.softlayer.com/python/create_customer.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/python/create_customer.py/</guid>
      <description>&amp;#39;&amp;#39;&amp;#39; Create a customer. Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Brand/createCustomerAccount http://sldn.softlayer.com/reference/datatypes/SoftLayer_Account License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#39;&amp;#39;&amp;#39; import SoftLayer.API import json USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; template = { &amp;#39;address1&amp;#39;: &amp;#39;8200 Warden Ave&amp;#39;, &amp;#39;city&amp;#39;: &amp;#39;Markham&amp;#39;, &amp;#39;companyName&amp;#39;: &amp;#39;My company&amp;#39;, &amp;#39;email&amp;#39;: &amp;#39;email@softlayer.com&amp;#39;, &amp;#39;firstName&amp;#39;: &amp;#39;FirstName&amp;#39;, &amp;#39;lastName&amp;#39;: &amp;#39;Surename&amp;#39;, &amp;#39;officePhone&amp;#39;: &amp;#39;number&amp;#39;, &amp;#39;postalCode&amp;#39;: &amp;#39;L6G 1C7&amp;#39;, &amp;#39;state&amp;#39;: &amp;#39;TX&amp;#39;, &amp;#39;brandId&amp;#39;: 4, &amp;#39;country&amp;#39;: &amp;#39;CA&amp;#39; } client = SoftLayer.create_client_from_env(username=USERNAME, api_key=API_KEY) brandService = client[&amp;#39;SoftLayer_Brand&amp;#39;] try: result = brandService.createCustomerAccount(template) print(json.</description>
    </item>
    <item>
      <title>get_accounts_brands.py</title>
      <link>https://sldn.softlayer.com/python/get_accounts_brands.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/python/get_accounts_brands.py/</guid>
      <description>&amp;#39;&amp;#39;&amp;#39; Get owned account The script retrieves all the owned accounts for an arbitrary brand, the script makes a call to getOwnedBrands() method to retrieve the brands where the account belongs, then it calls the getAllOwnedAccounts() method to get the owned accounts for every brand. Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Account http://sldn.softlayer.com/reference/services/SoftLayer_Account/getOwnedBrands http://sldn.softlayer.com/reference/services/SoftLayer_Account/getAllOwnedAccounts http://sldn.softlayer.com/reference/services/SoftLayer_Brand http://sldn.softlayer.com/reference/datatypes/SoftLayer_Brand License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; &amp;#39;&amp;#39;&amp;#39; import SoftLayer.API USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer.</description>
    </item>
    <item>
      <title>get_accounts_brands.rb</title>
      <link>https://sldn.softlayer.com/ruby/get_accounts_brands.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/ruby/get_accounts_brands.rb/</guid>
      <description># Get owned account # # The script retrieves all the owned accounts for an arbitrary brand, # the script makes a call to getOwnedBrands() method to retrieve # the brands where the account belongs, then it calls the getAllOwnedAccounts() # method to get the owned accounts for every brand. # # Important manual pages # http://sldn.softlayer.com/reference/services/SoftLayer_Account # http://sldn.softlayer.com/reference/services/SoftLayer_Account/getOwnedBrands # http://sldn.softlayer.com/reference/services/SoftLayer_Account/getAllOwnedAccounts # http://sldn.softlayer.com/reference/services/SoftLayer_Brand # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Brand # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc.</description>
    </item>
    <item>
      <title>List Planned Events</title>
      <link>https://sldn.softlayer.com/python/list_planned_events.py/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/python/list_planned_events.py/</guid>
      <description>&amp;#39;&amp;#39;&amp;#39; List planned events. The script retrieves all the planned events &amp;#39;&amp;#39;&amp;#39; import SoftLayer.API from pprint import pprint as pp import datetime # Gets the current date. now = datetime.datetime.now() now = now.strftime(&amp;#34;%m/%d/%Y&amp;#34;) client = SoftLayer.create_client_from_env() eventService = client[&amp;#39;SoftLayer_Notification_Occurrence_Event&amp;#39;] objectMask = &amp;#34;mask[updateCount, statusCode, notificationOccurrenceEventType[keyName], impactedUsers[user[id], acknowledgedFlag]]&amp;#34; objectFilterEndDate = { &amp;#34;endDate&amp;#34;: { &amp;#34;operation&amp;#34;: &amp;#34;greaterThanDate&amp;#34;, &amp;#34;options&amp;#34;: [{&amp;#34;name&amp;#34;: &amp;#34;date&amp;#34;, &amp;#34;value&amp;#34;: [now]}]}, &amp;#34;notificationOccurrenceEventType&amp;#34;: {&amp;#34;keyName&amp;#34;: {&amp;#34;operation&amp;#34;: &amp;#34;PLANNED&amp;#34;}}, &amp;#34;statusCode&amp;#34;: { &amp;#34;keyName&amp;#34;: { &amp;#34;operation&amp;#34;: &amp;#34;in&amp;#34;, &amp;#34;options&amp;#34;: [ {&amp;#34;name&amp;#34;: &amp;#34;data&amp;#34;, &amp;#34;value&amp;#34;: [&amp;#34;ACTIVE&amp;#34;, &amp;#34;COMPLETED&amp;#34;, &amp;#34;PUBLISHED&amp;#34;]} ] } } } objectFilterNoEndDate = { &amp;#34;endDate&amp;#34;: {&amp;#34;operation&amp;#34;: &amp;#39;is null&amp;#39;}, &amp;#34;notificationOccurrenceEventType&amp;#34;: {&amp;#34;keyName&amp;#34;: {&amp;#34;operation&amp;#34;: &amp;#34;PLANNED&amp;#34;}}, &amp;#34;statusCode&amp;#34;: { &amp;#34;keyName&amp;#34;: { &amp;#34;operation&amp;#34;: &amp;#34;in&amp;#34;, &amp;#34;options&amp;#34;: [ {&amp;#34;name&amp;#34;: &amp;#34;data&amp;#34;, &amp;#34;value&amp;#34;: [&amp;#34;ACTIVE&amp;#34;, &amp;#34;COMPLETED&amp;#34;, &amp;#34;PUBLISHED&amp;#34;]} ] } } } try: resultEndDate = eventService.</description>
    </item>
    <item>
      <title>list_agents.go</title>
      <link>https://sldn.softlayer.com/go/list_agents.go/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/go/list_agents.go/</guid>
      <description>/* List agents. The script retrieves all the agents in a brand account. Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Account/getUsers http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ package main import ( &amp;#34;fmt&amp;#34; &amp;#34;encoding/json&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/session&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/services&amp;#34; ) func main() { // SoftLayer API username and key username := &amp;#34;set me&amp;#34; apikey := &amp;#34;set me&amp;#34; // The id of Brand you wish to retrieve his agents brandId := 2 // Create SoftLayer API session sess := session.</description>
    </item>
    <item>
      <title>list_agents.rb</title>
      <link>https://sldn.softlayer.com/ruby/list_agents.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/ruby/list_agents.rb/</guid>
      <description># List agents. # # The script retrieves all the agents in a brand account. # It displays the same result like in https://agent.softlayer.com/administration/user/list # # Important manual pages # http://sldn.softlayer.com/reference/services/SoftLayer_Account/getUsers # http://sldn.softlayer.com/reference/services/SoftLayer_User_Customer # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; # Declaring the API client client = SoftLayer::Client.new(username: USERNAME, api_key: API_KEY) account_service = client[&amp;#39;SoftLayer_Account&amp;#39;] object_mask = &amp;#39;mask[id, firstName, lastName, username, email, userStatus[name]]&amp;#39; begin result = account_service.</description>
    </item>
    <item>
      <title>list_customers.go</title>
      <link>https://sldn.softlayer.com/go/list_customers.go/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/go/list_customers.go/</guid>
      <description>/* List customers. The script retrieves all the customers in a brand account. Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Brand/getOwnedAccounts http://sldn.softlayer.com/reference/datatypes/SoftLayer_Account http://sldn.softlayer.com/article/Object-Masks License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ package main import ( &amp;#34;fmt&amp;#34; &amp;#34;encoding/json&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/session&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/services&amp;#34; ) func main() { // SoftLayer API username and key username := &amp;#34;set me&amp;#34; apikey := &amp;#34;set me&amp;#34; // The id of Brand you wish to retrieve his accounts brandId := 2 // Create SoftLayer API session sess := session.</description>
    </item>
    <item>
      <title>list_invoices.rb</title>
      <link>https://sldn.softlayer.com/ruby/list_invoices.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/ruby/list_invoices.rb/</guid>
      <description># List invoices. # # The script retrieves all the invoices in a brand account. # It displays the same result like in https://agent.softlayer.com/administration/invoice/list # # Important manual pages # http://sldn.softlayer.com/reference/services/SoftLayer_Account/getInvoices # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Billing_Invoice # http://sldn.softlayer.com/article/Object-Masks # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer::Client.new(username: USERNAME, api_key: API_KEY) account_service = client[&amp;#39;SoftLayer_Account&amp;#39;] object_mask = &amp;#39;mask[id, modifyDate, createDate, amount, payment, typeCode, statusCode, purchaseOrderNumber]&amp;#39; begin result = account_service.</description>
    </item>
    <item>
      <title>list_permission_roles.go</title>
      <link>https://sldn.softlayer.com/go/list_permission_roles.go/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/go/list_permission_roles.go/</guid>
      <description>/* List roles. The script retrieves all the roles in a brand account. Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Account/getPermissionRoles http://sldn.softlayer.com/reference/datatypes/SoftLayer_User_Permission_Role License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ package main import ( &amp;#34;fmt&amp;#34; &amp;#34;encoding/json&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/session&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/services&amp;#34; ) func main() { // SoftLayer API username and key username := &amp;#34;set me&amp;#34; apikey := &amp;#34;set me&amp;#34; // Create SoftLayer API session sess := session.New(username, apikey) // Get SoftLayer_Account service service := services.GetAccountService(sess) // Retrieve permission roles permissions, err := service.</description>
    </item>
    <item>
      <title>list_roles.rb</title>
      <link>https://sldn.softlayer.com/ruby/list_roles.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/ruby/list_roles.rb/</guid>
      <description># List roles. # # The script retrieves all the roles in a brand account. # It displays the same result like in https://agent.softlayer.com/administration/role/list # # Important manual pages # http://sldn.softlayer.com/reference/services/SoftLayer_Account/getPermissionRoles # http://sldn.softlayer.com/reference/datatypes/SoftLayer_User_Permission_Role # http://sldn.softlayer.com/article/Object-Masks # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; require &amp;#39;softlayer_api&amp;#39; # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; client = SoftLayer::Client.new(username: USERNAME, api_key: API_KEY) account_service = client[&amp;#39;SoftLayer_Account&amp;#39;] object_mask = &amp;#39;mask[userCount]&amp;#39; begin result = account_service.</description>
    </item>
    <item>
      <title>list_tickets.go</title>
      <link>https://sldn.softlayer.com/go/list_tickets.go/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/go/list_tickets.go/</guid>
      <description>/* List tickets. The script retrieves all the tickets in a brand account. It displays the same result like in https://agent.softlayer.com/support/ticket/list Important manual pages http://sldn.softlayer.com/reference/services/SoftLayer_Notification_Occurrence_Event/getAllObjects http://sldn.softlayer.com/reference/datatypes/SoftLayer_Notification_Occurrence_Event http://sldn.softlayer.com/article/Object-Filters http://sldn.softlayer.com/article/Object-Masks License: http://sldn.softlayer.com/article/License Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; */ package main import ( &amp;#34;fmt&amp;#34; &amp;#34;encoding/json&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/filter&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/session&amp;#34; &amp;#34;github.com/softlayer/softlayer-go/services&amp;#34; ) func main() { // SoftLayer API username and key username := &amp;#34;set me&amp;#34; apikey := &amp;#34;set me&amp;#34; // The id of Brand you wish to retrieve his agents brandId := 2 // Create SoftLayer API session sess := session.</description>
    </item>
    <item>
      <title>list_tickets.rb</title>
      <link>https://sldn.softlayer.com/ruby/list_tickets.rb/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/ruby/list_tickets.rb/</guid>
      <description># # List tickets. # # The script retrieves all the tickets in a brand account. # It displays the same result like in https://agent.softlayer.com/support/ticket/list # # Important manual pages # http://sldn.softlayer.com/reference/services/SoftLayer_Notification_Occurrence_Event/getAllObjects # http://sldn.softlayer.com/reference/datatypes/SoftLayer_Notification_Occurrence_Event # http://sldn.softlayer.com/article/Object-Filters # http://sldn.softlayer.com/article/Object-Masks # # License: http://sldn.softlayer.com/article/License # Author: SoftLayer Technologies, Inc. &amp;lt;sldn@softlayer.com&amp;gt; # require &amp;#39;softlayer_api&amp;#39; # Your SoftLayer API username and key. USERNAME = &amp;#39;set me&amp;#39; API_KEY = &amp;#39;set me&amp;#39; brandId = 4 client = SoftLayer::Client.</description>
    </item>
  </channel>
</rss>
