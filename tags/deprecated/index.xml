<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>deprecated on SoftLayer API</title>
    <link>https://sldn.softlayer.com/tags/deprecated/</link>
    <description>Recent content in deprecated on SoftLayer API</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 13 Sep 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://sldn.softlayer.com/tags/deprecated/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Object Storage Uploader</title>
      <link>https://sldn.softlayer.com/python/swiftUploader/</link>
      <pubDate>Wed, 13 Sep 2017 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/python/swiftUploader/</guid>
      <description>Overview Weâ€™ve recently added the option to import customer-supplied Virtual Hard Disks (VHDs) to our object storage offering. This is a great option for our customers who may have special virtual machines that they have spent hours perfecting. Since learning to import these images can pose a slight challenge, especially for those unfamiliar with object storage (OpenStack Swift), I wrote this blog to share scripts that will streamline the process.</description>
    </item>
    <item>
      <title>Reload Server Examples</title>
      <link>https://sldn.softlayer.com/python/reload_hardware/</link>
      <pubDate>Thu, 28 Jan 2016 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/python/reload_hardware/</guid>
      <description>This article covers a few ways to reload bare metal servers. This article is marked depreciated because of its use of Flex Image Templates, the other ways to reload operating systems are still valid.&#xA;List Flex Image Templates Flex Images are depreciated as of 8/7/2017. SoftLayer Product Lifecycle&#xA;Reloading a hardware server from an image template allows users to restore or reconfigure the server based off a pre-existing Flex Image Template that is associated with the account in use.</description>
    </item>
    <item>
      <title>Create a virtual server from an existing image template</title>
      <link>https://sldn.softlayer.com/ruby/create_server_from_template/</link>
      <pubDate>Wed, 07 Oct 2015 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/ruby/create_server_from_template/</guid>
      <description>require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; IMAGE_ID = &amp;#39;foobar&amp;#39; # change me. Image template global ID. # Credentials to the API are read from a configuration file by default. # See https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L44 SoftLayer::Client.default_client = SoftLayer::Client.new order_template = { hostname: &amp;#39;test&amp;#39;, domain: &amp;#39;example.com&amp;#39;, datacenter: &amp;#39;hou02&amp;#39;, cores: 2, # 2 x 2.0 GHz Cores memory: 4, # 4GB RAM private_network_only: false, dedicated_host_only: false, #os_reference_code: &amp;#39;CENTOS_6_64&amp;#39;, # CentOS 6.latest minimal (64 bit) image_template: SoftLayer::ImageTemplate.template_with_global_id(IMAGE_ID), use_local_disk: false, # Use a SAN disk hourly: true # Charge me for hourly use, rather than monthly.</description>
    </item>
    <item>
      <title>Ordering with placeOrder</title>
      <link>https://sldn.softlayer.com/rest/place_order/</link>
      <pubDate>Wed, 30 Sep 2015 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/rest/place_order/</guid>
      <description>Operation: POST&#xA;Method: SoftLayer_Product_Order::placeOrder()&#xA;URL: SoftLayer_Product_Order/verifyOrder`&#xA;Example CURL:&#xA;curl -u userid:api_key -X POST --data @create.json https://api.softlayer.com/rest/v3/SoftLayer_Product_Order/verifyOrder Input JSON:&#xA;{ &amp;#34;parameters&amp;#34; : [ { &amp;#34;packageId&amp;#34; : 126, &amp;#34;location&amp;#34; :449494, &amp;#34;quantity&amp;#34; : 1, &amp;#34;hardware&amp;#34;: [{ &amp;#34;hostname&amp;#34;: &amp;#34;TEST&amp;#34;, &amp;#34;domain&amp;#34;: &amp;#34;test1&amp;#34; }], &amp;#34;prices&amp;#34;: [ {&amp;#34;id&amp;#34;: 13739}, {&amp;#34;id&amp;#34;: 13748}, {&amp;#34;id&amp;#34;: 1267}, {&amp;#34;id&amp;#34;: 342}, {&amp;#34;id&amp;#34;: 21141}, {&amp;#34;id&amp;#34;: 58}, {&amp;#34;id&amp;#34;: 876}, {&amp;#34;id&amp;#34;: 57}, {&amp;#34;id&amp;#34;: 55}, {&amp;#34;id&amp;#34;: 21}, {&amp;#34;id&amp;#34;: 906}, {&amp;#34;id&amp;#34;: 420}, {&amp;#34;id&amp;#34;: 418}, {&amp;#34;id&amp;#34;: 37620} ] } ] } The Price Ids Explained Use getItemPrices to find the IDs and Items you need</description>
    </item>
    <item>
      <title>Order a vyatta server with placeOrder</title>
      <link>https://sldn.softlayer.com/php/order_vyatta/</link>
      <pubDate>Wed, 08 Jul 2015 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/php/order_vyatta/</guid>
      <description>&amp;lt;?php require_once &amp;#39;./vendor/autoload.php&amp;#39;; $apiUsername = getenv(&amp;#39;SOFTLAYER_USERNAME&amp;#39;); $apiKey = getenv(&amp;#39;SOFTLAYER_API_KEY&amp;#39;); $client = \SoftLayer\SoapClient::getClient(&amp;#39;SoftLayer_Product_Order&amp;#39;, null, $apiUser, $key); $template = new stdClass(); $template_extra = new stdClass(); $template-&amp;gt;packageId = 174; $template-&amp;gt;location = 224092; $template-&amp;gt;quantity = 1; $template_extra-&amp;gt;os = 21; //vyatta $template_extra-&amp;gt;hostname = &amp;#39;foo-vga-small&amp;#39;; $template_extra-&amp;gt;domain = &amp;#39;softlayer-singapore-test.com&amp;#39;; //These might be invalid now, please double check on ordering $template_extra-&amp;gt;price_id = array(13739, // Single Quad Xeon 1270 3.4G 8M 21010, // 4G 878, // Raid //31693, // Raid 1 1267, // 500G 274, // 1GbE 342, // 20T // 21, // 1IP 56, // Ping/TCP Mon 57, // Notification ); $my_template = new stdClass(); for ($cnt = 0; $cnt &amp;lt; $template-&amp;gt;quantity; $cnt++) { $domain = new stdClass(); $domain-&amp;gt;hostname = &amp;#34;$template_extra-&amp;gt;hostname-$cnt&amp;#34;; $domain-&amp;gt;domain = $template_extra-&amp;gt;domain; $template-&amp;gt;hardware[] = $domain; } if (empty($template-&amp;gt;imageTemplateGlobalIdentifier)) { $template_extra-&amp;gt;price_id[] = $template_extra-&amp;gt;os; } foreach ($template_extra-&amp;gt;price_id as $id) { $price = new stdClass(); $price-&amp;gt;id = $id; $template-&amp;gt;prices[] = $price; } $my_template-&amp;gt;orderContainers = array(); $my_template-&amp;gt;orderContainers[0]-&amp;gt;prices = $template-&amp;gt;prices; $my_template-&amp;gt;orderContainers[0]-&amp;gt;hardware = $template-&amp;gt;hardware; $my_template-&amp;gt;orderContainers[0]-&amp;gt;quantity = $template-&amp;gt;quantity; $my_template-&amp;gt;orderContainers[0]-&amp;gt;location = $template-&amp;gt;location; $my_template-&amp;gt;orderContainers[0]-&amp;gt;packageId = $template-&amp;gt;packageId; print_r($my_template); $result = $client-&amp;gt;verifyOrder($my_template); print_r($result); </description>
    </item>
    <item>
      <title>Cancel software licenses by IP</title>
      <link>https://sldn.softlayer.com/perl/cancel_by_license/</link>
      <pubDate>Sun, 01 Sep 2013 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/perl/cancel_by_license/</guid>
      <description>#!/usr/bin perl use warnings; use strict; use Data::Dumper; use SoftLayer::API::SOAP; my $api_username = &amp;#39;&amp;#39;; my $api_key = &amp;#39;&amp;#39;; my $cPanelIp = &amp;#39;127.0.0.1&amp;#39;; my $billingItemId; my $accountId; my $accountClient = SoftLayer::API::SOAP-&amp;gt;new(&amp;#39;SoftLayer_Account&amp;#39;, undef, $api_username, $api_key); my $billingClient = SoftLayer::API::SOAP-&amp;gt;new(&amp;#39;SoftLayer_Billing_Item_Cancellation_Request&amp;#39;, undef, $api_username, $api_key); my $objectMask = &amp;#34;mask.billingItem.id&amp;#34;; $accountClient-&amp;gt;setObjectMask($objectMask); my $licenses = $accountClient-&amp;gt;getActiveVirtualLicenses()-&amp;gt;result; for my $i (0 .. $#{$licenses}) { my $license = $licenses-&amp;gt;[$i]; if ($cPanelIp eq $license-&amp;gt;{&amp;#39;ipAddress&amp;#39;}) { $billingItemId = $license-&amp;gt;{&amp;#39;billingItem&amp;#39;}-&amp;gt;{&amp;#39;id&amp;#39;}; $accountId = $license-&amp;gt;{&amp;#39;accountId&amp;#39;}; } } my $cancellationRequestTemplateObject = { &amp;#39;items&amp;#39; =&amp;gt; [ { &amp;#39;billingItemId&amp;#39; =&amp;gt; $billingItemId, } ], &amp;#39;accountId&amp;#39; =&amp;gt; $accountId }; my $result = $billingClient-&amp;gt;createObject($cancellationRequestTemplateObject); print Dumper($result); </description>
    </item>
    <item>
      <title>Legacy Object Masks</title>
      <link>https://sldn.softlayer.com/article/legacy-object-masks/</link>
      <pubDate>Mon, 20 Jun 2011 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/article/legacy-object-masks/</guid>
      <description>Table of contents&amp;nbsp; Structure Creating an Object Mask Referenced API Components Services Data Types Internal Links Most of the data types modeled in the SoftLayer API contain relational properties that tie one data type to another. For instance, a SoftLayer_Account has links to its domains, support tickets, hardware, users, and much more. By default, calling the [[SoftLayer_Account]] service&#39;s getObject method won&#39;t retrieve relational and count properties. In order to retrieve this information, you would have to call getUsers, getTickets, and other methods.</description>
    </item>
  </channel>
</rss>
