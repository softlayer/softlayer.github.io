<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>invoice on SoftLayer API</title>
    <link>https://sldn.softlayer.com/tags/invoice/</link>
    <description>Recent content in invoice on SoftLayer API</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 22 Aug 2019 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://sldn.softlayer.com/tags/invoice/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Billing and Invoices</title>
      <link>https://sldn.softlayer.com/article/billing/</link>
      <pubDate>Thu, 22 Aug 2019 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/article/billing/</guid>
      <description>Getting Invoices Everything that will be charged to your total balance will appear on an invoice, of which there are three main type.&#xA;To get the total balance on your account, simply use SoftLayer_Account::getBalance.&#xA;curl -u $SL_USER:$SL_APIKEY &amp;#39;https://api.softlayer.com/rest/v3.1/SoftLayer_Account/getBalance.json&amp;#39; NEW Anything that is newly ordered will appear as a NEW type invoice. After the billing cycle ends, these will roll into the RECURRING type of invoice.&#xA;RECURRING Usually each month you will have one recurring invoice, containing everything that was billed to the account, outside of any charges that appear on NEW and ONE-TIME-CHARGE invoices.</description>
    </item>
    <item>
      <title>Gets pending invoice with hardware tags</title>
      <link>https://sldn.softlayer.com/python/pending_invoice_hw_tags.py/</link>
      <pubDate>Fri, 14 Jun 2019 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/python/pending_invoice_hw_tags.py/</guid>
      <description>import SoftLayer import json class PendingInvoice: def __init__(self): self.client = SoftLayer.create_client_from_env() def gather_hardware_tags(self, tags=None): &amp;#34;&amp;#34;&amp;#34;Retrieves hardware with tags references&amp;#34;&amp;#34;&amp;#34; object_mask = &amp;#34;mask[id,hostname,tagReferences[id,tag]]&amp;#34; if tags is None: return self.client[&amp;#39;SoftLayer_Account&amp;#39;].getHardware(mask=object_mask) object_filter = { &amp;#39;hardware&amp;#39;: { &amp;#39;tagReferences&amp;#39;: { &amp;#39;tag&amp;#39;: { &amp;#39;name&amp;#39;: { &amp;#39;operation&amp;#39;: &amp;#39;in&amp;#39;, &amp;#39;options&amp;#39;: [{ &amp;#39;name&amp;#39;: &amp;#39;data&amp;#39;, &amp;#39;value&amp;#39;: tags }] } } } } } return self.client[&amp;#39;SoftLayer_Account&amp;#39;].getHardware(mask=object_mask, filter=object_filter) def gather_invoice_top_level_items(self): &amp;#34;&amp;#34;&amp;#34;Retrieves currently pending invoice with top-level invoice items on account &amp;#34;&amp;#34;&amp;#34; object_mask = &amp;#34;mask[invoiceTopLevelItems]&amp;#34; return self.</description>
    </item>
    <item>
      <title>Get Invoice for PowerShell</title>
      <link>https://sldn.softlayer.com/rest/getInvoicesPowershell/</link>
      <pubDate>Mon, 25 Apr 2016 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/rest/getInvoicesPowershell/</guid>
      <description>This powershell script will get the filename for the PDF and Excel invoices and save them locally. Requires PowerShell Version 4 for the Invoke-WebRequest and ConvertFrom-Json functions.&#xA;# Start SL script $MyScriptName = &amp;#34;_Call_SL_Rest&amp;#34; $HomeDir = pwd $date4file = get-date -uformat &amp;#34;%Y-%m-%d_%H%M%S&amp;#34; $log = &amp;#34;$HomeDir\&amp;#34;+$date4file+$MyScriptName+&amp;#34;.log&amp;#34; $BaseURL = &amp;#34;https://api.softlayer.com/rest/v3&amp;#34; Add-Content $log &amp;#34;$(Get-Date -format s) : Start&amp;#34; $SLUser = &amp;#34;SLUSERNAME&amp;#34; $SLapikey = &amp;#34;APIKEY&amp;#34; $LoginPair = &amp;#34;$($SLUser):$($SLapikey)&amp;#34; $encodedCreds = [System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($LoginPair)) $basicAuthValue = &amp;#34;Basic $encodedCreds&amp;#34; $Headers = @{ Authorization = $basicAuthValue } $GSTURL=&amp;#34;$($BaseURL)/SoftLayer_Account/getObject&amp;#34; #$GSTURL=&amp;#34;$($BaseURL)/SoftLayer_Account/getObject?</description>
    </item>
    <item>
      <title>Determining your next bill</title>
      <link>https://sldn.softlayer.com/python/nextinvoice/</link>
      <pubDate>Mon, 08 Feb 2016 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/python/nextinvoice/</guid>
      <description> import SoftLayer from pprint import pprint as pp client = SoftLayer.Client() nextInvoiceAmount = client[&amp;#39;SoftLayer_Account&amp;#39;].getNextInvoiceTotalAmount() pp(nextInvoiceAmount) </description>
    </item>
    <item>
      <title>Determining your next bill</title>
      <link>https://sldn.softlayer.com/php/getnextinvoice/</link>
      <pubDate>Fri, 29 Jan 2016 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/php/getnextinvoice/</guid>
      <description>&amp;lt;?php require_once &amp;#39;./vendor/autoload.php&amp;#39;; $apiUsername = &amp;#39;&amp;#39;; $apiKey = &amp;#39;&amp;#39;; $client = \SoftLayer\SoapClient::getClient(&amp;#39;SoftLayer_Account&amp;#39;, null, $apiUsername, $apiKey); try { $nextinvoice = $client-&amp;gt;getNextInvoiceTotalAmount(); print_r($nextinvoice); } catch (\Exception $e) { die(&amp;#39;Unable to get next invoice: &amp;#39; . $e-&amp;gt;getMessage()); } ?&amp;gt; </description>
    </item>
    <item>
      <title>Determining your next bill</title>
      <link>https://sldn.softlayer.com/ruby/nextinvoice/</link>
      <pubDate>Fri, 29 Jan 2016 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/ruby/nextinvoice/</guid>
      <description># SoftLayer library will look to see if these global variables are set when making a connection # more information here: https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L58 require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; client = SoftLayer::Client.new total_amount = client[&amp;#39;Account&amp;#39;].getNextInvoiceTotalAmount puts &amp;#34;Next invoice total amount: #{total_amount}&amp;#34; Example Output Next invoice total amount: 250.26 </description>
    </item>
    <item>
      <title>Retrieve the amount of your next invoice</title>
      <link>https://sldn.softlayer.com/perl/nextbilling/</link>
      <pubDate>Wed, 06 Jan 2016 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/perl/nextbilling/</guid>
      <description>use lib &amp;#34;./softlayer-api-perl-client/&amp;#34;; use SoftLayer::API::SOAP; use Data::Dumper; my $api_username = &amp;#34;x&amp;#34;; my $api_key = &amp;#34;a&amp;#34;; my $client = SoftLayer::API::SOAP-&amp;gt;new(&amp;#39;SoftLayer_Account&amp;#39;, undef, $api_username, $api_key); my $result; $result = $client-&amp;gt;getNextInvoiceTotalAmount(); print &amp;#34;Next Invoice Total: &amp;#34; . $result-&amp;gt;result . &amp;#34;\$\n&amp;#34; ; </description>
    </item>
    <item>
      <title>Get top level billing items for all owned accounts</title>
      <link>https://sldn.softlayer.com/php/get_invoice_top_level_items/</link>
      <pubDate>Sun, 24 May 2015 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/php/get_invoice_top_level_items/</guid>
      <description>With a given date range, get all the invoice details for all of the owned brands, and all of their owned accounts. The $filter can be used to get just a single accounts invoices, just take off the -&amp;gt;allOwnedAccounts bits&#xA;&amp;lt;?php require_once __DIR__.&amp;#39;/vendor/autoload.php&amp;#39;; /** * This class structure is mostly used so this can be run as a script. * Most of the print statements use fancy bash color codes to make things pretty */ class topBillingItems { function __construct() { $this-&amp;gt;apiUsername = &amp;#39;&amp;#39;; $this-&amp;gt;apiKey = &amp;#39;&amp;#39;; $this-&amp;gt;startDate = new DateTime(&amp;#39;2015-02-12T00:00:00&amp;#39;, new DateTimeZone(&amp;#39;CST&amp;#39;)); $this-&amp;gt;endDate = new DateTime(&amp;#39;2015-03-12T00:00:00&amp;#39;, new DateTimeZone(&amp;#39;CST&amp;#39;)); } /*!</description>
    </item>
    <item>
      <title>Get Invoices</title>
      <link>https://sldn.softlayer.com/php/get_invoice/</link>
      <pubDate>Sun, 22 Feb 2015 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/php/get_invoice/</guid>
      <description>&amp;lt;?php require_once __DIR__.&amp;#39;/vendor/autoload.php&amp;#39;; $apiUser = &amp;#39;&amp;#39;; $key = &amp;#39;&amp;#39;; //The date does need to be in this specific format $startDate = new DateTime(&amp;#39;2014-11-01T13:05:25&amp;#39;, new DateTimeZone(&amp;#39;CST&amp;#39;)); $endDate = new DateTime(&amp;#39;2014-12-01T09:53:51&amp;#39;, new DateTimeZone(&amp;#39;CST&amp;#39;)); $accountClient = \SoftLayer\SoapClient::getClient(&amp;#39;SoftLayer_Account&amp;#39;, null, $apiUser, $key); $filter = new stdClass(); $filter-&amp;gt;invoices = new stdClass(); // $filter-&amp;gt;invoices-&amp;gt;accountId = new stdClass(); // $filter-&amp;gt;invoices-&amp;gt;accountId-&amp;gt;operation = &amp;#39;= 391780&amp;#39;; $filter-&amp;gt;invoices-&amp;gt;createDate = new stdClass(); $filter-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;operation = &amp;#39;betweenDate&amp;#39;; $filter-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;options = array(); $filter-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;options[0] = new stdClass(); $filter-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;options[0]-&amp;gt;name = &amp;#39;startDate&amp;#39;; $filter-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;options[0]-&amp;gt;value = array($startDate-&amp;gt;format(&amp;#39;m/d/Y H:i:s&amp;#39;)); $filter-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;options[1] = new stdClass(); $filter-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;options[1]-&amp;gt;name = &amp;#39;endDate&amp;#39;; $filter-&amp;gt;invoices-&amp;gt;createDate-&amp;gt;options[1]-&amp;gt;value = array($endDate-&amp;gt;format(&amp;#39;m/d/Y H:i:s&amp;#39;)); $objectMask = new \SoftLayer\Common\ObjectMask(); $objectMask-&amp;gt;invoices; $accountClient-&amp;gt;setObjectFilter($filter); $accountClient-&amp;gt;setObjectMask($objectMask); $invoices = $accountClient-&amp;gt;getObject(); print_r($invoices); ?</description>
    </item>
  </channel>
</rss>
