<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>packages on SoftLayer API</title>
    <link>https://sldn.softlayer.com/tags/packages/</link>
    <description>Recent content in packages on SoftLayer API</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 20 Mar 2019 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://sldn.softlayer.com/tags/packages/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Advanced Bare Metal Server Ordering</title>
      <link>https://sldn.softlayer.com/python/orderBareMetal/</link>
      <pubDate>Wed, 20 Mar 2019 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/python/orderBareMetal/</guid>
      <description>Example of how to build an order for a bare metal server.&#xA;Find the package that you want to order. listServerPackages() will filter out all that are not bare metal servers Use getServerPrices() to find the item keyNames you want to include in your order. These price IDs can be included prices array directly, but I&amp;rsquo;ve included gatherPriceIds() to match up KeyNames to build a list of price ids. getServerPrices() will also show the locations available for ordering.</description>
    </item>
    <item>
      <title>List Packages</title>
      <link>https://sldn.softlayer.com/ruby/list_packages/</link>
      <pubDate>Mon, 12 Oct 2015 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/ruby/list_packages/</guid>
      <description>require &amp;#39;softlayer_api&amp;#39; require &amp;#39;pp&amp;#39; # Helper function to fetch through all results from SoftLayer api # using small page sizes and sleeping before every new page fetch. def fetch_all(service, method) records = []; offset = 0; limit = 10 loop do results = service.result_limit(offset, limit).send(method) records += results break if results.size &amp;lt; limit offset += limit sleep 3 end records end # Credentials to the SoftLayer API are grabbed from the config file by default.</description>
    </item>
    <item>
      <title>List Packages</title>
      <link>https://sldn.softlayer.com/python/list_packages/</link>
      <pubDate>Fri, 28 Aug 2015 00:00:00 +0000</pubDate>
      <guid>https://sldn.softlayer.com/python/list_packages/</guid>
      <description>import SoftLayer from pprint import pprint as pp class example(): def __init__(self): self.client = SoftLayer.Client() def main(self): &amp;#34;&amp;#34;&amp;#34; Gets ALL packages, and prints their name and price descriptions &amp;#34;&amp;#34;&amp;#34; mask = &amp;#34;mask[hourlyBillingAvailableFlag]&amp;#34; result = self.client[&amp;#39;Product_Package&amp;#39;].getAllObjects(); for product in result: print str(product[&amp;#39;id&amp;#39;]) + &amp;#34; - &amp;#34; + product[&amp;#39;name&amp;#39;] # result has a LOT of stuff in it, only print it out if you are ready # pp.pprint(result) def getPackage(self, package_id=0): &amp;#34;&amp;#34;&amp;#34; Gets a specific package and prints out some useful information &amp;#34;&amp;#34;&amp;#34; mask = &amp;#34;mask[items[prices]]&amp;#34; # Not all packages are available in all locations, you can check that with getLocations() # locations = self.</description>
    </item>
  </channel>
</rss>
